{"version":3,"sources":["utils/web3.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/actions.ts","config/constants/types.ts","contexts/RefreshContext.tsx","config/constants/contracts.ts","hooks/useRefresh.ts","utils/referralCode.ts","contexts/Localisation/translationsContext.ts","utils/web3React.ts","hooks/useAuth.ts","components/layout/Container.tsx","components/layout/Page.tsx","utils/wallet.ts","hooks/useGetDocumentTitlePrice.ts","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","config/constants/farms.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","utils/getRpcUrl.ts","state/hooks.ts","hooks/useParsedQueryString.ts","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","style/Global.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/configtw.ts","components/Menu/configcn.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","index.tsx"],"names":["RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","isNaN","masterchefABI","pid","info","totalAllocPoint","rbsPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","harvestInterval","data","fetchFarmUserAllowances","account","masterChefAddress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","nextHarvestUntil","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","fetchFarmUserCanHarvest","rawResults","canHarvest","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","userFarmCanHarvest","farmAllowance","allowance","PoolCategory","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","cake","masterChef","sousChef","referral","wbnb","lottery","lotteryNFT","mulltiCall","busd","cakeRouter","cakeFactory","usdc","usdt","useRefresh","useContext","fastRefresh","slowRefresh","hashids","Hashids","getCakeAddress","accountToReferralCode","encodeHex","substring","referralCodeToAccount","referralCode","hex","decodeHex","utils","isAddress","toChecksumAddress","defaultTranslationState","translations","setTranslations","TranslationsContext","ConnectorNames","rpcUrl","getNodeUrl","chainId","parseInt","process","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","Injected","WalletConnect","BSC","useAuth","useWeb3React","activate","deactivate","login","useCallback","connectorID","connector","error","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","console","log","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","logout","getItem","close","Container","styled","theme","mediaQueries","sm","Page","lg","provider","ethereum","request","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenAddress","tokenImage","type","options","image","tokenAdded","useGetDocumentTitlePrice","page","cakePriceUsd","usePriceCakeBusd","cakePriceUsdString","eq","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title","web3","multi","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","i","decodeFunctionResult","addresses","getWbnbAddress","getReferralAddress","getCakeRouterAddress","pools","sousId","tokenName","stakingTokenName","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","lpSymbol","contracts","BNB","ETH","USDT","USDC","fetchPoolsExtraConfigs","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","callsPoolLimitPerUser","callsWithdrawalInterval","sousChefABI","starts","ends","limits","intervals","cakePoolConfig","startBlock","endBlock","limit","poolLimitPerUser","withdrawalInterval","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","nextWithdrawalUntil","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingRBS","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","extraConfigs","totalStakings","liveData","extraConfig","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","userWithdrawalUntil","updateUserPendingReward","randomIndex","random","length","ZERO","useFetchPublicData","useDispatch","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","usePriceEthBusd","ethBnbPrice","usePriceEthBnb","bnbPrice","usePriceRbtBusd","rbtBnbPrice","usePriceRbtBnb","useTotalValue","cakePrice","ethPrice","val","CAKE","plus","useReferralCode","parsedQs","search","useLocation","useMemo","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","ref","isValid","Cookies","set","path","expires","useReferrerAddressFromCookie","get","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","setIsDark","prevState","JSON","stringify","dark","light","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","store","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","createWeb3ReactRoot","connectors","bsc","GlobalStyle","createGlobalStyle","colors","background","useTheme","StyledThemeCopntext","config","label","icon","href","items","configtw","configcn","Menu","props","useWallet","connect","reset","rbtPrice","links","langs","setLang","currentLang","rbsPriceUsd","rbsPriceLink","rbtPriceUsd","rbtPriceLink","Wrapper","PageLoader","Home","lazy","Farms","NotFound","Referrals","Account","EXPONENTIAL_AT","DECIMAL_PLACES","App","Global","fallback","exact","tokenMode","component","memo","MuiThemeProvider","createMuiTheme","Mode","ThemeProvider","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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AAO,OACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,SACPE,KAAM,qCAER,CACEF,MAAO,UACPE,KAAM,+BAER,CACEF,MAAO,UACPE,KAAM,uCAER,CACEF,MAAO,SACPE,KAAM,0CAER,CACEF,MAAO,SACPE,KAAM,6CC0BCE,EA9Ke,CAC5B,CACEJ,MAAO,eACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,aAYR,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IAER,CACEF,MAAO,qBACPC,KAAM,WACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,cACNC,KAAM,IAER,CACEF,MAAO,iCACPC,KAAM,UACNC,KAAM,IAER,CACEF,MAAO,2BACPC,KAAM,eACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IA0CR,CACEF,MAAO,2BACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,OACPE,KAAM,MASZ,CACEF,MAAO,eACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,SACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,IAER,CACEF,MAAO,2BACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,OCMCG,EA9Ke,CAC5B,CACEL,MAAO,eACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,IAYR,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,qBACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,e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","file":"static/js/main.1edb6e01.chunk.js","sourcesContent":["import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nexport { getWeb3, getContract, httpProvider }\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount\r\n      let lpTotalInQuoteToken\r\n      let tokenPriceVsQuote\r\n      if (farmConfig.isTokenOnly) {\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\r\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\r\n          tokenPriceVsQuote = new BigNumber(1)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\r\n      } else {\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(18))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        if (tokenAmount.comparedTo(0) > 0) {\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n          // In case the pair created without adding liquidity\r\n          tokenPriceVsQuote = tokenPriceVsQuote.isNaN() ? new BigNumber(0.1) : tokenPriceVsQuote\r\n        }\r\n      }\r\n\r\n      const [info, totalAllocPoint, rbsPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'rbsPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount,\r\n        lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n        quoteTokenBlanceLP: new BigNumber(quoteTokenBlanceLP).toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        poolWeight: poolWeight.toNumber(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n        harvestInterval: info.harvestInterval.toNumber(),\r\n        rbsPerBlock: new BigNumber(rbsPerBlock).toNumber(),\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => ({\r\n    stakedBalance: new BigNumber(stakedBalance[0]._hex).toJSON(),\r\n    nextHarvestUntil: stakedBalance.nextHarvestUntil.toNumber(),\r\n  }))\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingRBS',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n\r\nexport const fetchFarmUserCanHarvest = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'canHarvest',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawResults = await multicall(masterchefABI, calls)\r\n  return rawResults.map((canHarvest) => {\r\n    return !!canHarvest[0]\r\n  })\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n  fetchFarmUserCanHarvest,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n  const userFarmCanHarvest = await fetchFarmUserCanHarvest(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index].stakedBalance,\r\n      nextHarvestUntil: userStakedBalances[index].nextHarvestUntil,\r\n      canHarvest: userFarmCanHarvest[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'ETH' = 'ETH',\r\n  'USDC' = 'USDC',\r\n  'USDT' = 'USDT'\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  stakingTokenName: string\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  tokenDecimals: number\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","export default {\r\n  cake: {\r\n    56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    97: '',\r\n  },\r\n  masterChef: {\r\n    56: '0xE40b415C28eC411Cc616ca04a125d7e2b9913b58',\r\n    97: '',\r\n  },\r\n  sousChef: {\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n    97: '',\r\n  },\r\n  referral: {\r\n    56: '0x73A218CF80669AFE977B6b671AAd722b43B6D43D',\r\n    97: '',\r\n  },\r\n  wbnb: {\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    97: '',\r\n  },\r\n  lottery: {\r\n    56: '0xd75dc5a09bcfe4c508e2aa3320188c0742ee717a',\r\n    97: '',\r\n  },\r\n  lotteryNFT: {\r\n    56: '0x983c4fb762e6136a609431d4a93187c6f6ab886f',\r\n    97: '',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    97: '',\r\n  },\r\n  eth: {\r\n    56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    97: '',\r\n  },\r\n  cakeRouter: {\r\n    56: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\r\n    97: '',\r\n  },\r\n  cakeFactory: {\r\n    56: '0xca143ce32fe78f1f7019d7d551a6402fc5350c73',\r\n    97: '',\r\n  },\r\n  usdc: {\r\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    97: '',\r\n  },\r\n  usdt: {\r\n    56: '0x55d398326f99059fF775485246999027B3197955',\r\n    97: '',\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import Hashids from 'hashids'\r\nimport Web3 from 'web3'\r\nimport { getCakeAddress } from './addressHelpers'\r\n\r\nconst hashids = new Hashids(getCakeAddress(), 0, '0123456789abcdefghijklmnopqrstuvwxyz')\r\n\r\nexport const accountToReferralCode = (account: string) => {\r\n  return account ? hashids.encodeHex(account.substring(2)) : null\r\n}\r\n\r\nexport const referralCodeToAccount = (referralCode: string) => {\r\n  const hex = hashids.decodeHex(referralCode)\r\n  if (Web3.utils.isAddress(hex)) {\r\n    return Web3.utils.toChecksumAddress(hex)\r\n  }\r\n\r\n  return null\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n// import { ConnectorNames } from '@robustswap-libs/uikit'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID ?? '56')\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nexport enum ConnectorNames {\r\n  Injected = \"injected\",\r\n  WalletConnect = \"walletconnect\",\r\n  BSC = \"bsc\"\r\n}\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","import { useCallback } from 'react'\r\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames } from '@robustswap-libs/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  // const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(\"accountStatus\")\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              console.log(\"Provider Error\")\r\n              // toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              console.log(\"Authorization Error\")\r\n              // toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              console.log(error.name)\r\n              // toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        console.log(\"Unable to find connector\")\r\n        // toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [activate]\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem(\"accountStatus\")\r\n  }, [deactivate])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 24px;\r\n    margin-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  margin:0px;\r\n  margin-bottom:0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = (page: string) => {\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n\r\n  const cakePriceUsdString = cakePriceUsd.eq(0)\r\n    ? ''\r\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 3,\r\n      maximumFractionDigits: 3,\r\n    })}`\r\n\r\n  useEffect(() => {\r\n    document.title = `RobustSwap | ${cakePriceUsdString} | ${page}`\r\n  }, [cakePriceUsdString, page])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import addresses from 'config/constants/contracts'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n\r\nexport const getReferralAddress = () => {\r\n  return addresses.referral[chainId]\r\n}\r\n\r\nexport const getCakeRouterAddress = () => {\r\n  return addresses.cakeRouter[chainId]\r\n}","import { PoolCategory, PoolConfig } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 1,\r\n    tokenName: 'WBNB',\r\n    stakingTokenName: 'PANTHER',\r\n    stakingTokenAddress: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b5ed7b0f8bf5d2b485352e15a416092ca741c2c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://binance.org/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0005',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n  {\r\n    sousId: 2,\r\n    tokenName: 'BUSD',\r\n    stakingTokenName: 'PANTHER',\r\n    stakingTokenAddress: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf31cbe0b2bb2e704310c90a6f74300b3d4627ce8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.3',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'RBS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f8FD7B0A83E506d022d45ce0913BDD89596cf25',\r\n    },\r\n    tokenSymbol: 'RBS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'RBS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4B09CEA647a1029472f309fb633356b929D50714',\r\n    },\r\n    tokenSymbol: 'RBS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'RBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB3A3e8e9A1fBfDFB237442168A96eC84A331b1f',\r\n    },\r\n    tokenSymbol: 'RBT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x891e4554227385c5c740f9b483e935e3cbc29f01',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    tokenSymbol: 'BUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.ETH,\r\n    quoteTokenAdresses: contracts.eth,\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    tokenSymbol: 'MBOX',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    tokenSymbol: 'DOT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n    },\r\n    tokenSymbol: 'ADA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'USDC-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEc6557348085Aa57C72514D67070dC863C0a5A8c',\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.USDT,\r\n    quoteTokenAdresses: contracts.usdt,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2E28b9B74D6d99D4697e913b82B41ef1CAC51c6C',\r\n    },\r\n    tokenSymbol: 'TUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'ETH-USDC',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.USDC,\r\n    quoteTokenAdresses: contracts.usdc,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n    },\r\n    tokenSymbol: 'XRP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n    },\r\n    tokenSymbol: 'UNI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n    },\r\n    tokenSymbol: 'LINK',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 31,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109C8025F272414fd9e2faA805a583708A017f',\r\n    },\r\n    tokenSymbol: 'DOGE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'TRX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5D108578Be3750209d1b3A8f45FFee8C5a75146',\r\n    },\r\n    tokenSymbol: 'TRX',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 3,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'RBS',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f8FD7B0A83E506d022d45ce0913BDD89596cf25',\r\n    },\r\n    tokenSymbol: 'RBS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 4,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'RBT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB3A3e8e9A1fBfDFB237442168A96eC84A331b1f',\r\n    },\r\n    tokenSymbol: 'RBT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x891E4554227385c5c740F9B483E935E3CbC29F01',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'WBNB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    tokenSymbol: 'WBNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 23,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BTCB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33', // BTCB-BUSD LP\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 24,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'ETH',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc', // ETH-BNB LP\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 25,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6', // CAKE-BUSD LP\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 26,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BUSD',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16', // BUSD-BNB LP\r\n    },\r\n    tokenSymbol: 'BUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'USDT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00', // USDT-BUSD LP\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059fF775485246999027B3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 28,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'USDC',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1', // USDC-BUSD LP\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n]\r\n\r\nexport default farms","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsExtraConfigs = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n  const callsPoolLimitPerUser = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'poolLimitPerUser',\r\n    }\r\n  })\r\n  const callsWithdrawalInterval = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'withdrawalInterval',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n  const limits = await multicall(sousChefABI, callsPoolLimitPerUser)\r\n  const intervals = await multicall(sousChefABI, callsWithdrawalInterval)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    const limit = limits[index]\r\n    const interval = intervals[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n      poolLimitPerUser: new BigNumber(limit).toJSON(),\r\n      withdrawalInterval: new BigNumber(interval).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchWbnbBalance = async (account) => {\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  return bnbBalance\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: {\r\n        stakedBalance: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n        nextWithdrawalUntil: new BigNumber(userInfo[index].nextWithdrawalUntil._hex).toJSON(),\r\n      },\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return {\r\n    ...stakedBalances,\r\n    0: {\r\n      stakedBalance: new BigNumber(masterPoolAmount).toJSON(),\r\n      nextWithdrawalUntil: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingRBS('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsExtraConfigs, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const extraConfigs = await fetchPoolsExtraConfigs()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const extraConfig = extraConfigs.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...extraConfig,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId].stakedBalance,\r\n    nextWithdrawalUntil: stakedBalances[pool.sousId].nextWithdrawalUntil,\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId].stakedBalance }))\r\n  dispatch(\r\n    updatePoolsUserData({ sousId, field: 'userWithdrawalUntil', value: stakedBalances[sousId].userWithdrawalUntil }),\r\n  )\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\nimport useParsedQueryString from '../hooks/useParsedQueryString'\r\nimport { referralCodeToAccount } from '../utils/referralCode'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    nextHarvestUntil: farm.userData ? farm.userData.nextHarvestUntil : 0,\r\n    canHarvest: farm.userData ? farm.userData.canHarvest : false,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 6 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 0 // RBS-BUSD CAKE-LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceRbtBnb = (): BigNumber => {\r\n  const pid = 2 // RBT-BNB CAKE LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBnb = (): BigNumber => {\r\n  const pid = 8 // ETH-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBnb = (): BigNumber => {\r\n  const pid = 2 // RBT-BNB CAKE-LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBusd = (): BigNumber => {\r\n  const ethBnbPrice = usePriceEthBnb()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  return ethBnbPrice && bnbPrice ? ethBnbPrice.times(bnbPrice) : ZERO\r\n}\r\n\r\nexport const usePriceRbtBusd = (): BigNumber => {\r\n  const rbtBnbPrice = usePriceRbtBnb()\r\n  const bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  return rbtBnbPrice && bnbPrice ? rbtBnbPrice.times(bnbPrice) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  let bnbPrice = usePriceBnbBusd()\r\n  bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  const cakePrice = usePriceCakeBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken && !new BigNumber(farm.lpTotalInQuoteToken).isNaN()) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n        val = ethPrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport const useReferralCode = (): string => {\r\n  const parsedQs = useParsedQueryString()\r\n  const referralCode = typeof parsedQs.ref === 'string' ? parsedQs.ref : ''\r\n  const account = referralCodeToAccount(referralCode)\r\n  const isValid = referralCode && account\r\n  // console.log(referralCode, account, isValid)\r\n\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      try {\r\n        Cookies.set('referral_code', referralCode, {\r\n          path: '/',\r\n          expires: 365,\r\n        })\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }, [isValid, referralCode])\r\n\r\n  return isValid ? referralCode : null\r\n}\r\n\r\nexport const useReferrerAddressFromCookie = (): string => {\r\n  const referralCode = Cookies.get('referral_code')\r\n  const account = referralCodeToAccount(referralCode)\r\n  const zeroAddress = '0x0000000000000000000000000000000000000000'\r\n  return typeof account === 'string' ? account : zeroAddress\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pantherSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\n// const fileId = 8\r\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\n// const stringTranslationsApi = new StringTranslations({\r\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n// })\r\n\r\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n// }\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then((r) => r.json())\r\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error('ERROR')\r\n          console.error(e)\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@robustswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    // const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    // return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n    return true\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState || true\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\n\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    pools: poolsReducer\r\n  }\r\n})\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\r\nimport { ModalProvider } from '@robustswap-libs/uikit'\r\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\r\nimport * as bsc from '@binance-chain/bsc-use-wallet'\r\nimport { Provider } from 'react-redux'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport store from 'state'\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(\"Network\")\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  const rpcUrl = getRpcUrl()\r\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\r\n  return (\r\n    // <Web3ReactProvider getLibrary={getLibrary}>\r\n    //   <Web3ProviderNetwork getLibrary={getLibrary}>\r\n    <Provider store={store}>\r\n      <ThemeContextProvider>\r\n        <LanguageContextProvider>\r\n          <bsc.UseWalletProvider\r\n            chainId={chainId}\r\n            connectors={{\r\n              walletconnect: { rpcUrl },\r\n              bsc,\r\n            }}\r\n          >\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </bsc.UseWalletProvider>\r\n        </LanguageContextProvider>\r\n      </ThemeContextProvider>\r\n    </Provider>\r\n    //   </Web3ProviderNetwork>\r\n    // </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { RobustTheme } from '@robustswap-libs/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends RobustTheme { }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Exchange',\r\n    icon: 'TradeIcon',\r\n    href: 'https://exchange.robustswap.com',\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: 'Referrals',\r\n    icon: 'ReferralIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: 'Audit',\r\n    icon: 'AuditIcon',\r\n    href: \"https://docs.robustswap.com/security/audits\"\r\n  },\r\n  {\r\n    label: \"Listings\",\r\n    icon: \"ListingIcon\",\r\n    items: [\r\n      {\r\n        label: \"BSCScan\",\r\n        href: \"https://bscscan.com/address/0x95336aC5f7E840e7716781313e1607F7C9D6BE25\",\r\n      },\r\n      {\r\n        label: \"DappRadar\",\r\n        href: \"https://docs.robustswap.com/more/links\",\r\n      },\r\n      {\r\n        label: \"Coingecko\",\r\n        href: \"https://docs.robustswap.com/more/links\",\r\n      },\r\n      {\r\n        label: \"CoinMarketCap\",\r\n        href: \"https://docs.robustswap.com/more/links\",\r\n      },\r\n      {\r\n        label: \"LiveCoinWatch\",\r\n        href: \"https://docs.robustswap.com/more/links\",\r\n      },\r\n      {\r\n        label: \"Vfat\",\r\n        href: \"https://vfat-tools.robustswap.com/\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Features\",\r\n    icon: \"FeatureIcon\",\r\n    items: [\r\n      {\r\n        label: \"Anti-Bot\",\r\n        href: \"https://docs.robustswap.com/tokenomics/anti-bot\",\r\n      },\r\n      {\r\n        label: \"Automatic Liquidity\",\r\n        href: \"https://docs.robustswap.com/tokenomics/automatic-liquidity\",\r\n      },\r\n      {\r\n        label: \"Anti-Dumping\",\r\n        href: \"https://docs.robustswap.com/tokenomics/anti-dumping\",\r\n      },\r\n      {\r\n        label: \"Smart Burning\",\r\n        href: \"https://docs.robustswap.com/tokenomics/smart-burning\",\r\n      },\r\n      {\r\n        label: \"Harvest Interval\",\r\n        href: \"https://docs.robustswap.com/tokenomics/harvest-interval\",\r\n      },\r\n      {\r\n        label: \"Referral Reward\",\r\n        href: \"https://docs.robustswap.com/get-rbs/referral\",\r\n      },\r\n      {\r\n        label: \"Timelock\",\r\n        href: \"https://docs.robustswap.com/security/timelock\",\r\n      },\r\n      {\r\n        label: \"Migrator Code\",\r\n        href: \"https://docs.robustswap.com/security/migrator-code\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    label: \"Charts\",\r\n    icon: \"ChartIcon\",\r\n    items: [\r\n      {\r\n        label: \"Poocoin\",\r\n        href: \"https://poocoin.app/tokens/0x95336ac5f7e840e7716781313e1607f7c9d6be25\",\r\n      },\r\n      {\r\n        label: \"DexTools\",\r\n        href: \"https://www.dextools.io/app/bsc/pair-explorer/0x4f8fd7b0a83e506d022d45ce0913bdd89596cf25\",\r\n      },\r\n      {\r\n        label: \"DexGuru\",\r\n        href: \"https://dex.guru/token/0x95336ac5f7e840e7716781313e1607f7c9d6be25-bsc\",\r\n      },\r\n      {\r\n        label: \"Bogged\",\r\n        href: \"https://charts.bogged.finance/0x95336aC5f7E840e7716781313e1607F7C9D6BE25\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"More\",\r\n    icon: \"MoreIcon\",\r\n    items: [\r\n      {\r\n        label: \"GitHub\",\r\n        href: \"https://github.com/robustprotocol\",\r\n      },\r\n      {\r\n        label: \"GitBook\",\r\n        href: \"https://docs.robustswap.com\",\r\n      },\r\n      {\r\n        label: \"Roadmap\",\r\n        href: \"https://docs.robustswap.com/roadmap\",\r\n      },\r\n      {\r\n        label: \"Voting\",\r\n        href: \"https://docs.robustswap.com/more/links\",\r\n      },\r\n      {\r\n        label: \"Videos\",\r\n        href: \"https://docs.robustswap.com/more/links\",\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default config","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst configtw: MenuEntry[] = [\r\n  {\r\n    label: \"\\u9996\\u9801\",\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: \"\\u4ea4\\u6613\",\r\n    icon: 'TradeIcon',\r\n    href: '/exchange',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u514c\\u63db\",\r\n    //     href: 'https://dex.robustswap.com/',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u6d41\\u52d5\\u6027\",\r\n    //     href: 'https://dex.robustswap.com/#/pool',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: \"\\u8fb2\\u5834\",\r\n    icon: 'FarmIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"\\u8cc7\\u91d1\\u6c60\",\r\n    icon: 'PoolIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"叢林\",\r\n    icon: 'JungleIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: \"\\u5f69\\u5238\",\r\n    icon: 'LotteryIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"首次豹發行\",\r\n    icon: 'IfoIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"推薦總數\",\r\n    icon: 'ReferralIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: \"審計\",\r\n    icon: 'ShieldIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"信息\",\r\n    icon: 'InfoIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u6982\\u89bd\",\r\n    //     href: 'https://robustswap.info',\r\n    //   },\r\n    //   {\r\n    //     label: \"代幣\",\r\n    //     href: 'https://robustswap.info/tokens',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u4ee3\\u5e63\",\r\n    //     href: 'https://robustswap.info/pairs',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u5e33\\u6236\",\r\n    //     href: 'https://robustswap.info/accounts',\r\n    //   },\r\n    // ],\r\n  },\r\n  // {\r\n  //   label: \"產品\",\r\n  //   icon: 'FeatureIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: \"自動流動性\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-liquidity',\r\n  //     },\r\n  //     {\r\n  //       label: \"自動燃燒\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-burning',\r\n  //     },\r\n  //     {\r\n  //       label: \"收穫鎖定\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/harvest-lockup',\r\n  //     },\r\n  //     {\r\n  //       label: \"反鯨魚\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/anti-whale',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: \"商品清單\",\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'DappRadar',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'LiveCoinWatch',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'Vfat',\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'NFT',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/nft',\r\n  // },\r\n  {\r\n    label: \"\\u66f4\\u591a\",\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6587\\u4ef6\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"發行計畫\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u7db2\\u8a8c\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6295\\u7968\",\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default configtw\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst configcn: MenuEntry[] = [\r\n  {\r\n    label: \"\\u9996\\u9875\",\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: \"\\u4ea4\\u6613\",\r\n    icon: 'TradeIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u5151\\u6362\",\r\n    //     href: '',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u6d41\\u52a8\\u6027\",\r\n    //     href: '',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: \"\\u519c\\u573a\",\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: \"\\u8d44\\u91d1\\u6c60\",\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: \"丛林\",\r\n    icon: 'JungleIcon',\r\n    href: '/jungles',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"\\u5f69\\u7968\",\r\n    icon: 'LotteryIcon',\r\n    href: '/lottery',\r\n  },\r\n  {\r\n    label: \"首次豹发行\",\r\n    icon: 'IfoIcon',\r\n    href: '/ipo',\r\n  },\r\n  {\r\n    label: \"推荐总数\",\r\n    icon: 'ReferralIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"审计\",\r\n    icon: 'ShieldIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"信息\",\r\n    icon: 'InfoIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u6982\\u89c8\",\r\n    //     href: 'https://robustswap.info',\r\n    //   },\r\n    //   {\r\n    //     label: \"代币\",\r\n    //     href: 'https://robustswap.info/tokens',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u4ee3\\u5e01\",\r\n    //     href: 'https://robustswap.info/pairs',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u8d26\\u6237\",\r\n    //     href: 'https://robustswap.info/accounts',\r\n    //   },\r\n    // ],\r\n  },\r\n  // {\r\n  //   label: \"产品\",\r\n  //   icon: 'FeatureIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: \"自动流动性\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-liquidity',\r\n  //     },\r\n  //     {\r\n  //       label: \"自动燃烧\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-burning',\r\n  //     },\r\n  //     {\r\n  //       label: \"收获锁定\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/harvest-lockup',\r\n  //     },\r\n  //     {\r\n  //       label: \"反鲸鱼\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/anti-whale',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: \"商品清单\",\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'DappRadar',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'LiveCoinWatch',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'Vfat',\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'NFT',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/nft',\r\n  // },\r\n  {\r\n    label: \"\\u66f4\\u591a\",\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6587\\u6863\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"发行计画\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u535a\\u5ba2\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6295\\u7968\",\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default configcn\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { Menu as UikitMenu } from '@robustswap-libs/uikit'\r\nimport config from './config'\r\nimport configtw from './configtw'\r\nimport configcn from './configcn'\r\n\r\nconst Menu = (props) => {\r\n  const { connect, reset } = useWallet()\r\n  const { login, logout } = useAuth()\r\n  const { account } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const rbtPrice = usePriceRbtBusd()\r\n  let links = config;\r\n  if (selectedLanguage.code === 'zh-CN') {\r\n    links = configcn;\r\n  }\r\n  else if (selectedLanguage.code === 'zh-TW') {\r\n    links = configtw;\r\n  }\r\n\r\n  console.log(props)\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      rbsPriceUsd={cakePriceUsd}\r\n      rbsPriceLink=\"https://bscscan.com/token/0x95336aC5f7E840e7716781313e1607F7C9D6BE25\"\r\n      rbtPriceUsd={rbtPrice}\r\n      rbtPriceLink=\"https://bscscan.com/token/0x891e4554227385c5c740f9b483e935e3cbc29f01\"\r\n      links={links}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@robustswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\n\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Referrals = lazy(() => import('./views/Referrals'))\r\nconst Account = lazy(() => import('./views/Account'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { connect } = useWallet()\r\n  const { account } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n  useGetDocumentTitlePrice('Home')\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            <Route path=\"/referrals\" exact>\r\n              <Referrals />\r\n            </Route>\r\n            <Route path=\"/account\">\r\n              <Account />\r\n            </Route>\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from '@material-ui/core/styles'\r\nimport Providers from './Providers'\r\nimport App from './App'\r\nimport Mode from './style/theme.json'\r\nimport \"./assets/css/font.css\"\r\n\r\ninterface MuiThemeProviderProps {\r\n  children: any\r\n}\r\n\r\nconst MuiThemeProvider = ({ children }: MuiThemeProviderProps) => {\r\n  const themeMode = 'dark';\r\n  const theme = createMuiTheme((Mode as any)[themeMode]);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <MuiThemeProvider>\r\n        <CssBaseline />\r\n        <App />\r\n      </MuiThemeProvider>\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)"],"sourceRoot":""}