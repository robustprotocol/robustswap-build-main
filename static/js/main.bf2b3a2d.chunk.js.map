{"version":3,"sources":["config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","contexts/BlockContext.tsx","state/multicalls/index.ts","state/index.ts","Providers.tsx","style/Global.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/configtw.ts","components/Menu/configcn.ts","components/Menu/index.tsx","components/PageLoader.tsx","hooks/useGetDocumentTitlePrice.ts","App.tsx","index.tsx","utils/referralCode.ts","state/hooks.ts","hooks/useParsedQueryString.ts","utils/web3.ts","config/constants/types.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/getRpcUrl.ts","state/actions.ts","config/constants/contracts.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","contexts/Localisation/translationsContext.ts","components/layout/Container.tsx","components/layout/Page.tsx","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","config/constants/farms.ts","state/pools/fetchPools.ts","state/pools/index.ts","state/pools/fetchPoolsUser.ts"],"names":["EN","code","language","allLanguages","CACHE_KEY","LanguageContext","React","createContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","children","useState","translations","setTranslations","useEffect","storedLangCode","localStorage","getItem","storedLang","filter","getStoredLang","fetch","then","r","json","translationApiResponse","data","length","catch","e","console","error","Provider","value","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","setIsDark","prevState","JSON","stringify","theme","dark","light","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","interval","setInterval","a","eth","getBlockNumber","blockNumber","current","clearInterval","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","address","Error","callData","multiCallSlice","createSlice","name","initialState","callResults","reducers","addMulticallListeners","state","payload","calls","chainId","options","blocksPerFetch","listeners","callListeners","forEach","callKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","Object","keys","actions","store","configureStore","devTools","process","reducer","farms","farmsReducer","pools","poolsReducer","multicalls","Providers","rpcUrl","getRpcUrl","parseInt","connectors","walletconnect","bsc","RefreshContext","GlobalStyle","createGlobalStyle","colors","background","useTheme","useContext","StyledThemeCopntext","config","label","icon","href","items","configtw","configcn","Menu","props","useWallet","connect","reset","account","cakePriceUsd","usePriceCakeBusd","links","login","logout","currentLang","langs","setLang","toNumber","cakePriceLink","getCakeAddress","Wrapper","styled","Page","PageLoader","useGetDocumentTitlePrice","cakePriceUsdString","eq","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title","Home","lazy","Farms","Exchange","Liquidity","NotFound","Referrals","Account","BigNumber","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","useFetchPublicData","Global","fallback","path","exact","tokenMode","component","memo","MuiThemeProvider","createMuiTheme","Mode","ThemeProvider","ReactDOM","render","StrictMode","CssBaseline","getElementById","hashids","Hashids","referralCodeToAccount","referralCode","hex","decodeHex","Web3","utils","isAddress","toChecksumAddress","ZERO","dispatch","useDispatch","slowRefresh","useRefresh","fetchFarmsPublicDataAsync","useFarms","useSelector","useFarmFromPid","pid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","nextHarvestUntil","canHarvest","earnings","usePriceBnbBusd","tokenPriceVsQuote","usePriceEthBusd","ethBnbPrice","usePriceEthBnb","bnbPrice","times","usePriceRbtBusd","rbtBnbPrice","usePriceRbtBnb","div","useTotalValue","cakePrice","ethPrice","i","lpTotalInQuoteToken","isNaN","val","quoteTokenSymbol","QuoteToken","BNB","CAKE","ETH","plus","useReferralCode","parsedQs","search","useLocation","useMemo","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","ref","isValid","Cookies","set","expires","useReferrerAddressFromCookie","get","RPC_URL","httpProvider","providers","HttpProvider","timeout","getContract","abi","contractOptions","Contract","PoolCategory","fetchFarms","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","tokenAddresses","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","pow","tokenSymbol","BUSD","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","rbsPerBlock","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","harvestInterval","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","fetchFarmUserCanHarvest","rawResults","farmsSlice","setFarmsPublicData","action","liveFarmsData","liveFarmData","setFarmUserData","arrayOfUserDataObjects","userDataEl","index","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","userFarmCanHarvest","farmAllowance","nodes","getNodeUrl","randomIndex","random","cake","masterChef","sousChef","referral","wbnb","lottery","lotteryNFT","mulltiCall","busd","cakeRouter","cakeFactory","usdc","usdt","slow","fast","RefreshContextProvider","setSlow","setFast","prev","fastRefresh","defaultTranslationState","TranslationsContext","Container","mediaQueries","sm","lg","multi","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","addresses","getWbnbAddress","getReferralAddress","getCakeRouterAddress","sousId","tokenName","stakingTokenName","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","lpSymbol","contracts","USDT","USDC","fetchPoolsExtraConfigs","poolsWithEnd","poolsConfig","p","callsStartBlock","poolConfig","callsEndBlock","callsPoolLimitPerUser","callsWithdrawalInterval","sousChefABI","starts","ends","limits","intervals","cakePoolConfig","startBlock","endBlock","limit","poolLimitPerUser","withdrawalInterval","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","PoolsSlice","setPoolsPublicData","livePoolsData","pool","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","extraConfigs","totalStakings","liveData","extraConfig","totalStaking","fetchPoolsUserDataAsync","fetchPoolsAllowance","allowances","fetchUserBalances","stakingTokenBalances","fetchUserStakeBalances","stakedBalances","fetchUserPendingRewards","pendingRewards","stakingTokenBalance","nextWithdrawalUntil","pendingReward","updateUserAllowance","updateUserBalance","tokenBalances","updateUserStakedBalance","userWithdrawalUntil","updateUserPendingReward","bnbPools","nonMasterPools","masterChefContract","masterChefABI","reduce","acc","tokenBalancesRaw","getBalance","bnbBalance","bnbBalances","fetchWbnbBalance","userInfo","amount","masterPoolAmount","pendingRBS"],"mappings":"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KAAM,cAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,QACPC,KAAM,YACNC,KAAM,WAER,CACEF,MAAO,WACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,aAER,CACEF,MAAO,YACPE,KAAM,eAER,CACEF,MAAO,YACPE,KAAM,eAER,CACEF,MAAO,gBACPE,KAAM,mBAER,CACEF,MAAO,gBACPE,KAAM,mBAER,CACEF,MAAO,OACPE,KAAM,wCAIZ,CACEF,MAAO,WACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,WACPE,KAAM,mDAER,CACEF,MAAO,sBACPE,KAAM,8DAER,CACEF,MAAO,eACPE,KAAM,uDAER,CACEF,MAAO,gBACPE,KAAM,wDAER,CACEF,MAAO,mBACPE,KAAM,2DAER,CACEF,MAAO,kBACPE,KAAM,gDAER,CACEF,MAAO,WACPE,KAAM,iDAER,CACEF,MAAO,gBACPE,KAAM,wDAIZ,CACEF,MAAO,SACPC,KAAM,YACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,YAER,CACEF,MAAO,WACPE,KAAM,sBAER,CACEF,MAAO,UACPE,KAAM,kBAER,CACEF,MAAO,SACPE,KAAM,sBAIZ,CACEF,MAAO,OACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,SACPE,KAAM,qCAER,CACEF,MAAO,UACPE,KAAM,+BAER,CACEF,MAAO,UACPE,KAAM,uCAER,CACEF,MAAO,SACPE,KAAM,YAER,CACEF,MAAO,SACPE,KAAM,eC0BCE,GA9Ke,CAC5B,CACEJ,MAAO,eACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,aAYR,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IAER,CACEF,MAAO,qBACPC,KAAM,WACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,cACNC,KAAM,IAER,CACEF,MAAO,iCACPC,KAAM,UACNC,KAAM,IAER,CACEF,MAAO,2BACPC,KAAM,eACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IA0CR,CACEF,MAAO,2BACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,OACPE,KAAM,MASZ,CACEF,MAAO,eACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,SACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,IAER,CACEF,MAAO,2BACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,OCMCG,GA9Ke,CAC5B,CACEL,MAAO,eACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,IAYR,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,qBACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,YAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,cACNC,KAAM,YAER,CACEF,MAAO,iCACPC,KAAM,UACNC,KAAM,QAER,CACEF,MAAO,2BACPC,KAAM,eACNC,KAAM,cAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IA0CR,CACEF,MAAO,2BACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,OACPE,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","file":"static/js/main.bf2b3a2d.chunk.js","sourcesContent":["export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pantherSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\n// const fileId = 8\r\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\n// const stringTranslationsApi = new StringTranslations({\r\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n// })\r\n\r\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n// }\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then((r) => r.json())\r\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error('ERROR')\r\n          console.error(e)\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@robustswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    // const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    // return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n    return true\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState || true\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Call, MulticallsState } from 'state/types'\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nfunction toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nconst initialState: MulticallsState = {\r\n  callResults: {}\r\n}\r\n\r\nexport const multiCallSlice = createSlice({\r\n  name: 'multicalls',\r\n  initialState,\r\n  reducers: {\r\n    addMulticallListeners: (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallsState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    },\r\n    removeMulticallListeners: (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallsState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n\r\n      if (!listeners[chainId]) return\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        if (!listeners[chainId][callKey]) return\r\n        if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n        if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n          delete listeners[chainId][callKey][blocksPerFetch]\r\n        } else {\r\n          listeners[chainId][callKey][blocksPerFetch]--\r\n        }\r\n      })\r\n    },\r\n    fetchingMulticallResults: (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    },\r\n    errorFetchingMulticallResults: (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    },\r\n    updateMulticallResults: (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach(callKey => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber\r\n        }\r\n      })\r\n    }\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addMulticallListeners, removeMulticallListeners, fetchingMulticallResults, errorFetchingMulticallResults, updateMulticallResults } = multiCallSlice.actions\r\n\r\nexport default multiCallSlice.reducer","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport multicalls from './multicalls'\r\n\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    multicalls\r\n  }\r\n})\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport { ModalProvider } from '@robustswap-libs/uikit'\r\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\r\nimport * as bsc from '@binance-chain/bsc-use-wallet'\r\nimport { Provider } from 'react-redux'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  const rpcUrl = getRpcUrl()\r\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeContextProvider>\r\n        <LanguageContextProvider>\r\n          <bsc.UseWalletProvider\r\n            chainId={chainId}\r\n            connectors={{\r\n              walletconnect: { rpcUrl },\r\n              bsc,\r\n            }}\r\n          >\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </bsc.UseWalletProvider>\r\n        </LanguageContextProvider>\r\n      </ThemeContextProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { RobustTheme } from '@robustswap-libs/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends RobustTheme { }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Exchange',\r\n    icon: 'TradeIcon',\r\n    href: 'https://exchange.robustswap.fi',\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: 'Referrals',\r\n    icon: 'ReferralIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: 'Audit',\r\n    icon: 'AuditIcon',\r\n    href: \"/_audit\"\r\n  },\r\n  {\r\n    label: \"Listings\",\r\n    icon: \"ListingIcon\",\r\n    items: [\r\n      {\r\n        label: \"BSCScan\",\r\n        href: \"/_bscscan\",\r\n      },\r\n      {\r\n        label: \"DappRadar\",\r\n        href: \"/_dappradar\",\r\n      },\r\n      {\r\n        label: \"Coingecko\",\r\n        href: \"/_coingecko\",\r\n      },\r\n      {\r\n        label: \"CoinMarketCap\",\r\n        href: \"/_coinmarketcap\",\r\n      },\r\n      {\r\n        label: \"LiveCoinWatch\",\r\n        href: \"/_livecoinwatch\",\r\n      },\r\n      {\r\n        label: \"Vfat\",\r\n        href: \"https://vfat-tools.robustswap.com/\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Features\",\r\n    icon: \"FeatureIcon\",\r\n    items: [\r\n      {\r\n        label: \"Anti-Bot\",\r\n        href: \"https://docs.robustswap.com/tokenomics/anti-bot\",\r\n      },\r\n      {\r\n        label: \"Automatic Liquidity\",\r\n        href: \"https://docs.robustswap.com/tokenomics/automatic-liquidity\",\r\n      },\r\n      {\r\n        label: \"Anti-Dumping\",\r\n        href: \"https://docs.robustswap.com/tokenomics/anti-dumping\",\r\n      },\r\n      {\r\n        label: \"Smart Burning\",\r\n        href: \"https://docs.robustswap.com/tokenomics/smart-burning\",\r\n      },\r\n      {\r\n        label: \"Harvest Interval\",\r\n        href: \"https://docs.robustswap.com/tokenomics/harvest-interval\",\r\n      },\r\n      {\r\n        label: \"Referral Reward\",\r\n        href: \"https://docs.robustswap.com/get-rbs/referral\",\r\n      },\r\n      {\r\n        label: \"Timelock\",\r\n        href: \"https://docs.robustswap.com/security/timelock\",\r\n      },\r\n      {\r\n        label: \"Migrator Code\",\r\n        href: \"https://docs.robustswap.com/security/migrator-code\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    label: \"Charts\",\r\n    icon: \"ChartIcon\",\r\n    items: [\r\n      {\r\n        label: \"Poocoin\",\r\n        href: \"/_charts\",\r\n      },\r\n      {\r\n        label: \"DexTools\",\r\n        href: \"/_charts/_dextools\",\r\n      },\r\n      {\r\n        label: \"DexGuru\",\r\n        href: \"/_charts/_guru\",\r\n      },\r\n      {\r\n        label: \"Bogged\",\r\n        href: \"/_charts/_bogged\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"More\",\r\n    icon: \"MoreIcon\",\r\n    items: [\r\n      {\r\n        label: \"GitHub\",\r\n        href: \"https://github.com/robustprotocol\",\r\n      },\r\n      {\r\n        label: \"GitBook\",\r\n        href: \"https://docs.robustswap.com\",\r\n      },\r\n      {\r\n        label: \"Roadmap\",\r\n        href: \"https://docs.robustswap.com/roadmap\",\r\n      },\r\n      {\r\n        label: \"Voting\",\r\n        href: \"/_voting\",\r\n      },\r\n      {\r\n        label: \"Videos\",\r\n        href: \"/_videos\",\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default config","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst configtw: MenuEntry[] = [\r\n  {\r\n    label: \"\\u9996\\u9801\",\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: \"\\u4ea4\\u6613\",\r\n    icon: 'TradeIcon',\r\n    href: '/exchange',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u514c\\u63db\",\r\n    //     href: 'https://dex.robustswap.com/',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u6d41\\u52d5\\u6027\",\r\n    //     href: 'https://dex.robustswap.com/#/pool',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: \"\\u8fb2\\u5834\",\r\n    icon: 'FarmIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"\\u8cc7\\u91d1\\u6c60\",\r\n    icon: 'PoolIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"叢林\",\r\n    icon: 'JungleIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: \"\\u5f69\\u5238\",\r\n    icon: 'LotteryIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"首次豹發行\",\r\n    icon: 'IfoIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"推薦總數\",\r\n    icon: 'ReferralIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: \"審計\",\r\n    icon: 'ShieldIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"信息\",\r\n    icon: 'InfoIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u6982\\u89bd\",\r\n    //     href: 'https://robustswap.info',\r\n    //   },\r\n    //   {\r\n    //     label: \"代幣\",\r\n    //     href: 'https://robustswap.info/tokens',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u4ee3\\u5e63\",\r\n    //     href: 'https://robustswap.info/pairs',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u5e33\\u6236\",\r\n    //     href: 'https://robustswap.info/accounts',\r\n    //   },\r\n    // ],\r\n  },\r\n  // {\r\n  //   label: \"產品\",\r\n  //   icon: 'FeatureIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: \"自動流動性\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-liquidity',\r\n  //     },\r\n  //     {\r\n  //       label: \"自動燃燒\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-burning',\r\n  //     },\r\n  //     {\r\n  //       label: \"收穫鎖定\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/harvest-lockup',\r\n  //     },\r\n  //     {\r\n  //       label: \"反鯨魚\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/anti-whale',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: \"商品清單\",\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'DappRadar',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'LiveCoinWatch',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'Vfat',\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'NFT',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/nft',\r\n  // },\r\n  {\r\n    label: \"\\u66f4\\u591a\",\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6587\\u4ef6\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"發行計畫\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u7db2\\u8a8c\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6295\\u7968\",\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default configtw\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst configcn: MenuEntry[] = [\r\n  {\r\n    label: \"\\u9996\\u9875\",\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: \"\\u4ea4\\u6613\",\r\n    icon: 'TradeIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u5151\\u6362\",\r\n    //     href: '',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u6d41\\u52a8\\u6027\",\r\n    //     href: '',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: \"\\u519c\\u573a\",\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: \"\\u8d44\\u91d1\\u6c60\",\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: \"丛林\",\r\n    icon: 'JungleIcon',\r\n    href: '/jungles',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"\\u5f69\\u7968\",\r\n    icon: 'LotteryIcon',\r\n    href: '/lottery',\r\n  },\r\n  {\r\n    label: \"首次豹发行\",\r\n    icon: 'IfoIcon',\r\n    href: '/ipo',\r\n  },\r\n  {\r\n    label: \"推荐总数\",\r\n    icon: 'ReferralIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"审计\",\r\n    icon: 'ShieldIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"信息\",\r\n    icon: 'InfoIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u6982\\u89c8\",\r\n    //     href: 'https://robustswap.info',\r\n    //   },\r\n    //   {\r\n    //     label: \"代币\",\r\n    //     href: 'https://robustswap.info/tokens',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u4ee3\\u5e01\",\r\n    //     href: 'https://robustswap.info/pairs',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u8d26\\u6237\",\r\n    //     href: 'https://robustswap.info/accounts',\r\n    //   },\r\n    // ],\r\n  },\r\n  // {\r\n  //   label: \"产品\",\r\n  //   icon: 'FeatureIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: \"自动流动性\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-liquidity',\r\n  //     },\r\n  //     {\r\n  //       label: \"自动燃烧\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-burning',\r\n  //     },\r\n  //     {\r\n  //       label: \"收获锁定\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/harvest-lockup',\r\n  //     },\r\n  //     {\r\n  //       label: \"反鲸鱼\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/anti-whale',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: \"商品清单\",\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'DappRadar',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'LiveCoinWatch',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'Vfat',\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'NFT',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/nft',\r\n  // },\r\n  {\r\n    label: \"\\u66f4\\u591a\",\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6587\\u6863\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"发行计画\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u535a\\u5ba2\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6295\\u7968\",\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default configcn\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { Menu as UikitMenu } from '@robustswap-libs/uikit'\r\nimport config from './config'\r\nimport configtw from './configtw'\r\nimport configcn from './configcn'\r\nimport { getCakeAddress } from '../../utils/addressHelpers'\r\n\r\nconst Menu = (props) => {\r\n  const { connect, reset } = useWallet()\r\n  const { account } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  let links = config;\r\n  if (selectedLanguage.code === 'zh-CN') {\r\n    links = configcn;\r\n  }\r\n  else if (selectedLanguage.code === 'zh-TW') {\r\n    links = configtw;\r\n  }\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      cakePriceLink={`https://bscscan.com/token/${getCakeAddress()}`}\r\n      links={links}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@robustswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n\r\n  const cakePriceUsdString = cakePriceUsd.eq(0)\r\n    ? ''\r\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 3,\r\n      maximumFractionDigits: 3,\r\n    })} - `\r\n\r\n  useEffect(() => {\r\n    document.title = `RobustSwap`\r\n  }, [cakePriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\n\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Exchange = lazy(() => import('./views/Exchange'))\r\nconst Liquidity = lazy(() => import('./views/Exchange/Liquidity'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Nft = lazy(() => import('./views/Nft'))\r\nconst Referrals = lazy(() => import('./views/Referrals'))\r\nconst Account = lazy(() => import('./views/Account'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { connect } = useWallet()\r\n  const { account } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/exchange/liquidity\">\r\n              <Liquidity />\r\n            </Route>\r\n            <Route path=\"/exchange\">\r\n              <Exchange />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            <Route path=\"/referrals\" exact>\r\n              <Referrals />\r\n            </Route>\r\n            {/* <Route path=\"/pools\"> */}\r\n            {/*  <Pools /> */}\r\n            {/* </Route> */}\r\n            <Route path=\"/ipo\">\r\n              <Exchange />\r\n            </Route>\r\n            <Route path=\"/account\">\r\n              <Account />\r\n            </Route>\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from '@material-ui/core/styles'\r\nimport Providers from './Providers'\r\nimport App from './App'\r\nimport Mode from './style/theme.json'\r\nimport \"./assets/css/font.css\"\r\n\r\ninterface MuiThemeProviderProps {\r\n  children: any\r\n}\r\n\r\nconst MuiThemeProvider = ({ children }: MuiThemeProviderProps) => {\r\n  const themeMode = 'dark';\r\n  const theme = createMuiTheme((Mode as any)[themeMode]);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <MuiThemeProvider>\r\n        <CssBaseline />\r\n        <App />\r\n      </MuiThemeProvider>\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import Hashids from 'hashids'\r\nimport Web3 from 'web3'\r\nimport { getCakeAddress } from './addressHelpers'\r\n\r\nconst hashids = new Hashids(getCakeAddress(), 0, '0123456789abcdefghijklmnopqrstuvwxyz')\r\n\r\nexport const accountToReferralCode = (account: string) => {\r\n  return account ? hashids.encodeHex(account.substring(2)) : null\r\n}\r\n\r\nexport const referralCodeToAccount = (referralCode: string) => {\r\n  const hex = hashids.decodeHex(referralCode)\r\n  if (Web3.utils.isAddress(hex)) {\r\n    return Web3.utils.toChecksumAddress(hex)\r\n  }\r\n\r\n  return null\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\nimport useParsedQueryString from '../hooks/useParsedQueryString'\r\nimport { referralCodeToAccount } from '../utils/referralCode'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    // dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    nextHarvestUntil: farm.userData ? farm.userData.nextHarvestUntil : 0,\r\n    canHarvest: farm.userData ? farm.userData.canHarvest : false,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\n// export const usePoolFromPid = (sousId): Pool => {\r\n//   const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n//   return pool\r\n// }\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 6 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 0 // RBS-BUSD CAKE-LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceRbtBnb = (): BigNumber => {\r\n  const pid = 2 // RBT-BNB CAKE LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBnb = (): BigNumber => {\r\n  const pid = 8 // ETH-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBnb = (): BigNumber => {\r\n  const pid = 2 // RBT-BNB CAKE-LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBusd = (): BigNumber => {\r\n  const ethBnbPrice = usePriceEthBnb()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  return ethBnbPrice && bnbPrice ? ethBnbPrice.times(bnbPrice) : ZERO\r\n}\r\n\r\nexport const usePriceRbtBusd = (): BigNumber => {\r\n  const rbtBnbPrice = usePriceRbtBnb()\r\n  const bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  return rbtBnbPrice && bnbPrice ? rbtBnbPrice.times(bnbPrice) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken && !new BigNumber(farm.lpTotalInQuoteToken).isNaN()) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n        val = ethPrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport const useReferralCode = (): string => {\r\n  const parsedQs = useParsedQueryString()\r\n  const referralCode = typeof parsedQs.ref === 'string' ? parsedQs.ref : ''\r\n  const account = referralCodeToAccount(referralCode)\r\n  const isValid = referralCode && account\r\n  // console.log(referralCode, account, isValid)\r\n\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      try {\r\n        Cookies.set('referral_code', referralCode, {\r\n          path: '/',\r\n          expires: 365,\r\n        })\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }, [isValid, referralCode])\r\n\r\n  return isValid ? referralCode : null\r\n}\r\n\r\nexport const useReferrerAddressFromCookie = (): string => {\r\n  const referralCode = Cookies.get('referral_code')\r\n  const account = referralCodeToAccount(referralCode)\r\n  const zeroAddress = '0x0000000000000000000000000000000000000000'\r\n  return typeof account === 'string' ? account : zeroAddress\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nexport { getWeb3, getContract, httpProvider }\r\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'ETH' = 'ETH',\r\n  'USDC' = 'USDC',\r\n  'USDT' = 'USDT'\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  stakingTokenName: string\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  tokenDecimals: number\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount\r\n      let lpTotalInQuoteToken\r\n      let tokenPriceVsQuote\r\n      if (farmConfig.isTokenOnly) {\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\r\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\r\n          tokenPriceVsQuote = new BigNumber(1)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\r\n      } else {\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(18))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        if (tokenAmount.comparedTo(0) > 0) {\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n          // In case the pair created without adding liquidity\r\n          tokenPriceVsQuote = tokenPriceVsQuote.isNaN() ? new BigNumber(0.1) : tokenPriceVsQuote\r\n        }\r\n      }\r\n\r\n      const [info, totalAllocPoint, rbsPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'rbsPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount,\r\n        lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n        quoteTokenBlanceLP: new BigNumber(quoteTokenBlanceLP).toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        poolWeight: poolWeight.toNumber(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n        harvestInterval: info.harvestInterval.toNumber(),\r\n        rbsPerBlock: new BigNumber(rbsPerBlock).toNumber(),\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => ({\r\n    stakedBalance: new BigNumber(stakedBalance[0]._hex).toJSON(),\r\n    nextHarvestUntil: stakedBalance.nextHarvestUntil.toNumber(),\r\n  }))\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingRBS',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n\r\nexport const fetchFarmUserCanHarvest = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'canHarvest',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawResults = await multicall(masterchefABI, calls)\r\n  return rawResults.map((canHarvest) => {\r\n    return !!canHarvest[0]\r\n  })\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n  fetchFarmUserCanHarvest,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n  const userFarmCanHarvest = await fetchFarmUserCanHarvest(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index].stakedBalance,\r\n      nextHarvestUntil: userStakedBalances[index].nextHarvestUntil,\r\n      canHarvest: userFarmCanHarvest[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\n","export default {\r\n  cake: {\r\n    56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    97: '',\r\n  },\r\n  masterChef: {\r\n    56: '0xE40b415C28eC411Cc616ca04a125d7e2b9913b58',\r\n    97: '',\r\n  },\r\n  sousChef: {\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n    97: '',\r\n  },\r\n  referral: {\r\n    56: '0x20BF6eF7D765D5485CD52a981554b42A9B375058',\r\n    97: '',\r\n  },\r\n  wbnb: {\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    97: '',\r\n  },\r\n  lottery: {\r\n    56: '0xd75dc5a09bcfe4c508e2aa3320188c0742ee717a',\r\n    97: '',\r\n  },\r\n  lotteryNFT: {\r\n    56: '0x983c4fb762e6136a609431d4a93187c6f6ab886f',\r\n    97: '',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    97: '',\r\n  },\r\n  eth: {\r\n    56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    97: '',\r\n  },\r\n  cakeRouter: {\r\n    56: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\r\n    97: '',\r\n  },\r\n  cakeFactory: {\r\n    56: '0xca143ce32fe78f1f7019d7d551a6402fc5350c73',\r\n    97: '',\r\n  },\r\n  usdc: {\r\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    97: '',\r\n  },\r\n  usdt: {\r\n    56: '0x55d398326f99059fF775485246999027B3197955',\r\n    97: '',\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 24px;\r\n    margin-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  margin:0px;\r\n  margin-bottom:0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import addresses from 'config/constants/contracts'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n\r\nexport const getReferralAddress = () => {\r\n  return addresses.referral[chainId]\r\n}\r\n\r\nexport const getCakeRouterAddress = () => {\r\n  return addresses.cakeRouter[chainId]\r\n}","import { PoolCategory, PoolConfig } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 1,\r\n    tokenName: 'WBNB',\r\n    stakingTokenName: 'PANTHER',\r\n    stakingTokenAddress: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b5ed7b0f8bf5d2b485352e15a416092ca741c2c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://binance.org/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0005',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n  {\r\n    sousId: 2,\r\n    tokenName: 'BUSD',\r\n    stakingTokenName: 'PANTHER',\r\n    stakingTokenAddress: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf31cbe0b2bb2e704310c90a6f74300b3d4627ce8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.3',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'RBS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f8FD7B0A83E506d022d45ce0913BDD89596cf25',\r\n    },\r\n    tokenSymbol: 'RBS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'RBS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4B09CEA647a1029472f309fb633356b929D50714',\r\n    },\r\n    tokenSymbol: 'RBS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'RBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB3A3e8e9A1fBfDFB237442168A96eC84A331b1f',\r\n    },\r\n    tokenSymbol: 'RBT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x891e4554227385c5c740f9b483e935e3cbc29f01',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    tokenSymbol: 'BUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.ETH,\r\n    quoteTokenAdresses: contracts.eth,\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    tokenSymbol: 'MBOX',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    tokenSymbol: 'DOT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n    },\r\n    tokenSymbol: 'ADA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'USDC-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEc6557348085Aa57C72514D67070dC863C0a5A8c',\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.USDT,\r\n    quoteTokenAdresses: contracts.usdt,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2E28b9B74D6d99D4697e913b82B41ef1CAC51c6C',\r\n    },\r\n    tokenSymbol: 'TUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'ETH-USDC',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.USDC,\r\n    quoteTokenAdresses: contracts.usdc,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n    },\r\n    tokenSymbol: 'XRP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n    },\r\n    tokenSymbol: 'UNI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n    },\r\n    tokenSymbol: 'LINK',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 31,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109C8025F272414fd9e2faA805a583708A017f',\r\n    },\r\n    tokenSymbol: 'DOGE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'TRX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5D108578Be3750209d1b3A8f45FFee8C5a75146',\r\n    },\r\n    tokenSymbol: 'TRX',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 3,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'RBS',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f8FD7B0A83E506d022d45ce0913BDD89596cf25',\r\n    },\r\n    tokenSymbol: 'RBS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x95336aC5f7E840e7716781313e1607F7C9D6BE25',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 4,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'RBT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB3A3e8e9A1fBfDFB237442168A96eC84A331b1f',\r\n    },\r\n    tokenSymbol: 'RBT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x891E4554227385c5c740F9B483E935E3CbC29F01',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'WBNB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    tokenSymbol: 'WBNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 23,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BTCB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33', // BTCB-BUSD LP\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 24,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'ETH',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc', // ETH-BNB LP\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 25,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6', // CAKE-BUSD LP\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 26,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BUSD',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16', // BUSD-BNB LP\r\n    },\r\n    tokenSymbol: 'BUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'USDT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00', // USDT-BUSD LP\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059fF775485246999027B3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 28,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'USDC',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1', // USDC-BUSD LP\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n]\r\n\r\nexport default farms","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsExtraConfigs = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n  const callsPoolLimitPerUser = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'poolLimitPerUser',\r\n    }\r\n  })\r\n  const callsWithdrawalInterval = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'withdrawalInterval',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n  const limits = await multicall(sousChefABI, callsPoolLimitPerUser)\r\n  const intervals = await multicall(sousChefABI, callsWithdrawalInterval)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    const limit = limits[index]\r\n    const interval = intervals[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n      poolLimitPerUser: new BigNumber(limit).toJSON(),\r\n      withdrawalInterval: new BigNumber(interval).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsExtraConfigs, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const extraConfigs = await fetchPoolsExtraConfigs()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const extraConfig = extraConfigs.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...extraConfig,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId].stakedBalance,\r\n    nextWithdrawalUntil: stakedBalances[pool.sousId].nextWithdrawalUntil,\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId].stakedBalance }))\r\n  dispatch(\r\n    updatePoolsUserData({ sousId, field: 'userWithdrawalUntil', value: stakedBalances[sousId].userWithdrawalUntil }),\r\n  )\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchWbnbBalance = async (account) => {\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  return bnbBalance\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: {\r\n        stakedBalance: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n        nextWithdrawalUntil: new BigNumber(userInfo[index].nextWithdrawalUntil._hex).toJSON(),\r\n      },\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return {\r\n    ...stakedBalances,\r\n    0: {\r\n      stakedBalance: new BigNumber(masterPoolAmount).toJSON(),\r\n      nextWithdrawalUntil: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingRBS('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n"],"sourceRoot":""}