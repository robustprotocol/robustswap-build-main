{"version":3,"sources":["hooks/useTokenBalance.ts","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","views/Account/Account.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","fetchBalance","balanceOf","bal","useMasterChefBalance","getMasterChefAddress","useMaxTransferLimitAmount","maxTransferLimitAmount","setMaxTransferLimitAmount","amount","fetchMaxTransferLimitAmount","useMaximumSupply","maximumSupply","setMaximumSupply","MAXIMUM_SUPPLY","maxSupply","fetchMaximumSupply","useMintedSupply","mintedSupply","setMintedSupply","mintSupply","fetchMintedSupply","useMintedBurned","mintedBurned","setMintedBurned","mintBurned","fetchMintedBurned","useSellTax","sellTax","setSellTax","transferTaxRateSell","stax","fetchSellTax","useBuyTax","buyTax","setBuyTax","transferTaxRateBuy","btax","fetchbuyTax","useTransferTaxRate","transferTaxRate","setTransferTaxRate","rate","fetchTransferTaxRate","useRbsPerBlock","rbsPBlock","setrbsPBlock","masterChefABI","rbsPerBlock","rbs","fetchRbsPBlock","useGetReserves","lpAddress","reserves","setReserves","pairABI","getReserves","_reserve1","div","fetchGetReserves","useTokenBalance","ethereum","useWallet","account","fastRefresh","getTokenBalance","res","useTotalLockedUpRewards","totalLockedUpRewards","setTotalLockedUpRewards","masterChefContract","useMasterchef","locked","fetchTotalLockedUpRewards","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","fetchBalances","callsBalance","farmsConfig","map","farm","address","name","params","pid","callsHarvest","multicall","rawResultsBalance","rawResultsHarvest","results","index","nextHarvestUntil","toNumber","useAllEarnings","balances","fetchAllBalances","calls","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","Component","concat","capitalize","theme","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","Divider","_props$absolute","absolute","_props$component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","vertical","border","flexShrink","backgroundColor","divider","bottom","left","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","Account","useStyles","TranslateString","useI18n","isMobile","useMedia","connect","reset","onPresentConnectModal","useWalletModal","activeSwitcher","setActiveSwitcher","earnings","setEarnings","totalValue","useTotalValue","burnedBalance","masterChefBalance","totalLockedIncludeMasterChef","plus","circSupply","minus","cakeSupply","getBalanceNumber","earningsSum","reduce","accum","earning","pow","cakePriceUsd","usePriceCakeBusd","bnbPrice","usePriceBnbBusd","ethPrice","usePriceEthBusd","changeSwitcher","event","val","target","value","earningVal","pantherWithAPY","useFarms","filter","isTokenOnly","multiplier","cakeRewardPerYear","times","poolWeight","BLOCKS_PER_YEAR","apy","totalValue1","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","ETH","comparedTo","farmAPY","toLocaleString","minimumFractionDigits","maximumFractionDigits","Box","mainContainer","pageTitle","subPageTitle","bodyWrapper","cardWrapper1","statsValue","style","fontSize","fontWeight","fontFamily","background","borderRadius","padding","marginTop","Select","onChange","IconComponent","paddingLeft","paddingRight","disableUnderline","MenuProps","getContentAnchorEl","anchorOrigin","horizontal","MenuItem","justifyContent","alignItems","paddingTop","Button","switchButton","onClick","paddingBottom","src","alt","toFixed","cardWrapper","walletButton","bgWrapper"],"mappings":"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","file":"static/js/16.82482c49.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport pairABI from 'config/abi/pair.json'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMasterChefBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf(getMasterChefAddress()).call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMaxTransferLimitAmount = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maxTransferLimitAmount, setMaxTransferLimitAmount] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaxTransferLimitAmount() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const amount = await cakeContract.methods.maxTransferLimitAmount().call()\r\n      setMaxTransferLimitAmount(new BigNumber(amount))\r\n    }\r\n\r\n    fetchMaxTransferLimitAmount()\r\n  }, [slowRefresh])\r\n\r\n  return maxTransferLimitAmount\r\n}\r\n\r\nexport const useMaximumSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maximumSupply, setMaximumSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaximumSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const maxSupply = await cakeContract.methods.MAXIMUM_SUPPLY().call()\r\n      setMaximumSupply(new BigNumber(maxSupply))\r\n    }\r\n\r\n    fetchMaximumSupply()\r\n  }, [slowRefresh])\r\n\r\n  return maximumSupply\r\n}\r\n\r\nexport const useMintedSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedSupply, setMintedSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const mintSupply = await cakeContract.methods.mintedSupply().call()\r\n      setMintedSupply(new BigNumber(mintSupply))\r\n    }\r\n\r\n    fetchMintedSupply()\r\n  }, [slowRefresh])\r\n\r\n  return mintedSupply\r\n}\r\n\r\nexport const useMintedBurned = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedBurned, setMintedBurned] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedBurned() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const mintBurned = await cakeContract.methods.mintedBurned().call()\r\n      setMintedBurned(new BigNumber(mintBurned))\r\n    }\r\n\r\n    fetchMintedBurned()\r\n  }, [slowRefresh])\r\n\r\n  return mintedBurned\r\n}\r\n\r\nexport const useSellTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [sellTax, setSellTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSellTax() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const stax = await cakeContract.methods.transferTaxRateSell().call()\r\n      setSellTax(new BigNumber(stax))\r\n    }\r\n\r\n    fetchSellTax()\r\n  }, [slowRefresh])\r\n\r\n  return sellTax\r\n}\r\n\r\nexport const useBuyTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [buyTax, setBuyTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchbuyTax() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const btax = await cakeContract.methods.transferTaxRateBuy().call()\r\n      setBuyTax(new BigNumber(btax))\r\n    }\r\n\r\n    fetchbuyTax()\r\n  }, [slowRefresh])\r\n\r\n  return buyTax\r\n}\r\n\r\nexport const useTransferTaxRate = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [transferTaxRate, setTransferTaxRate] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchTransferTaxRate() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const rate = await cakeContract.methods.transferTaxRate().call()\r\n      setTransferTaxRate(new BigNumber(rate))\r\n    }\r\n\r\n    fetchTransferTaxRate()\r\n  }, [slowRefresh])\r\n\r\n  return transferTaxRate\r\n}\r\n\r\nexport const useRbsPerBlock = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [rbsPBlock, setrbsPBlock] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchRbsPBlock() {\r\n      const cakeContract = getContract(masterChefABI, getMasterChefAddress())\r\n      const rbs = await cakeContract.methods.rbsPerBlock().call()\r\n      setrbsPBlock(new BigNumber(rbs))\r\n    }\r\n\r\n    fetchRbsPBlock()\r\n  }, [slowRefresh])\r\n\r\n  return rbsPBlock\r\n}\r\n\r\nexport const useGetReserves = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [reserves, setReserves] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchGetReserves() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.getReserves().call()\r\n      setReserves(new BigNumber(rbs?._reserve1).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchGetReserves()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return reserves\r\n}\r\n\r\nexport const useCirculatinSupply = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [supply, setSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSupply() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.totalSupply().call()\r\n      setSupply(new BigNumber(rbs).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchSupply()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return supply\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\nimport { useMasterchef } from './useContract'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n  nextHarvestUntil: number\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const callsBalance = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const callsHarvest = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'userInfo',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResultsBalance = await multicall(masterChefABI, callsBalance)\r\n      const rawResultsHarvest = await multicall(masterChefABI, callsHarvest)\r\n      const results = farmsConfig.map((farm, index) => ({\r\n        ...farm,\r\n        balance: new BigNumber(rawResultsBalance[index]),\r\n        nextHarvestUntil: rawResultsHarvest[index].nextHarvestUntil.toNumber(),\r\n      }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport const useTotalLockedUpRewards = () => {\r\n  const [totalLockedUpRewards, setTotalLockedUpRewards] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalLockedUpRewards() {\r\n      const locked = await masterChefContract.methods.totalLockedUpRewards().call()\r\n      setTotalLockedUpRewards(new BigNumber(locked))\r\n    }\r\n\r\n    fetchTotalLockedUpRewards()\r\n  }, [slowRefresh, masterChefContract])\r\n\r\n  return totalLockedUpRewards\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const res = await multicall(masterChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { useMedia } from 'react-use'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport Card from '@material-ui/core/Card'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport { useWalletModal } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useFarms, useTotalValue, usePriceCakeBusd, usePriceBnbBusd, usePriceEthBusd } from 'state/hooks'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useTotalSupply, useBurnedBalance, useMasterChefBalance } from 'hooks/useTokenBalance'\r\nimport useAllEarnings from '../../hooks/useAllEarnings'\r\nimport useStyles from '../../assets/styles'\r\nimport { useTotalLockedUpRewards } from '../../hooks/useFarmsWithBalance'\r\n\r\nconst Account = () => {\r\n  const classes = useStyles.account()\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 800px)')\r\n  const { connect, reset } = useWallet()\r\n  const { account } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const [activeSwitcher, setActiveSwitcher] = useState(0)\r\n  const [earnings, setEarnings] = useState(0)\r\n  const totalValue = useTotalValue()\r\n\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const masterChefBalance = useMasterChefBalance(getCakeAddress())\r\n  const totalLocked = useTotalLockedUpRewards()\r\n  const totalLockedIncludeMasterChef = totalLocked.plus(masterChefBalance)\r\n  const circSupply = totalSupply\r\n    ? totalSupply.minus(burnedBalance.plus(totalLockedIncludeMasterChef))\r\n    : new BigNumber(0)\r\n  const cakeSupply = getBalanceNumber(circSupply)\r\n  const allEarnings = useAllEarnings()\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const changeSwitcher = (event: any) => {\r\n    let val = event;\r\n    if (typeof val !== 'number') {\r\n      val = val.target.value;\r\n    }\r\n    setActiveSwitcher(val);\r\n    let earningVal = earningsSum / 365\r\n    if (val === 0) {\r\n      earningVal = earningsSum / 365\r\n    } else if (val === 1) {\r\n      earningVal = earningsSum / 52\r\n    } else if (val === 2) {\r\n      earningVal = earningsSum / 12\r\n    } else if (val === 3) {\r\n      earningVal = earningsSum\r\n    }\r\n    setEarnings(earningVal)\r\n  }\r\n  const farmsLP = useFarms()\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === true && farm.multiplier !== '0X')\r\n  const pantherWithAPY: any[] = activeFarms.map((farm) => {\r\n    const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n      .times(new BigNumber(farm.poolWeight))\r\n      .div(new BigNumber(10).pow(18))\r\n    const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n    let apy = cakePriceUsd.times(cakeRewardPerYear)\r\n\r\n    let totalValue1 = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      totalValue1 = totalValue1.times(bnbPrice)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      totalValue1 = totalValue1.times(ethPrice)\r\n    }\r\n\r\n    if (totalValue1.comparedTo(0) > 0) {\r\n      apy = apy.div(totalValue1)\r\n    }\r\n    return { ...farm, apy }\r\n  })\r\n  const farmAPY =\r\n    pantherWithAPY[0].apy &&\r\n    pantherWithAPY[0].apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n  return (\r\n    <Box className={classes.mainContainer}>\r\n      <Typography className={classes.pageTitle}>Your PANTHER Stats</Typography>\r\n      <Typography className={classes.subPageTitle}>Keep track of your pool & farms.</Typography>\r\n      <Box className={classes.bodyWrapper}>\r\n        {account ? (\r\n          <Card className={classes.cardWrapper1}>\r\n            <Box className={classes.statsValue}>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#7381FC' }}>\r\n                TVL All Pools\r\n              </Typography>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#F0EFEF' }}>\r\n                ${totalValue ? totalValue.toNumber().toLocaleString() : 0}\r\n              </Typography>\r\n            </Box>\r\n            <Box className={classes.statsValue}>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#7381FC' }}>\r\n                PANTHER Holdings\r\n              </Typography>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#F0EFEF' }}>\r\n                {cakeSupply ? cakeSupply.toLocaleString() : 0}\r\n              </Typography>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                background: '#6BA1FF',\r\n                color: '#FCFCFC',\r\n                borderRadius: 8,\r\n                fontFamily: 'Poppin',\r\n                fontSize: 20,\r\n                fontWeight: 'bold',\r\n                padding: '9px 32px',\r\n                textAlign: 'left',\r\n                marginTop: 8,\r\n              }}\r\n            >\r\n              Earnings\r\n            </Box>\r\n            {!isMobile ? (\r\n              <Box style={{ width: '100%', display: 'flex', justifyContent: 'space-between', paddingTop: 24 }}>\r\n                <Button\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 0,\r\n                  })}\r\n                  // className={activeSwitcher !== 0 ? classes.switchButton : classes.activeSwitcher}\r\n                  onClick={() => changeSwitcher(0)}\r\n                >\r\n                  Daily\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 1,\r\n                  })}\r\n                  onClick={() => changeSwitcher(1)}\r\n                >\r\n                  Weekly\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 2,\r\n                  })}\r\n                  onClick={() => changeSwitcher(2)}\r\n                >\r\n                  Monthly\r\n                </Button>\r\n                <Button\r\n                  style={{ marginRight: 0 }}\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 3,\r\n                  })}\r\n                  onClick={() => changeSwitcher(3)}\r\n                >\r\n                  Yearly\r\n                </Button>\r\n              </Box>\r\n            ) : (\r\n              <Box>\r\n                <Select\r\n                  value={activeSwitcher}\r\n                  onChange={changeSwitcher}\r\n                  IconComponent={() => <ArrowDropDownIcon />}\r\n                  style={{\r\n                    width: '100%',\r\n                    paddingLeft: '16px',\r\n                    paddingRight: '16px',\r\n                    background: 'rgba(107, 161, 255, 0.2)',\r\n                    marginTop: '24px',\r\n                    borderRadius: 8,\r\n                    fontFamily: 'Poppin',\r\n                  }}\r\n                  disableUnderline\r\n                  MenuProps={{\r\n                    getContentAnchorEl: null,\r\n                    anchorOrigin: {\r\n                      vertical: 'bottom',\r\n                      horizontal: 'left',\r\n                    },\r\n                  }}\r\n                >\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={0}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Daily</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={1}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Weekly</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={2}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Monthly</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={3}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Yearly</Typography>\r\n                  </MenuItem>\r\n                </Select>\r\n              </Box>\r\n            )}\r\n            <Box\r\n              style={{ textAlign: 'left', alignItems: 'center', display: 'flex', paddingTop: 16, paddingBottom: 24 }}\r\n            >\r\n              <img src=\"\" alt=\"\" style={{ width: 60, height: 60 }} />\r\n              <Box>\r\n                <Typography style={{ paddingLeft: 16, fontSize: 34, fontWeight: 500, fontFamily: 'Poppin' }}>\r\n                  {earnings ? earnings.toFixed(3) : (earningsSum / 365).toFixed(3)}\r\n                </Typography>\r\n                <Typography style={{ paddingLeft: 16, fontSize: 20, fontWeight: 'bold', fontFamily: 'Poppin' }}>\r\n                  $ {earnings ? (cakePriceUsd.toNumber() * earnings).toFixed(2) : ((cakePriceUsd.toNumber() * earningsSum) / 365).toFixed(2)}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Divider />\r\n            <Box style={{ textAlign: 'left', paddingTop: 24 }}>\r\n              <Typography style={{ fontSize: 20, fontWeight: 'bold', fontFamily: 'Poppin', paddingBottom: 0 }}>\r\n                {TranslateString(352, 'APR')}\r\n              </Typography>\r\n              <Typography style={{ fontSize: 34, fontWeight: 500, fontFamily: 'Poppin', paddingTop: 0 }}>\r\n                {farmAPY} %\r\n              </Typography>\r\n            </Box>\r\n          </Card>\r\n        ) : (\r\n          <Card className={classes.cardWrapper}>\r\n            <Typography style={{ fontSize: 16, fontFamily: 'Poppin', paddingBottom: 24 }}>\r\n              Please unlock your wallet to see your stats\r\n            </Typography>\r\n            <Button className={classes.walletButton} onClick={onPresentConnectModal}>\r\n              UNLOCK WALLET\r\n            </Button>\r\n          </Card>\r\n        )}\r\n        {account ? (\r\n          <Box className={classes.bgWrapper}>\r\n            <img src=\"/images/stats-bg-active.svg\" alt=\"bg_image\" />\r\n          </Box>\r\n        ) : (\r\n          <Box className={classes.bgWrapper}>\r\n            <img src=\"/images/stats-bg.svg\" alt=\"bg_image\" />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Account\r\n"],"sourceRoot":""}