{"version":3,"sources":["hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/HarvestCountdownModal.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/getLiquidityUrlPathParts.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmList/StakeAction.tsx","views/Farms/components/FarmList/HarvestAction.tsx","views/Farms/components/FarmList/CardActionsContainer.tsx","views/Farms/components/FarmList/MobileHarvestAction.tsx","views/Farms/components/FarmList/MobileCardActionsContainer.tsx","views/Farms/components/FarmList/DetailsSection.tsx","views/Farms/components/FarmList/CardHeading.tsx","views/Farms/components/FarmList/ApyCalculatorModal.tsx","views/Farms/components/FarmList/ApyButton.tsx","views/Farms/components/FarmList/FarmList.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx","components/UnlockButton.tsx","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","utils/callHelpers.ts","hooks/useHarvest.ts","config/index.ts"],"names":["useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","toString","formatTimePeriodCountdown","periods","FlexLayout","styled","div","isMobile","Wrapper","viewMode","theme","colors","primary","ExpandableSectionButton","onClick","expanded","marginBottom","TranslateString","useI18n","role","style","color","fontSize","marginLeft","defaultProps","PopoverContainer","props","show","card","transparentize","textSubtle","ReferenceElement","Arrow","Popover","content","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","options","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","current","tick","id","useInterval","useCallback","ref","popper","className","arrow","TooltipContainer","Tooltip","text","mode","rest","width","DropDownList","display","marginRight","height","marginTop","QuestionWrapper","invertedContrast","QuestionHelper","wth","hgh","setShow","open","close","onMouseEnter","onMouseLeave","Block","StyledLinkExternal","LinkExternal","DetailsSection","rbsPrice","lpLabel","depositFee","harvestInterval","pid","tokenMode","stakedTokenPriceUSD","account","bscScanAddress","pairinfo","addLiquidityUrl","useFarmUser","allowance","stakedBalance","tokenAddress","isGreaterThan","replace","classes","canHarvest","earnings","useStyles","chart","registerNativeToken","a","registerToken","justifyContent","href","alignItems","toLocaleString","metamaskButton","borderRadius","border","fontWeight","padding","background","src","alt","Flex","CardHeading","primaryToken","secondToken","tokenSymbol","textAlign","paddingLeft","auto","indexOf","useApprove","lpContract","dispatch","useDispatch","useActiveWeb3React","masterChefContract","useMasterchef","onApprove","approve","tx","fetchFarmUserDataAsync","console","log","useStake","referrer","useReferrerAddressFromCookie","handleStake","amount","stake","txHash","info","onStake","useUnstake","handleUnstake","unstake","onUnstake","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","radii","default","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","max","lineHeight","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","symbol","onSelectMax","depositFeeBP","image","variant","includes","BigNumber","times","toFixed","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","getBalanceNumber","stakedBalanceUSD","displayBalance","useModal","onPresentDeposit","onPresentWithdraw","mt","minWidth","backgroundColor","boxShadow","mr","BalanceAndCompound","StyledIconButton","IconButton","warning","tada","keyframes","TadaAlarmIcon","AlarmIcon","HarvestAction","nextHarvest","cardMode","harvestCount","onReward","useHarvest","rawEarningsBalance","earningBalanceUSD","mb","opacity","gt","HarvestCountdownModal","nextHarvestUntil","farm","secondsUntilHarvest","timeUntil","bold","isTokenOnly","lpSymbol","Action","CardActions","ethereum","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","tokenAddresses","lpAddress","process","lpName","toUpperCase","isApproved","getContract","handleApprove","error","renderApprovalOrStakeButton","as","onPresentHarvestCountdown","textTransform","pr","Number","toNumber","UnlockButton","fullWidth","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","firstPart","secondPart","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","principal","lpTotalInQuoteToken","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","Link","apy","liquidityUrlPathParts","swapUrlPathParts","oneThousandDollarsWorthOfCake","getUrl","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","paddingRight","ApyButton","onPresentApyModal","ml","RainbowLight","StyledCardAccent","FCard","Divider","ExpandingWrapper","FarmCard","removed","bnbPrice","ethPrice","usdcPrice","usdtPrice","showExpandableSection","setShowExpandableSection","earningToken","stakingToken","totalValue","QuoteToken","BNB","ETH","USDC","USDT","totalValueFormated","isNaN","undefined","maximumFractionDigits","exception","farmAPY","minimumFractionDigits","lpTokenPriceVsQuote","tokenPriceVsQuote","quoteTokenBlanceLP","lpTotalSupply","multiplier","CardActionsContainer","minus","integerValue","MobileHarvestAction","StyledBlock","MobileCardActionsContainer","StyledLink","external","textDecoration","FList","FarmList","window","innerWidth","setWth","document","getElementsByClassName","clientWidth","min1","setMin1","min2","setMin2","maxWidth","FarmTabButtons","stakedOnly","setStakedOnly","setViewMode","filter","setFilter","sort","setSort","useRouteMatch","url","isExact","paddingBottom","StyledButton","Cookies","set","activeIndex","to","ToggleWrapper","scale","checked","type","Select","event","target","IconComponent","disableUnderline","StyledMenuItem","Button","MenuItem","Hero","mediaQueries","lg","StyledHeading","Heading","PubTitle","LogTitle","LogPrice","FarmBanner","FarmBanner1","BannerText","Farms","farmsProps","path","useMedia","farmsLP","useFarms","library","usePriceRbsBusd","usePriceBnbBusd","usePriceEthBusd","usePriceUsdcBusd","usePriceUsdtBusd","rbtPrice","usePriceRbtBusd","useGetDocumentTitlePrice","fastRefresh","useRefresh","get","sortByMultiplier","item1","item2","sortByAPR","sortByLiquidity","sortByEarned","userData","activeFarms","inactiveFarms","stakedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","rbsRewardPerYear","rbsPerBlock","poolWeight","pow","BLOCKS_PER_YEAR","comparedTo","borderRight","Page","exact","useAuth","login","logout","onPresentConnectModal","useWalletModal","self","provider","address","contract","ethers","Contract","erc20","getSigner","connectUnchecked","getProviderOrSigner","getTokenBalance","userAddress","balanceOf","balance","makeStyles","createStyles","mainContainer","palette","breakpoints","down","cardWrapper","hegiht","paper","cardWrapper1","pageTitle","fontFamily","subPageTitle","bgWrapper","bodyWrapper","flexDirection","walletButton","statsValue","switchButton","flex","activeSwitcher","base","root","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","chartHeader","paddingTop","activeStatus","deactiveStatus","changePercent","chartTitle","currentChartValue","tabList","secondary","light","select","detailChartTabs","mobileMenuItem","getMasterChefAddress","constants","MaxUint256","deposit","wait","res","hash","sousStake","sousChefContract","sousStakeBnb","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","farmPid","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL"],"mappings":"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","file":"static/js/11.f13fa4f4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div<{ isMobile: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  max-width: 980px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: ${({ isMobile }) => isMobile ? \"40px\" : \"32px\"};\r\n  & > * {\r\n    min-width: 310px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n  viewMode?: number\r\n  isMobile?: boolean\r\n  marginBottom?: string\r\n}\r\n\r\nconst Wrapper = styled.div<{ viewMode: number }>`\r\n  display: ${({ viewMode }) => viewMode === 1 ? 'flex' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, viewMode, isMobile, marginBottom }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()} viewMode={viewMode} style={{ marginBottom: marginBottom }}>\r\n      {!isMobile && <Text style={{ color: '#A5A5A5', fontSize: 12, marginLeft: 12 }}>\r\n        {expanded ? TranslateString(725, 'Hide') : TranslateString(658, 'Details')}\r\n      </Text>}\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background: #151745;\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, OpenNewIcon } from '@robustswap-libs/uikit'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 300;\r\n  box-shadow: 5px 4px 8px 3px rgba(14, 14, 14, 0.2);\r\n  border: 1px solid #293D71;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n  mode: number\r\n}\r\n\r\nexport default function Tooltip({ text, mode, ...rest }: TooltipProps) {\r\n  if (mode === 0)\r\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n  else if (mode === 1) {\r\n    return (\r\n      <Popover placement=\"top\" content={\r\n        <TooltipContainer style={{ width: 'auto' }}>\r\n          <DropDownList />\r\n        </TooltipContainer>} {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport function DropDownList() {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>RBS-BNB</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>View Contract</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>Pair Info</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MouseoverTooltip({ children, mode, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip mode={mode} {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { InfoIcon } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: transparent;\r\n  //color: ${({ theme }) => theme.colors.text};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text, mode, wth, hgh }: { text: string, mode: number, wth: number, hgh: number }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4, marginTop: 'auto', marginBottom: 'auto' }}>\r\n      <Tooltip text={text} show={show} mode={mode}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <InfoIcon style={{ width: wth, height: hgh }} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { LinkExternal, Text, Flex, OpenNewIcon, Button } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport HarvestAction from './HarvestAction'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface ExpandableSectionProps {\r\n  rbsPrice?: BigNumber\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  tokenMode: boolean\r\n  account?: string\r\n  stakedBalance?: BigNumber\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  rbsPrice,\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  tokenMode,\r\n  account,\r\n  bscScanAddress,\r\n  pairinfo,\r\n  addLiquidityUrl\r\n}) => {\r\n  const { stakedBalance, allowance } = useFarmUser(pid)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const tokenAddress = bscScanAddress.replace('https://bscscan.com/token/', '')\r\n  const TranslateString = useI18n()\r\n  const { canHarvest, earnings } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(tokenAddress, lpLabel, 18, `https://robustswap.com/images/farms/${lpLabel === 'WBNB' ? 'BNB' : lpLabel}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [lpLabel, tokenAddress])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tokenMode ? <>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{lpLabel}</Text>\r\n            <StyledLinkExternal href={addLiquidityUrl}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n            <StyledLinkExternal href={bscScanAddress}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n            <StyledLinkExternal href={pairinfo}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" style={{ marginTop: 16 }}>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n            <Text fontSize=\"16px\">Cake-LP</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>\r\n        </Flex> </> :\r\n        <>\r\n          <Flex justifyContent=\"center\">\r\n            <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, marginBottom: 16, width: '100%', height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n              <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n            </Button>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}:</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text> {/* {depositFee / 100} */}\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block>\r\n          </Flex>\r\n        </>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\n// import useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image, Text } from '@robustswap-libs/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { auto } from '@popperjs/core'\r\n// import { NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  margin-top:auto;\r\n  margin-bottom:auto;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo }) => {\r\n  // const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" style={{ marginBottom: 24 }}>\r\n      <div style={{ width: 40, height: 40 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? 40 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: '100%' }}>\r\n        <Heading>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ width: 170, marginTop: auto, marginBottom: auto }}>\r\n              {lpLabel.replace('LP', '')}\r\n              {lpLabel.indexOf('-') === -1 && <Text style={{ fontSize: 12 }}>Earn RBS</Text>}{/* {lpLabel.replace('LP', '')} */}\r\n            </div>\r\n            {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} />}\r\n          </div>\r\n        </Heading>\r\n        {/* <Flex justifyContent=\"flex-start\">\r\n          <StyledLinkExternal\r\n            href={bscScanAddress}\r\n          >\r\n            {TranslateString(356, 'View Contract')}\r\n          </StyledLinkExternal>\r\n          <StyledLinkExternal\r\n            href={pairinfo}\r\n          >\r\n            {TranslateString(355, 'Pair Info')}\r\n          </StyledLinkExternal>\r\n        </Flex> */}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      console.log(\"error:\", e)\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useActiveWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n      // .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport { useReferrerAddressFromCookie } from '../state/hooks'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, referrer)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, referrer)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [99999]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n  max?: number | string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, max }) => {\r\n  return (\r\n    <>\r\n      <StyledInputWrapper style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 400, fontSize: 12, lineHeight: '14px', textAlign: 'right' }}>\r\n          Balance: {max.toLocaleString()}\r\n        </Text>\r\n        <div style={{ display: \"flex\", width: '100%' }}>\r\n          {!!startAdornment && startAdornment}\r\n          <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n          {!!endAdornment && endAdornment}\r\n        </div>\r\n      </StyledInputWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #151745;\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  width: auto;\r\n  height: 86px;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width:100%;\r\n  background: none;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n  mode?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0, mode }) => {\r\n  const TranslateString = useI18n()\r\n  const image = `/images/farms/${symbol === 'WBNB' ? 'BNB' : symbol}.svg`;\r\n\r\n  return (\r\n    <StyledTokenInput style={{ marginBottom: mode === 0 ? 0 : 20 }}>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <div>\r\n              <Button variant=\"text\" size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'MAX')}\r\n              </Button>\r\n            </div>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Flex>\r\n                {!(symbol.includes('LP')) && <img src={image} alt={symbol} width={24} height={24} />}\r\n                <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n              </Flex>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n        max={max}\r\n      />\r\n      {mode === 0 && (depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(value || 0).times(depositFeeBP / 10000).toFixed(8)}{' '} {symbol}</Text>\r\n        </StyledMaxText>\r\n      ) : (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(0).toFixed(8)}{' '}{symbol}</Text>\r\n        </StyledMaxText>\r\n      ))}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div`\r\n  max-width: 430px;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n  margin-bottom:16px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-left: 4px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n        mode={0}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        mode={1}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, IconButton, Heading, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  background-color: transparent;\r\n  svg {\r\n    width: 52px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentWithdraw} mr=\"10px\">\r\n          <MinusIcon />\r\n        </IconButton>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentDeposit}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ width: rawStakedBalance === 0 ? 'auto' : '100%' }}>\r\n      <div>\r\n        {(rawStakedBalance !== 0 || !tokenName.includes('-')) && (\r\n          <>\r\n            <Heading color='text'>{displayBalance} {tokenName.includes('-') && 'LP'}</Heading>\r\n            <Text fontSize=\"13px\" mt=\"4px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n              ${stakedBalanceUSD.toLocaleString()}\r\n            </Text>\r\n          </>\r\n        )}\r\n      </div>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { AlarmIcon, Button, Flex, Heading, IconButton, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvest?: number\r\n  cardMode?: number\r\n  harvestCount?: () => void\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvest, cardMode = 0, harvestCount }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { account } = useActiveWeb3React()\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      {cardMode === 1 && <div>\r\n        <Heading color={account ? rawEarningsBalance === 0 ? 'textDisabled' : 'text' : 'text'} style={{ textAlign: 'left' }}>\r\n          {account ? displayBalance : '-'}\r\n        </Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n            ${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>}\r\n      <BalanceAndCompound style={{ width: cardMode ? 'auto' : '100%', marginLeft: 'auto' }}>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvest > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={harvestCount} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport { Modal, Text } from '@robustswap-libs/uikit'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { Farm } from '../../../state/types'\r\n\r\ninterface HarvestCountdownModalProps {\r\n  farm: Farm\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst HarvestCountdownModal: React.FC<HarvestCountdownModalProps> = ({\r\n  onDismiss,\r\n  nextHarvestUntil,\r\n  harvestInterval,\r\n  farm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const secondsUntilHarvest = nextHarvestUntil - currentTime\r\n  const timeUntil = getTimePeriods(secondsUntilHarvest > 0 ? secondsUntilHarvest : 0)\r\n\r\n  return (\r\n    <Modal title={TranslateString(10029, 'Harvest In')} onDismiss={onDismiss}>\r\n      <Text bold color=\"primary\" fontSize=\"36px\" style={{ textAlign: 'center' }}>\r\n        {formatTimePeriodCountdown(timeUntil)}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"10px\" style={{ textAlign: 'center' }}>\r\n        {farm.isTokenOnly ? 'Pool' : 'Farm'}: {farm.lpSymbol}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"5px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10027, 'Harvest Interval')}: {(harvestInterval / 3600).toLocaleString()}{' '}\r\n        {TranslateString(10028, 'Hours')}\r\n      </Text>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestCountdownModal\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\r\nimport { Button, Flex, Heading, Text, IconButton, AlarmIcon, useModal } from '@robustswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 4px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  tokenMode: boolean\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n  tokenMode,\r\n  addLiquidityUrl\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  console.log(\"tokenBalance:\", tokenBalance.toString(), pid)\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum, tokenAddress, account)\r\n    }\r\n    return getContract(ethereum, lpAddress, account)\r\n  }, [ethereum, lpAddress, tokenAddress, account, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (rawStakedBalance === 0 && tokenBalance.toString() === '0' && tokenMode) ? (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'GET LP')}\r\n        </Button>\r\n      </Flex>\r\n    ) : (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove} style={{ width: '100%', marginTop: !tokenMode ? 25 : 0 }}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" pr=\"3px\" style={{ color: '#A5A5A5' }}>\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          &nbsp;RBS\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvest={nextHarvestUntil} cardMode={1} harvestCount={onPresentHarvestCountdown} />\r\n      {tokenMode ? <>\r\n        <Flex>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {rawStakedBalance === 0 ? TranslateString(453, 'Available LP') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          {rawStakedBalance === 0 ?\r\n            <div style={{ textAlign: 'left' }}>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 600 }}>\r\n                {Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP\r\n              </Text>\r\n              <Text fontSize=\"13px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n            </div> :\r\n            <Heading style={{ marginTop: 15, opacity: 0 }} />\r\n          }\r\n          {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n        </Flex>\r\n      </> :\r\n        <>\r\n          <Flex>\r\n            {isApproved && <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 8 }}>\r\n              {TranslateString(329, 'Staked')} {lpName}\r\n            </Text>}\r\n          </Flex>\r\n          {!account ? <UnlockButton fullWidth /> : renderApprovalOrStakeButton()}\r\n        </>\r\n      }\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import BigNumber from \"bignumber.js\"\r\n\r\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, rbsPrice, lpTotalInQuoteToken }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / rbsPrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + (apyAsDecimal / timesCompounded) * (timesCompounded * daysAsDecimalOfYear))\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n  // const exception = lpTotalInQuoteToken?.toString() === '0' ? 100 : 1;\r\n  // return roundToTwoDp(interestEarned * (exception)) // exception when staking is 0\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const swapUrlPathParts = `?outputCurrency=${tokenAddresses[chainId]}`\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / rbsPrice.toNumber()\r\n  const getUrl = lpLabel.includes('-') ?\r\n    `https://exchange.robustswap.com/#/add/${liquidityUrlPathParts}` :\r\n    `https://exchange.robustswap.com/#/swap${swapUrlPathParts}`\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" as=\"a\" href={getUrl} style={{ width: '100%' }}>\r\n          {TranslateString(505, 'Get')} {lpLabel}\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      rbsPrice={rbsPrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Skeleton, Text } from '@robustswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n// import { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: #1E215C;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 16px 16px 0px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 320px !important;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n  background: #151745;\r\n  margin: 0px -16px;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  rbsPrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  usdcPrice?: BigNumber\r\n  usdtPrice?: BigNumber\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  isMobile?: boolean\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice, ethereum, account, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, ethPrice, usdcPrice, usdtPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue && !new BigNumber(totalValue).isNaN()\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const chainId = 56\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.com/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    let lpTokenPriceVsQuote\r\n    if (farm.isTokenOnly) {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.tokenPriceVsQuote)\r\n    } else {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    ethPrice,\r\n    usdcPrice,\r\n    usdtPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n    // farm.tokenSymbol\r\n  ])\r\n\r\n  return (\r\n    <FCard>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        depositFee={farm.depositFeeBP}\r\n        primaryToken={earningToken}\r\n        secondToken={stakingToken}\r\n        tokenSymbol={farm.tokenSymbol}\r\n        bscScanAddress={\r\n          farm.isTokenOnly\r\n            ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n        pairinfo={\r\n          farm.isTokenOnly\r\n            ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n      />\r\n      {!removed && (\r\n        <Block>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n          <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n            {farm.apy ? (\r\n              <>\r\n                {farmAPY ? farmAPY : 0}%\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  rbsPrice={rbsPrice}\r\n                  apy={farm.apy}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Block>\r\n      )}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(408, 'Total Staked')}:\r\n        </Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n      </Block>\r\n      {/* {lpLabel.indexOf('-') >= 0 &&  */}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n      </Block>\r\n      {/* } */}\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        ethereum={ethereum}\r\n        account={account}\r\n        harvestInterval={farm.harvestInterval}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n        rbsPrice={rbsPrice}\r\n        tokenMode={lpLabel.indexOf('-') >= 0}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n        viewMode={1}\r\n        isMobile={isMobile}\r\n        marginBottom=\"16px\"\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          rbsPrice={rbsPrice}\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          tokenMode={lpLabel.indexOf('-') >= 0}\r\n          account={account}\r\n          bscScanAddress={\r\n            farm.isTokenOnly\r\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          pairinfo={\r\n            farm.isTokenOnly\r\n              ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  background-color: transparent;\r\n  svg {\r\n    width: 52px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString(undefined, {\r\n    minimumFractionDigits: 3,\r\n    maximumFractionDigits: 3,\r\n  })\r\n  const tokenMode = tokenName.includes('-')\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentWithdraw} mr=\"10px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentDeposit}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {renderStakingButtons()}\r\n      <div>\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {!tokenMode ? `${TranslateString(329, 'Staked')} ${tokenName}` : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n          <Text fontSize=\"16px\">{displayBalance} {tokenMode && 'LP'}</Text>\r\n          <Text fontSize=\"12px\">${stakedBalanceUSD.toFixed(3)}</Text>\r\n        </div>\r\n      </div>\r\n    </Flex >\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex alignItems=\"center\">\r\n      <BalanceAndCompound>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading\r\n          color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}\r\n          style={{ fontSize: 16, fontWeight: 400, lineHeight: 1.5 }}>\r\n          {displayBalance}\r\n        </Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"12px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n            ${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  tokenMode: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n  tokenMode\r\n}) => {\r\n\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum, tokenAddress, account)\r\n    }\r\n    return getContract(ethereum, lpAddress, account)\r\n  }, [ethereum, lpAddress, tokenAddress, account, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport useStake from '../../../../hooks/useStake'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const compoundRawEarningsBalance = getBalanceNumber(earnings.minus(earnings.times(0.05).integerValue()))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      <BalanceAndCompound>\r\n        {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n          <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n            <TadaAlarmIcon />\r\n          </StyledIconButton>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport MobileHarvestAction from './MobileHarvestAction'\r\n\r\nconst Action = styled.div`\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n  text-align: right;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum, tokenAddress, account)\r\n    }\r\n    return getContract(ethereum, lpAddress, account)\r\n  }, [ethereum, lpAddress, tokenAddress, account, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }} justifyContent=\"space-between\">\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {TranslateString(999, 'Staked Tokens')}\r\n          </Text>\r\n          <Text fontSize=\"14px\">{isApproved ? stakedBalance : 0}</Text>\r\n          <Text fontSize=\"12px\">${isApproved ? (stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString() : 0}</Text>\r\n        </div>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(495, 'Enable Farm')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <MobileHarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { LinkExternal, OpenNewIcon, Text, Flex, Button } from '@robustswap-libs/uikit'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport MobileCardActionsContainer from './MobileCardActionsContainer'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  isMobile: boolean\r\n  removed: boolean\r\n  totalValueFormated?: string\r\n  tokenMode: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<{ tokenMode: boolean }>`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  padding: 24px 0px 0px 0px;\r\n  padding-bottom: ${({ tokenMode }) => tokenMode ? \"24px\" : \"0px\"};\r\n  text-align: left;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledBlock = styled.div`\r\n  background-color: #293D71;\r\n  padding-bottom: 8px;\r\n  margin: 12px 0px;\r\n  padding: 8px 24px;\r\n  background-image: url('/images/farm-step.svg');\r\n  background-position: 16px, center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps & FarmCardActionsProps> = ({\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  rbsPrice,\r\n  isMobile,\r\n  removed,\r\n  totalValueFormated,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { tokenBalance } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const chainId = 56\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(farm.tokenAddresses[chainId], farm.tokenSymbol, 18, `https://robustswap.com/images/farms/${farm.tokenSymbol === 'WBNB' ? 'BNB' : farm.tokenSymbol}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [farm])\r\n\r\n  const bscScanAddress = farm.isTokenOnly\r\n    ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const pairinfo = farm.isTokenOnly\r\n    ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.com/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  return (\r\n    <Wrapper tokenMode={tokenMode}>\r\n      {isMobile ?\r\n        <>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold', color: '#FF6B2A' }}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of PANTHER rewards each farm gets. For example, if a 1x farm was getting 1 PANTHER per block, a 40x farm would be getting 40 PANTHER per block.')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(408, 'Total Staked')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n                {tokenMode ?\r\n                  <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                  <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n                }\r\n              </Flex>\r\n            </Block>\r\n          </Flex>\r\n          <StyledBlock>\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              <div style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                <Text fontSize=\"14px\">{Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP</Text>\r\n                <Text fontSize=\"12px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n              </div>\r\n              <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl}>\r\n                {TranslateString(507, 'GET LP')}\r\n              </Button>\r\n            </Flex>\r\n            <MobileCardActionsContainer\r\n              farm={farm}\r\n              ethereum={ethereum}\r\n              account={account}\r\n              harvestInterval={harvestInterval}\r\n              stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n              rbsPrice={rbsPrice}\r\n            />\r\n          </StyledBlock>\r\n        </> :\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Flex alignItems=\"center\">\r\n            {!tokenMode && <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ marginRight: 16 }}>\r\n              {TranslateString(507, 'GET LP')}\r\n            </Button>}\r\n            <div>\r\n              {tokenMode ?\r\n                <>\r\n                  <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ width: 89, height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n                    <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n                  </Button>\r\n                </> :\r\n                <>\r\n                  <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                  <Text fontSize=\"16px\">{Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP</Text>\r\n                  <Text fontSize=\"12px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n                </>\r\n              }\r\n            </div>\r\n          </Flex>\r\n          {tokenMode && <>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n          </>}\r\n          {tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>}\r\n          {!tokenMode && <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />}\r\n          <CardActionsContainer\r\n            farm={farm}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            harvestInterval={harvestInterval}\r\n            stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n            rbsPrice={rbsPrice}\r\n            tokenMode={tokenMode}\r\n          />\r\n        </Flex>\r\n      }\r\n      {!isMobile && !tokenMode && <Divider style={{ marginTop: 16, marginBottom: 16 }} />}\r\n      {isMobile ?\r\n        <Flex justifyContent=\"space-between\" style={{ padding: '0px 24px' }}>\r\n          {!tokenMode && <><Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"12px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"12px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"12px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex> :\r\n        <Flex>\r\n          {!tokenMode && <>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n              <StyledLinkExternal href={addLiquidityUrl}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n              <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"16px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginTop: -1 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex>\r\n      }\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image } from '@robustswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex) <{ isMobile: boolean }>`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  flex-grow: 0.2;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 24px' : '0px 0px'}\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" isMobile={isMobile}>\r\n      {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} marginRight={16} />}\r\n      <div style={{ width: 40, height: isMobile ? 40 : 44 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? isMobile ? 40 : 44 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: 165, marginTop: 10 }}>\r\n        <Heading mb=\"8px\" style={{ fontWeight: 800 }}>{lpLabel.replace('LP', '')}</Heading>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / rbsPrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.com/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      rbsPrice={rbsPrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Text, Skeleton, Flex } from '@robustswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FList = styled.div<{ isMobile: boolean }>`\r\n  align-self: baseline;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: ${({ isMobile }) => isMobile ? '0px' : '0px 24px'};\r\n  position: relative;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  background-color: #151745;\r\n  margin: 0px -24px 0px -24px;\r\n  border-radius: 0px 0px 8px 8px;\r\n  padding: 0px 24px 0px 24px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  rbsPrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  usdcPrice?: BigNumber\r\n  usdtPrice?: BigNumber\r\n  ethereum?: Web3Provider\r\n  account?: string,\r\n  isMobile: boolean,\r\n  tokenMode: boolean\r\n}\r\n\r\nconst FarmList: React.FC<FarmCardProps> = ({ farm, removed, rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice, ethereum, account, isMobile, tokenMode }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const { earnings } = useFarmUser(farm.pid)\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, ethPrice, usdcPrice, usdtPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated =\r\n    totalValue && !new BigNumber(totalValue).isNaN()\r\n      ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : '-'\r\n\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  // const earnLabel = 'ROBUST'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    let lpTokenPriceVsQuote\r\n    if (farm.isTokenOnly) {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.tokenPriceVsQuote)\r\n    } else {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    ethPrice,\r\n    usdcPrice,\r\n    usdtPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly\r\n  ])\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n  return (\r\n    <FList isMobile={isMobile} style={{ backgroundColor: '#1E215C', width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      {isMobile ?\r\n        <>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            {!removed && (\r\n              <Block>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n                <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#FF6B2A' }}>\r\n                  {farm.apy ? (\r\n                    <>\r\n                      {farmAPY}%\r\n                      <ApyButton\r\n                        lpLabel={lpLabel}\r\n                        quoteTokenAdresses={quoteTokenAdresses}\r\n                        quoteTokenSymbol={quoteTokenSymbol}\r\n                        tokenAddresses={tokenAddresses}\r\n                        rbsPrice={rbsPrice}\r\n                        apy={farm.apy}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <Skeleton height={24} width={80} />\r\n                  )}\r\n                </Text>\r\n              </Block>\r\n            )}\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'ROBUST Earned')}:</Text>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n            </Block>\r\n            <ExpandableSectionButton\r\n              onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n              expanded={showExpandableSection}\r\n              viewMode={0}\r\n              isMobile={isMobile}\r\n            />\r\n          </Flex>\r\n        </> :\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ height: 88 }}>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          {!removed && (\r\n            <Block style={{ marginBottom: 'auto', marginTop: 'auto' }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n              <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n                {farm.apy ? (\r\n                  <>\r\n                    {farmAPY}%\r\n                    <ApyButton\r\n                      lpLabel={lpLabel}\r\n                      quoteTokenAdresses={quoteTokenAdresses}\r\n                      lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                      quoteTokenSymbol={quoteTokenSymbol}\r\n                      tokenAddresses={tokenAddresses}\r\n                      rbsPrice={rbsPrice}\r\n                      apy={farm.apy}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Skeleton height={24} width={80} />\r\n                )}\r\n              </Text>\r\n            </Block>\r\n          )}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n              {TranslateString(408, 'Total Staked')}:\r\n            </Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800 }}>{!removed ? totalValueFormated : 0}</Text>\r\n              {tokenMode ?\r\n                <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n              }\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n              <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'Earned')}:</Text>\r\n            <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n          </Block>\r\n          <ExpandableSectionButton\r\n            onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n            expanded={showExpandableSection}\r\n            viewMode={0}\r\n            isMobile={isMobile}\r\n          />\r\n        </Flex>\r\n      }\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          farm={farm}\r\n          ethereum={ethereum}\r\n          account={account}\r\n          rbsPrice={rbsPrice}\r\n          isMobile={isMobile}\r\n          removed={removed}\r\n          totalValueFormated={totalValueFormated}\r\n          tokenMode={tokenMode}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FList>\r\n  )\r\n}\r\n\r\nexport default FarmList\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle, Button, Input } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { setWith } from 'lodash';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly, viewMode, setViewMode, filter, setFilter, sort, setSort, isMobile }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSort(event.target.value as number);\r\n  };\r\n  return (\r\n    <Wrapper isMobile={isMobile} style={{ width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      <Flex style={{ paddingBottom: isMobile ? '16px' : 0 }}>\r\n        {!isMobile &&\r\n          <>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(false)\r\n              Cookies.set('viewMode', false)\r\n            }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-list.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-list-active.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(true)\r\n              Cookies.set('viewMode', true)\r\n            }} style={{ marginRight: 28 }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-card-active.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-card.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n          </>}\r\n        <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: 0, width: 67 }}>\r\n            {TranslateString(601, 'Live')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: 0, width: 108 }}>\r\n            {TranslateString(599, 'Finished')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <ToggleWrapper>\r\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n          <Text style={{ color: '#7381FC', fontSize: isMobile ? '14px' : '16px' }}> {TranslateString(699, 'Staked only')}</Text>\r\n        </ToggleWrapper>\r\n      </Flex>\r\n      <Flex>\r\n        <Input\r\n          id=\"search\"\r\n          name=\"search-card\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(10011, 'Search')}\r\n          style={{ maxWidth: 170, marginRight: 8 }}\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.currentTarget.value)}\r\n        // isWarning={error}\r\n        // disabled={isloading}\r\n        />\r\n        <Select\r\n          value={sort}\r\n          onChange={handleChangeSelect}\r\n          style={{\r\n            borderRadius: 8,\r\n            background: \"rgba(30, 33, 92, 1)\",\r\n            paddingLeft: \"16px\",\r\n            width: '100%',\r\n            // border: '1px solid rgba(107, 161, 255, 0.2)',\r\n            height: 40,\r\n            color: '#7381FC',\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            backgroundColor: '#1E215C'\r\n          }}\r\n          IconComponent={\r\n            () => (<ArrowDropDownIcon style={{ color: \"#7381FC\" }} />)\r\n          }\r\n          disableUnderline\r\n        >\r\n          <StyledMenuItem value={1}>{TranslateString(395, 'HOT')}</StyledMenuItem>\r\n          <StyledMenuItem value={2}>{TranslateString(457, 'Multiplier')}</StyledMenuItem>\r\n          <StyledMenuItem value={3}>{TranslateString(352, 'APR')}</StyledMenuItem>\r\n          <StyledMenuItem value={4}>{TranslateString(686, 'Liquidity')}</StyledMenuItem>\r\n          <StyledMenuItem value={5}>{TranslateString(331, 'Earned')}</StyledMenuItem>\r\n        </Select>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div<{ isMobile: boolean }>`\r\n  display: ${({ isMobile }) => isMobile ? 'block' : 'flex'};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 0px' : '0px 8px'};\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 16px;\r\n  ${Text} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 0px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 16px;\r\n  background: transparent;\r\n`\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMenuItem = styled(MenuItem)`\r\n  color: #7381FC;\r\n`","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport Cookies from 'js-cookie'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceRbsBusd, usePriceEthBusd, usePriceRbtBusd, usePriceUsdcBusd, usePriceUsdtBusd } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from 'hooks/useGetDocumentTitlePrice'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmList from './components/FarmList/FarmList'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Hero = styled.div<{ isMobile: boolean, tokenMode: boolean }>`\r\n  background-image: ${({ tokenMode, isMobile }) => !tokenMode ?\r\n    (isMobile ? \"url('/images/farms/farms-header-bg-mobile.png')\" : \"url('/images/farms/farms-header-bg.png')\") :\r\n    (isMobile ? \"url('/images/farms/pools-header-bg-mobile.png')\" : \"url('/images/farms/pools-header-bg.png')\")};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 44px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n  height: ${({ isMobile }) => isMobile ? \"240px\" : \"320px\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 34px;\r\n  line-height: 40px;\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 36px;\r\n`\r\nconst PubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  max-width: ${({ isMobile }) => isMobile ? \"327px\" : \"538px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300; \r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst FarmBanner = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/farms-banner-bg.png')\" : \"url('/images/farms/farms-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 34px 86px 34px 25px;\r\n`\r\nconst FarmBanner1 = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/pools-banner-bg.png')\" : \"url('/images/farms/pools-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 48px 96px 48px 25px;\r\n`\r\nconst BannerText = styled.text`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n`\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const isMobile = useMedia('(max-width: 768px)')\r\n  const TranslateString = useI18n()\r\n  let farmsLP = useFarms()\r\n  const [filter, setFilter] = useState('')\r\n  const [sort, setSort] = useState(1);\r\n  const { account, library } = useActiveWeb3React()\r\n  const rbsPrice = usePriceRbsBusd()\r\n  let bnbPrice = usePriceBnbBusd()\r\n  bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  const ethPrice = usePriceEthBusd()\r\n  const usdcPrice = usePriceUsdcBusd()\r\n  const usdtPrice = usePriceUsdtBusd()\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n  const { tokenMode } = farmsProps\r\n  useGetDocumentTitlePrice(!tokenMode ? 'Farms' : 'Pools')\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n  const [viewMode, setViewMode] = useState(isMobile ? isMobile : Cookies.get('viewMode') ? Cookies.get('viewMode') === 'true' : !isMobile)\r\n\r\n  const sortByMultiplier = (item1, item2) => {\r\n    return item2.multiplier.replace('X', '') - item1.multiplier.replace('X', '');\r\n  }\r\n  const sortByAPR = (item1, item2) => {\r\n    return item2.apy - item1.apy\r\n  }\r\n  const sortByLiquidity = (item1, item2) => {\r\n    return item2.lpTotalInQuoteToken - item1.lpTotalInQuoteToken\r\n  }\r\n  const sortByEarned = (item1, item2) => {\r\n    return item2.userData.earnings - item1.userData.earnings\r\n  }\r\n  // activeFarms.sort(sortByMultiplier);\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  if (filter !== '') {\r\n    activeFarms = activeFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  if (filter !== '') {\r\n    inactiveFarms = inactiveFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  if (filter !== '') {\r\n    stakedOnlyFarms = stakedOnlyFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const rbsRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n          .times(new BigNumber(farm.poolWeight))\r\n          .div(new BigNumber(10).pow(18))\r\n\r\n        const rbsRewardPerYear = rbsRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        let apy = rbsPrice.times(rbsRewardPerYear)\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          totalValue = totalValue.times(ethPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n          totalValue = totalValue.times(usdcPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n          totalValue = totalValue.times(usdtPrice)\r\n        }\r\n\r\n        if (totalValue.comparedTo(0) > 0) {\r\n          apy = apy.div(totalValue)\r\n        }\r\n        else apy = apy.div(100000000)  // exception when staking is 0\r\n        return { ...farm, apy }\r\n      })\r\n\r\n      if (sort === 1) {\r\n        // farmsToDisplayWithAPY.sort()\r\n      } else if (sort === 2) {\r\n        farmsToDisplayWithAPY.sort(sortByMultiplier)\r\n      } else if (sort === 3) {\r\n        farmsToDisplayWithAPY.sort(sortByAPR)\r\n      } else if (sort === 4) {\r\n        farmsToDisplayWithAPY.sort(sortByLiquidity)\r\n      } else if (sort === 5) {\r\n        farmsToDisplayWithAPY.sort(sortByEarned)\r\n      }\r\n      if (viewMode) {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmCard\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            rbsPrice={rbsPrice}\r\n            usdcPrice={usdcPrice}\r\n            usdtPrice={usdtPrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={library}\r\n            account={account}\r\n            isMobile={false}\r\n          />\r\n        ))\r\n      } else {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmList\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            rbsPrice={rbsPrice}\r\n            ethPrice={ethPrice}\r\n            usdcPrice={usdcPrice}\r\n            usdtPrice={usdtPrice}\r\n            ethereum={library}\r\n            account={account}\r\n            isMobile={isMobile}\r\n            tokenMode={tokenMode}\r\n          />\r\n        ))\r\n      }\r\n    },\r\n    [bnbPrice, account, rbsPrice, ethPrice, usdcPrice, usdtPrice, library, sort, viewMode, isMobile, tokenMode],\r\n  )\r\n  return (\r\n    <>\r\n      <Hero isMobile={isMobile} tokenMode={tokenMode}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbsPrice.toFixed(2)}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '38px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ display: 'block' }}>\r\n            <StyledHeading isMobile={isMobile}>\r\n              {tokenMode\r\n                ? TranslateString(676, 'Pools')\r\n                : TranslateString(674, 'Farms')}\r\n            </StyledHeading>\r\n            <PubTitle isMobile={isMobile}>\r\n              {tokenMode ?\r\n                TranslateString(730, 'Looking for competitive rewards, low-risk, and no impermanent-loss farming alternative? Stake your RBS and other tokens below to earn more RBS.') :\r\n                TranslateString(729, 'ROBUSTSWAP Farms offer multiple farming opportunities and high rewards to you. Get rewarded by staking your LP tokens.')\r\n              }\r\n            </PubTitle>\r\n          </div>\r\n          {!isMobile && <div>\r\n            {tokenMode ?\r\n              <>\r\n                <FarmBanner1 isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(737, 'High APR,')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(738, 'low risk earning.')}</BannerText>\r\n                </FarmBanner1>\r\n              </>\r\n              :\r\n              <>\r\n                <FarmBanner isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(734, 'Enjoy')}</BannerText>&nbsp;\r\n                    <BannerText style={{ color: '#D6EE47' }}>{TranslateString(735, 'FREE')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(736, 'deposit with our featured farms.')}</BannerText>\r\n                </FarmBanner>\r\n              </>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </Hero>\r\n      <Page>\r\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} viewMode={viewMode} setViewMode={setViewMode} filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} isMobile={isMobile} />\r\n        <div>\r\n          <FlexLayout isMobile={isMobile}>\r\n            <Route exact path={`${path}`}>\r\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n            </Route>\r\n            <Route exact path={`${path}/history`}>\r\n              {farmsList(inactiveFarms, true)}\r\n            </Route>\r\n          </FlexLayout>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, \"0px\", logout)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { ethers } from 'ethers'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\nexport const getContract = (provider: Web3Provider, address: string, account: string) => {\r\n  const contract = new ethers.Contract(address, erc20, getProviderOrSigner(provider, account) as any)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.allowance(account, masterChefContract.options.address)\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: Web3Provider,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress, userAddress)\r\n  try {\r\n    const balance: string = await contract.balanceOf(userAddress)\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { getMasterChefAddress } from './addressHelpers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract\r\n    .approve(getMasterChefAddress(), ethers.constants.MaxUint256)\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  const tx = await masterChefContract\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  const tx = await sousChefContract\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  const tx = await sousChefContract\r\n    .deposit()\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  const tx = await masterChefContract\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  const res = await tx.wait()\r\n\r\n  return res.hash\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    const tx = await sousChefContract\r\n      .emergencyWithdraw()\r\n    const res = await tx.wait()\r\n    return res.hash\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    const tx = await sousChefContract\r\n      .emergencyWithdraw()\r\n    const res = await tx.wait()\r\n    return res.hash\r\n  }\r\n  const tx = await sousChefContract\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  const tx = await sousChefContract\r\n    .emergencyWithdraw()\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  const tx = await masterChefContract\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  const tx = await sousChefContract\r\n    .deposit('0')\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  const tx = sousChefContract\r\n    .deposit()\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  console.log(\"master:\", masterChefContract)\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.com'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n"],"sourceRoot":""}