{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","components/UnlockButton.tsx","hooks/useWeb3.ts","hooks/useContract.ts","hooks/useTokenBalance.ts","config/constants/index.ts","utils/callHelpers.ts","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","hooks/useHarvest.ts","hooks/useFarmsWithBalance.ts","utils/wallet.ts","config/index.ts","hooks/useAllEarnings.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","views/Home/components/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/FarmJoinCard.tsx","views/Home/components/ChartComp.tsx","views/Home/components/CakeStats.tsx","views/Home/components/DexStatsCard.tsx","hooks/api.ts","views/Home/components/SupplyStatsCard.tsx","views/Home/components/LimitStatsCard.tsx","views/Home/components/ActivitiesCard.tsx","views/Home/components/TwitterCard.tsx","views/Home/components/FollowStatsCard.tsx","views/Home/Home.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","UnlockButton","props","useWallet","connect","reset","onPresentConnectModal","useWalletModal","self","title","variant","onClick","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","fetchBalance","balanceOf","bal","useMasterChefBalance","useMaxTransferLimitAmount","maxTransferLimitAmount","setMaxTransferLimitAmount","amount","fetchMaxTransferLimitAmount","useMaximumSupply","maximumSupply","setMaximumSupply","MAXIMUM_SUPPLY","maxSupply","fetchMaximumSupply","useMintedSupply","mintedSupply","setMintedSupply","mintSupply","fetchMintedSupply","useMintedBurned","mintedBurned","setMintedBurned","mintBurned","fetchMintedBurned","useSellTax","sellTax","setSellTax","transferTaxRateSell","stax","fetchSellTax","useBuyTax","buyTax","setBuyTax","transferTaxRateBuy","btax","fetchbuyTax","useTransferTaxRate","transferTaxRate","setTransferTaxRate","rate","fetchTransferTaxRate","useRbsPerBlock","rbsPBlock","setrbsPBlock","masterChefABI","rbsPerBlock","rbs","fetchRbsPBlock","useGetReserves","lpAddress","reserves","setReserves","pairABI","getReserves","_reserve1","div","fetchGetReserves","useTokenBalance","account","fastRefresh","getTokenBalance","res","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","send","from","stake","pid","referrer","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","provider","erc20","userAddress","useStyles","makeStyles","theme","createStyles","mainContainer","padding","spacing","background","palette","default","height","breakpoints","down","cardWrapper","width","marginRight","hegiht","paper","border","borderRadius","textAlign","alignItems","cardWrapper1","pageTitle","fontSize","fontWeight","color","fontFamily","subPageTitle","paddingBottom","bgWrapper","marginBottom","bodyWrapper","display","flexDirection","walletButton","statsValue","justifyContent","switchButton","flex","activeSwitcher","base","root","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","chart","chartHeader","paddingTop","activeStatus","deactiveStatus","changePercent","paddingRight","chartTitle","currentChartValue","tabList","minWidth","backgroundColor","secondary","light","select","detailChartTabs","paddingLeft","metamaskButton","marginTop","mobileMenuItem","useHarvest","farmPid","dispatch","useDispatch","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useTotalLockedUpRewards","totalLockedUpRewards","setTotalLockedUpRewards","locked","fetchTotalLockedUpRewards","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","fetchBalances","callsBalance","name","params","callsHarvest","multicall","rawResultsBalance","rawResultsHarvest","results","index","nextHarvestUntil","registerToken","tokenDecimals","tokenImage","window","request","method","type","symbol","image","tokenAdded","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","useAllEarnings","balances","fetchAllBalances","calls","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","formatTimePeriodCountdown","periods","CardValue","prefix","weight","suffix","bold","useCountUp","start","end","separator","undefined","countUp","update","updateValue","style","CakeHarvestBalance","earningsSum","TranslateString","lineHeight","CakeWalletBalance","cakeBalance","CardBusdValue","StyledFarmStakingCard","styled","Card","Block","Label","Actions","FarmedStakingCard","pendingTx","setPendingTx","farmsWithBalance","cakePrice","usePriceCakeBusd","allEarnings","isMobile","useMedia","earning","balancesWithValue","balanceType","currentTime","farmsCanHarvest","closetHarvestTime","time","harvestButtonText","secondsUntilHarvest","timeUntil","farmWithBalance","harvestAllFarms","maxWidth","disabled","fullWidth","opacity","StyledLotteryCard","as","href","FarmJoinCard","Grid","container","item","sm","xs","FarmStakingCard","LotteryCard","Chart","Row","am4core","am4themes_kelly","am4themes_animated","ChartComp","circSupply","marketCap","classes","priceChangePercent","setPriceChangePercent","setActiveStatus","volume","price","chartdata","setChartData","useMediaQuery","isPad","React","selection","setSelectValue","axios","get","then","response","price_change_percentage_24h","e","console","log","getChartData","prevState","total_volumes","prices","changeStatus","newStatus","status","cb","url","am4charts","chart1","count","chartData","i","newDate","date","push","generateChartData","gradient","addColor","rotation","dateAxis","xAxes","baseInterval","tooltipDateFormat","renderer","grid","template","labels","tooltip","dateAxis1","valueAxis","yAxes","baseGrid","valueAxis1","series","dataFields","dateX","valueY","getFillFromObject","strokeWidth","label","fill","tooltipText","fillOpacity","stroke","series1","cursor","lineY","keepSelection","Box","className","src","alt","Button","margin","Select","onChange","event","target","IconComponent","disableUnderline","MenuItem","borderTop","borderRight","borderBottom","primaryStep","StyledCakeStats","CakeStats","StyledDexStatsCard","Header","ValueTitle","Text","DexStatsCard","totalLiquidityUSD","setTotalLiquidityUsd","farm1","useFarmFromPid","bnbReserve","lpAddresses","bnbPrice","usePriceBnbBusd","isNaN","rbs1","farm2","rbs2","plus","totalValue","useTotalValue","setData","fetchData","fetch","json","responseData","error","useExchangeStats","ZERO","volumeUSD","volume_USD","registerNativeToken","StyledSupplyStatsCard","SupplyStatsCard","burnedBalance","masterChefBalance","totalLockedIncludeMasterChef","minus","cakeSupply","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","transferTax","limitAmount","StyledActivitiesCard","CalculateApr","ethPrice","cakeRewardPerYear","poolWeight","apy","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","ETH","exception","comparedTo","ActivitiesCard","farms","useFarms","usePriceEthBusd","rbsBusd","setRbsBusd","rbtBnb","setRbtBnb","setRbs","rbt","setRbt","val","to","StyledTwitterCard","TwitterCard","dataSource","sourceType","screenName","chrome","borderColor","StyledLimitStatsCard","LabelTitle","LabelSubTitle","LimitStatsCard","Hero","StyledHeading","Heading","SubTitle","LogTitle","LogPrice","Home","useReferralCode","rbsPrice","rbtPrice","usePriceRbtBusd","Page","FollowStatsCard"],"mappings":"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","file":"static/js/11.6df450b4.chunk.js","sourcesContent":["import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the ethereum provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\r\n  const refEth = useRef(ethereum)\r\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\r\n\r\n  useEffect(() => {\r\n    if (ethereum !== refEth.current) {\r\n      setweb3(new Web3(ethereum || httpProvider))\r\n      refEth.current = ethereum\r\n    }\r\n  }, [ethereum])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useEffect, useState } from 'react'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getMasterChefAddress,\r\n  getCakeAddress,\r\n  getReferralAddress,\r\n  getCakeRouterAddress,\r\n} from 'utils/addressHelpers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport ifo from 'config/abi/ifo.json'\r\nimport ens from 'config/abi/ens-registrar.json'\r\nimport ens_resolver from 'config/abi/ens-public-resolver.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport referral from 'config/abi/referral.json'\r\nimport cakeRouter from 'config/abi/cakeRouter.json'\r\nimport pair from 'config/abi/pair.json'\r\n\r\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = useWeb3()\r\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\r\n\r\n  useEffect(() => {\r\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\r\n  }, [abi, address, contractOptions, web3])\r\n\r\n  return contract\r\n}\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const ifoAbi = (ifo as unknown) as AbiItem\r\n  return useContract(ifoAbi, address)\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const erc20Abi = (erc20 as unknown) as AbiItem\r\n  return useContract(erc20Abi, address)\r\n}\r\n\r\nexport const useCake = () => {\r\n  return useERC20(getCakeAddress())\r\n}\r\n\r\nexport const usePancakeRabbits = (address: string) => {\r\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\r\n  return useContract(pancakeRabbitsAbi, address)\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const abi = (masterChef as unknown) as AbiItem\r\n  return useContract(abi, getMasterChefAddress())\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  const abi = (rawAbi as unknown) as AbiItem\r\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\r\n}\r\n\r\nexport const useReferral = () => {\r\n  const abi = (referral as unknown) as AbiItem\r\n  return useContract(abi, getReferralAddress())\r\n}\r\n\r\nexport const useCakeRouter = () => {\r\n  const abi = (cakeRouter as unknown) as AbiItem\r\n  return useContract(abi, getCakeRouterAddress())\r\n}\r\n\r\nexport const usePath = (address: string) => {\r\n  const abi = (pair as unknown) as AbiItem\r\n  return useContract(abi, address)\r\n}\r\n\r\nexport const useENSRegistrarContract = () => {\r\n  const abi = (ens as unknown) as AbiItem\r\n  let address: string | undefined\r\n  return useContract(abi, address)\r\n}\r\n\r\nexport const useENSResolverContract = (address: string | undefined) => {\r\n  const abi = (ens_resolver as unknown) as AbiItem\r\n  return useContract(address, abi)\r\n}\r\n\r\nexport default useContract\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport pairABI from 'config/abi/pair.json'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMasterChefBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf(getMasterChefAddress()).call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMaxTransferLimitAmount = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maxTransferLimitAmount, setMaxTransferLimitAmount] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaxTransferLimitAmount() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const amount = await cakeContract.methods.maxTransferLimitAmount().call()\r\n      setMaxTransferLimitAmount(new BigNumber(amount))\r\n    }\r\n\r\n    fetchMaxTransferLimitAmount()\r\n  }, [slowRefresh])\r\n\r\n  return maxTransferLimitAmount\r\n}\r\n\r\nexport const useMaximumSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maximumSupply, setMaximumSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaximumSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const maxSupply = await cakeContract.methods.MAXIMUM_SUPPLY().call()\r\n      setMaximumSupply(new BigNumber(maxSupply))\r\n    }\r\n\r\n    fetchMaximumSupply()\r\n  }, [slowRefresh])\r\n\r\n  return maximumSupply\r\n}\r\n\r\nexport const useMintedSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedSupply, setMintedSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const mintSupply = await cakeContract.methods.mintedSupply().call()\r\n      setMintedSupply(new BigNumber(mintSupply))\r\n    }\r\n\r\n    fetchMintedSupply()\r\n  }, [slowRefresh])\r\n\r\n  return mintedSupply\r\n}\r\n\r\nexport const useMintedBurned = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedBurned, setMintedBurned] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedBurned() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const mintBurned = await cakeContract.methods.mintedBurned().call()\r\n      setMintedBurned(new BigNumber(mintBurned))\r\n    }\r\n\r\n    fetchMintedBurned()\r\n  }, [slowRefresh])\r\n\r\n  return mintedBurned\r\n}\r\n\r\nexport const useSellTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [sellTax, setSellTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSellTax() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const stax = await cakeContract.methods.transferTaxRateSell().call()\r\n      setSellTax(new BigNumber(stax))\r\n    }\r\n\r\n    fetchSellTax()\r\n  }, [slowRefresh])\r\n\r\n  return sellTax\r\n}\r\n\r\nexport const useBuyTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [buyTax, setBuyTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchbuyTax() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const btax = await cakeContract.methods.transferTaxRateBuy().call()\r\n      setBuyTax(new BigNumber(btax))\r\n    }\r\n\r\n    fetchbuyTax()\r\n  }, [slowRefresh])\r\n\r\n  return buyTax\r\n}\r\n\r\nexport const useTransferTaxRate = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [transferTaxRate, setTransferTaxRate] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchTransferTaxRate() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const rate = await cakeContract.methods.transferTaxRate().call()\r\n      setTransferTaxRate(new BigNumber(rate))\r\n    }\r\n\r\n    fetchTransferTaxRate()\r\n  }, [slowRefresh])\r\n\r\n  return transferTaxRate\r\n}\r\n\r\nexport const useRbsPerBlock = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [rbsPBlock, setrbsPBlock] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchRbsPBlock() {\r\n      const cakeContract = getContract(masterChefABI, getMasterChefAddress())\r\n      const rbs = await cakeContract.methods.rbsPerBlock().call()\r\n      setrbsPBlock(new BigNumber(rbs))\r\n    }\r\n\r\n    fetchRbsPBlock()\r\n  }, [slowRefresh])\r\n\r\n  return rbsPBlock\r\n}\r\n\r\nexport const useGetReserves = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [reserves, setReserves] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchGetReserves() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.getReserves().call()\r\n      setReserves(new BigNumber(rbs?._reserve1).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchGetReserves()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return reserves\r\n}\r\n\r\nexport const useCirculatinSupply = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [supply, setSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSupply() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.totalSupply().call()\r\n      setSupply(new BigNumber(rbs).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchSupply()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return supply\r\n}\r\n\r\nexport default useTokenBalance\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\nimport { useMasterchef } from './useContract'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n  nextHarvestUntil: number\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const callsBalance = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const callsHarvest = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'userInfo',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResultsBalance = await multicall(masterChefABI, callsBalance)\r\n      const rawResultsHarvest = await multicall(masterChefABI, callsHarvest)\r\n      const results = farmsConfig.map((farm, index) => ({\r\n        ...farm,\r\n        balance: new BigNumber(rawResultsBalance[index]),\r\n        nextHarvestUntil: rawResultsHarvest[index].nextHarvestUntil.toNumber(),\r\n      }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport const useTotalLockedUpRewards = () => {\r\n  const [totalLockedUpRewards, setTotalLockedUpRewards] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalLockedUpRewards() {\r\n      const locked = await masterChefContract.methods.totalLockedUpRewards().call()\r\n      setTotalLockedUpRewards(new BigNumber(locked))\r\n    }\r\n\r\n    fetchTotalLockedUpRewards()\r\n  }, [slowRefresh, masterChefContract])\r\n\r\n  return totalLockedUpRewards\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.fi'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const res = await multicall(masterChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  suffix?: string\r\n  weight?: number\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '20px',\r\n  prefix = '',\r\n  weight = 400,\r\n  suffix = '',\r\n  bold = false,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ fontWeight: weight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n      {suffix}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport { Text } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n// import BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\n// import useAllEarnings from 'hooks/useAllEarnings'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeHarvestBalance = ({ earningsSum }) => {\r\n  const TranslateString = useI18n()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" fontSize=\"18px\" style={{ color: '#767676', lineHeight: '22px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={earningsSum} fontSize=\"34px\" />\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","import React from 'react'\r\nimport { Text } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n// import useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\n// import { getCakeAddress } from 'utils/addressHelpers'\r\n// import { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWalletBalance = ({ cakeBalance }) => {\r\n  const TranslateString = useI18n()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" fontSize=\"18px\" style={{ color: '#767676', lineHeight: '22px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={cakeBalance} fontSize=\"34px\" />\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"12px\" lineHeight=\"14px\" color=\"text\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardBusdValue\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\nimport { usePriceCakeBusd } from '../../../state/hooks'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport { getCakeAddress } from '../../../utils/addressHelpers'\r\nimport useAllEarnings from '../../../hooks/useAllEarnings'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n// import { registerToken } from '../../../utils/wallet'\r\nimport CardBusdValue from './CardBusdValue'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-color: #293D71;\r\n  background-image: url('/images/farm-staking-bg.svg'), linear-gradient(90.04deg, #0C0720 0.04%, #291A83 99.97%);;\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\n// const TokenImageWrapper = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   margin-bottom: 16px;\r\n// `\r\n\r\n// const CardImage = styled.img`\r\n//   margin-right: 12px;\r\n// `\r\n\r\nconst Label = styled.div`\r\n  background:linear-gradient(to bottom, #89FFE3, #BEFF74, #BEFF74);\r\n  -webkit-background-clip: text;\r\n\t-webkit-text-fill-color: transparent;\r\n  font-size: 34px;\r\n  font-weight: 600;\r\n  line-height: 40px;\r\n  letter-spacing: 0.5px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\r\n  const cakePrice = usePriceCakeBusd().toNumber()\r\n  const allEarnings = useAllEarnings()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  // Get farms can harvest and closet harvest time\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const farmsCanHarvest = balancesWithValue.filter(\r\n    (farm) => farm.nextHarvestUntil <= currentTime && farm.nextHarvestUntil > 0,\r\n  )\r\n\r\n  const closetHarvestTime = balancesWithValue.reduce((time, farm) => {\r\n    return time <= 0 || time >= farm.nextHarvestUntil ? farm.nextHarvestUntil : time\r\n  }, 0)\r\n\r\n  // Harvest button text display logic\r\n  let harvestButtonText = 'HARVEST ALL'\r\n  if (balancesWithValue.length > 0) {\r\n    if (farmsCanHarvest.length === balancesWithValue.length) {\r\n      harvestButtonText = `HARVEST ALL (${balancesWithValue.length})`\r\n    } else if (farmsCanHarvest.length > 0 && farmsCanHarvest.length < balancesWithValue.length) {\r\n      harvestButtonText = `HARVEST ALL (${farmsCanHarvest.length} of ${balancesWithValue.length})`\r\n    } else if (farmsCanHarvest.length <= 0 && balancesWithValue.length > 0) {\r\n      const secondsUntilHarvest = closetHarvestTime - currentTime\r\n      const timeUntil = getTimePeriods(secondsUntilHarvest)\r\n      harvestButtonText = `HARVEST IN ${formatTimePeriodCountdown(timeUntil)}`\r\n    }\r\n  }\r\n\r\n  const { onReward } = useAllHarvest(farmsCanHarvest.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard style={{ maxWidth: isMobile ? '100%' : '320px' }}>\r\n      <CardBody style={{ padding: 32 }}>\r\n        <Label>{TranslateString(544, 'Farms & Staking')}</Label>\r\n        <Block style={{ display: 'flex', marginTop: 24 }}>\r\n          <div style={{ width: '50%' }}>\r\n            <h5 style={{ fontSize: 12, lineHeight: '14px', color: '#E354FA' }}>RBS to Harvest</h5>\r\n            <CakeHarvestBalance earningsSum={earningsSum} />\r\n            <CardBusdValue value={cakePrice * earningsSum} decimals={3} />\r\n          </div>\r\n          <div style={{ width: '50%' }}>\r\n            <h5 style={{ fontSize: 12, lineHeight: '14px', color: '#E354FA' }}>RBS in Wallet</h5>\r\n            <CakeWalletBalance cakeBalance={cakeBalance} />\r\n            <CardBusdValue value={cakePrice * cakeBalance} decimals={3} />\r\n          </div>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <Button\r\n                variant=\"subtle\"\r\n                id=\"harvest-all\"\r\n                disabled={balancesWithValue.length <= 0 || farmsCanHarvest.length <= 0 || pendingTx}\r\n                onClick={harvestAllFarms}\r\n                fullWidth\r\n                style={{ background: 'linear-gradient(89.57deg, #89FFE3 0.25%, #BEFF74 53.04%, #FFF174 96.52%)', color: '#5F47EE', opacity: 0.4 }}\r\n              >\r\n                {pendingTx ? TranslateString(548, 'Collecting ROBUST') : TranslateString(999, harvestButtonText)}\r\n              </Button>\r\n              {/* <StyledLink to='/account'>\r\n                VIEW DETAIL\r\n              </StyledLink> */}\r\n            </div>\r\n          ) : (\r\n            <UnlockButton fullWidth variant=\"primary\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody >\r\n    </StyledFarmStakingCard >\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n// import CakeWinnings from './CakeWinnings'\r\n\r\nconst StyledLotteryCard = styled(Card)`\r\n  background: linear-gradient(90.04deg, #0C0720 0.04%, #291A83 99.97%);\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  border-radius: 16px;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: #FCFCFC;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  font-weight: 800;\r\n  letter-spacing: 0.5px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n\r\n  return (\r\n    <StyledLotteryCard style={{ maxWidth: isMobile ? '100%' : '320px' }}>\r\n      <CardBody>\r\n        <Block>\r\n          <Label>{TranslateString(554, 'Join the revolution with the Robust Protocol community.')}</Label>\r\n        </Block>\r\n        <Button style={{ width: '100%', marginTop: isMobile ? 48 : 16 }} as=\"a\" href=\"https://exchange.robustswap.fi/#/swap?outputCurrency=0x95336aC5f7E840e7716781313e1607F7C9D6BE25\">BUY RBS</Button>\r\n        <Button style={{ width: '100%', marginTop: 16 }} as=\"a\" href=\"https://exchange.robustswap.fi/#/swap?outputCurrency=0x891e4554227385c5c740f9b483e935e3cbc29f01\">BUY RBT</Button>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FarmStakingCard from './FarmStakingCard'\r\nimport LotteryCard from './LotteryCard'\r\n// import CakeWinnings from './CakeWinnings'\r\n\r\nconst FarmJoinCard = () => {\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ marginBottom: 24 }}>\r\n      <Grid item sm={6} xs={12}>\r\n        <FarmStakingCard />\r\n      </Grid>\r\n      <Grid item sm={6} xs={12}>\r\n        <LotteryCard />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FarmJoinCard\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Text, Progress } from '@robustswap-libs/uikit'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_kelly from \"@amcharts/amcharts4/themes/kelly\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import useI18n from 'hooks/useI18n'\r\nimport axios from 'axios'\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useTotalSupply } from 'hooks/useTokenBalance'\r\nimport useStyles from \"../../../assets/styles\";\r\nimport { usePriceCakeBusd } from '../../../state/hooks'\r\n\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\n\r\n/* Chart code */\r\n// Themes begin\r\n\r\nconst Chart = styled.div`\r\n    margin: -14.5px -15px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n`\r\n\r\nam4core.useTheme(am4themes_kelly);\r\nam4core.useTheme(am4themes_animated);\r\n\r\ninterface ChartProps {\r\n    volume: [],\r\n    price: []\r\n}\r\nconst ChartComp = () => {\r\n    const totalSupply = useTotalSupply()\r\n    const circSupply = totalSupply\r\n    const cakePrice = usePriceCakeBusd()\r\n    const marketCap = cakePrice.times(circSupply)\r\n    const classes = useStyles.chart();\r\n    // const TranslateString = useI18n()\r\n    const [priceChangePercent, setPriceChangePercent] = useState(0);\r\n    const [activeStatus, setActiveStatus] = useState<number>(1);\r\n    const [chartdata, setChartData] = useState<ChartProps>({\r\n        volume: [],\r\n        price: []\r\n    });\r\n    const isMobile = useMediaQuery('(max-width: 1024px)')\r\n    const isPad = useMediaQuery('(max-width: 720px)')\r\n    const [selection, setSelectValue] = React.useState<number>(1);\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setSelectValue(event.target.value as number)\r\n        changeStatus(event.target.value as number)\r\n    };\r\n\r\n    useEffect(() => {\r\n        try {\r\n            axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=robust-token&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n                .then(response => {\r\n                    setPriceChangePercent(response.data[0].price_change_percentage_24h)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`)\r\n        }\r\n        getChartData(activeStatus, (data: any) => {\r\n            setChartData(prevState => ({\r\n                ...prevState,\r\n                'volume': data.total_volumes,\r\n                'price': data.prices\r\n            }));\r\n        });\r\n    }, [activeStatus])\r\n    const changeStatus = async (newStatus: number) => {\r\n        setActiveStatus(newStatus);\r\n\r\n        getChartData(newStatus, (data: any) => {\r\n            setChartData(prevState => ({\r\n                ...prevState,\r\n                'volume': data.total_volumes,\r\n                'price': data.prices\r\n            }));\r\n        });\r\n\r\n    }\r\n    function getChartData(status: any, cb: any) {\r\n        let duration = '1';\r\n\r\n        if (status === 1) {\r\n            duration = '7'\r\n        } else if (status === 2) {\r\n            duration = '30'\r\n        } else {\r\n            duration = 'max'\r\n        }\r\n        const url = `https://api.coingecko.com/api/v3/coins/robust-token/market_chart?vs_currency=usd&days=${duration}`\r\n\r\n        try {\r\n            axios.get(url)\r\n                .then(response => {\r\n                    cb(response.data)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`)\r\n        }\r\n    }\r\n    function generateChartData(data: any) {\r\n        let count = data['volume'].length;\r\n        let chartData = [];\r\n        // current date\r\n        var item = {\r\n\r\n        }\r\n        for (var i = 0; i < count; i++) {\r\n            if (data['volume'][i]) {\r\n                let newDate = new Date(data['volume'][i][0]);\r\n                let volume = 0;\r\n                let price = 0;\r\n\r\n                volume = data['volume'][i][1]\r\n                price = data['price'][i][1]\r\n\r\n                item = {\r\n                    date: newDate,\r\n                    volume: volume,\r\n                    price: price\r\n                }\r\n                chartData.push({\r\n                    date: newDate,\r\n                    volume: volume,\r\n                    price: price\r\n                });\r\n            } else {\r\n                chartData.push(item);\r\n            }\r\n        }\r\n        return chartData;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chartdata && chartdata['volume'].length) {\r\n            let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n            let chart1 = am4core.create(\"chartdiv1\", am4charts.XYChart);\r\n\r\n            chart.data = generateChartData(chartdata);\r\n            chart1.data = chart.data;\r\n            let gradient = new am4core.LinearGradient();\r\n            gradient.addColor(am4core.color(\"rgba(179,71,238,1)\"));\r\n            gradient.addColor(am4core.color(\"rgba(179,71,238,0)\"));\r\n            gradient.rotation = 90;\r\n\r\n            let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n            dateAxis.baseInterval = {\r\n                \"timeUnit\": \"minute\",\r\n                \"count\": 1\r\n            };\r\n            dateAxis.tooltipDateFormat = \"HH:mm, d MMMM\";\r\n            dateAxis.renderer.grid.template.disabled = true;\r\n            dateAxis.renderer.labels.template.disabled = true;\r\n            dateAxis.tooltip.disabled = true;\r\n\r\n            let dateAxis1 = chart1.xAxes.push(new am4charts.DateAxis());\r\n            dateAxis1.baseInterval = {\r\n                \"timeUnit\": \"minute\",\r\n                \"count\": 1\r\n            };\r\n            dateAxis1.tooltipDateFormat = \"HH:mm, d MMMM\";\r\n            dateAxis1.renderer.grid.template.disabled = true;\r\n            dateAxis1.renderer.labels.template.disabled = true;\r\n            dateAxis1.tooltip.disabled = true;\r\n\r\n            let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n            valueAxis.tooltip.disabled = true;\r\n            valueAxis.renderer.baseGrid.disabled = true;\r\n            valueAxis.renderer.grid.template.disabled = true;\r\n            valueAxis.renderer.labels.template.disabled = true;\r\n            // valueAxis.title.text = \"Unique visitors\";\r\n\r\n            let valueAxis1 = chart1.yAxes.push(new am4charts.ValueAxis());\r\n            valueAxis1.tooltip.disabled = true;\r\n            valueAxis1.renderer.baseGrid.disabled = true;\r\n            valueAxis1.renderer.grid.template.disabled = true;\r\n            valueAxis1.renderer.labels.template.disabled = true;\r\n\r\n            let series = chart.series.push(new am4charts.LineSeries());\r\n            series.dataFields.dateX = \"date\";\r\n            series.dataFields.valueY = \"volume\";\r\n            series.tooltip.getFillFromObject = false;\r\n            series.tooltip.background.strokeWidth = 0;\r\n            series.tooltip.label.fontSize = 14;\r\n            series.tooltip.background.fill = am4core.color(\"#151745\");\r\n            series.tooltip.label.fill = am4core.color(\"#FFFFFF\");\r\n            series.tooltipText = \"{date}\\nPrice: $ {price}\\nVolume: {valueY}\";\r\n            series.fillOpacity = 0.3;\r\n            series.fill = gradient;\r\n            series.stroke = am4core.color(\"#B347EE\")\r\n            series.strokeWidth = 3;\r\n\r\n            let series1 = chart1.series.push(new am4charts.ColumnSeries());\r\n            series1.dataFields.dateX = \"date\";\r\n            series1.dataFields.valueY = \"volume\";\r\n            series1.stroke = am4core.color(\"#3924B5\")\r\n            series1.strokeWidth = 3;\r\n            series1.marginBottom = 0;\r\n\r\n            chart.cursor = new am4charts.XYCursor();\r\n            chart.cursor.lineY.opacity = 0;\r\n            chart1.cursor = new am4charts.XYCursor();\r\n            chart1.cursor.lineY.opacity = 0;\r\n            // chart.scrollbarX = new am4charts.XYChartScrollbar();\r\n            // chart.scrollbarX.series.push(series);\r\n\r\n            dateAxis.start = 0.8;\r\n            dateAxis.keepSelection = false;\r\n\r\n            dateAxis1.start = 0.8;\r\n            dateAxis1.keepSelection = false;\r\n\r\n        }\r\n    }, [chartdata]);\r\n    return (\r\n        <div>\r\n            <Box className={classes.chartHeader}>\r\n                <Box>\r\n                    <Box style={{ display: 'flex' }}>\r\n                        <Box style={{ display: 'flex', paddingLeft: 24, alignItems: 'center', flexDirection: 'column' }}>\r\n                            <img src=\"/images/farms/RBS.svg\" alt=\"rbs logo\" width={51} height={51} />\r\n                        </Box>\r\n                        <Box style={{ display: 'flex', paddingLeft: 8, flexDirection: 'column', justifyContent: 'center' }}>\r\n                            <Text style={{ fontSize: 12, color: '#FCFCFC' }}>RBS</Text>\r\n                            <Box style={{ display: 'flex', flexDirection: 'initial' }}>\r\n                                <Text style={{\r\n                                    fontSize: 34, color: '#FCFCFC', fontWeight: 600\r\n                                }}>{cakePrice ? '$' : ''}{cakePrice ? cakePrice.toFixed(2) : '-'}</Text>\r\n                                <Text style={{ fontFamily: 'Poppins', fontSize: 14, color: priceChangePercent < 0 ? 'red' : '#38D047', marginTop: 15, marginLeft: 4 }}>{priceChangePercent > 0 ? '+' : ''}{priceChangePercent ? priceChangePercent.toFixed(2) : 2.1}%</Text>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                {!isMobile && <Box style={{ paddingRight: 20, paddingBottom: 22 }}>\r\n                    <Button\r\n                        onClick={() => changeStatus(1)}\r\n                        className={activeStatus === 1 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        1W\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => changeStatus(2)}\r\n                        className={activeStatus === 2 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        1M\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => changeStatus(3)}\r\n                        className={activeStatus === 3 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        All\r\n                    </Button>\r\n                </Box>}\r\n            </Box>\r\n            {isMobile &&\r\n                <Box style={{ paddingTop: 16, margin: '0px 24px' }}>\r\n                    <Select\r\n                        value={selection}\r\n                        onChange={handleChangeSelect}\r\n                        style={{\r\n                            borderRadius: 8,\r\n                            background: \"rgba(107, 161, 255, 0.2)\",\r\n                            padding: \"0px 16px\",\r\n                            width: '100%',\r\n                            border: '1px solid rgba(107, 161, 255, 0.2)',\r\n                            height: 40\r\n                        }}\r\n                        IconComponent={\r\n                            () => (<ArrowDropDownIcon style={{ color: \"#FFFFFF\" }} />)\r\n                        }\r\n                        disableUnderline\r\n                    >\r\n                        <MenuItem className={classes.mobileMenuItem} value={1} style={{ background: '#1E215C' }}>1W</MenuItem>\r\n                        <MenuItem className={classes.mobileMenuItem} value={2}>1M</MenuItem>\r\n                        <MenuItem className={classes.mobileMenuItem} value={3}>ALL</MenuItem>\r\n                    </Select>\r\n                </Box>\r\n            }\r\n            <Chart>\r\n                <div id=\"chartdiv\" style={{\r\n                    width: \"calc(100%+30px)\",\r\n                    height: 300,\r\n                    display: \"block\",\r\n                }}></div>\r\n                <div id=\"chartdiv1\" style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"block\"\r\n                }}></div>\r\n            </Chart>\r\n            <Box style={{ borderTop: '1px solid #0C0720' }}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item sm={6} xs={12} style={{ borderRight: isPad ? '' : '1px solid #0C0720', borderBottom: isPad ? '1px solid #0C0720' : '', padding: 16 }}>\r\n                        <Text style={{ color: '#A0B9FB', fontSize: 14, marginBottom: 8 }}>24h Low/ 24h High</Text>\r\n                        <Row>\r\n                            $91.80\r\n                            <div style={{ width: '55%', height: 8 }}><Progress primaryStep={60} /></div>\r\n                            $98.68\r\n                        </Row>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12} style={{ padding: 16 }}>\r\n                        <Text style={{ color: '#A0B9FB', fontSize: 14, marginBottom: 8 }}>Market Cap</Text>\r\n                        <Row>${marketCap?.div(new BigNumber(10 ** 18)).toString()}</Row>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default ChartComp;\r\n","import React from 'react'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport styled from 'styled-components'\r\n// import useI18n from 'hooks/useI18n'\r\nimport ChartComp from './ChartComp'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background: #1E215C;\r\n  margin-bottom: 24px;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  // const TranslateString = useI18n()\r\n  // const masterChefBalance = useMasterChefBalance(getCakeAddress())\r\n  // const totalLocked = useTotalLockedUpRewards()\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      {/* <CardBody> */}\r\n      <ChartComp />\r\n      <Grid container spacing={0}>\r\n        <Grid item sm={6} xs={12}>\r\n        </Grid>\r\n      </Grid>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card, Text } from '@robustswap-libs/uikit'\r\nimport Button from '@material-ui/core/Button';\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useExchangeStats } from 'hooks/api'\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { useFarmFromPid, usePriceBnbBusd, useTotalValue } from \"state/hooks\";\r\nimport { useGetReserves, useCirculatinSupply } from \"hooks/useTokenBalance\";\r\nimport CardValue from './CardValue'\r\nimport useStyles from \"../../../assets/styles\";\r\nimport { registerToken } from '../../../utils/wallet'\r\nimport { getCakeAddress } from '../../../utils/addressHelpers'\r\n\r\nconst StyledDexStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  padding: 16px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\nconst ValueTitle = styled(Text)`\r\n  color: #FCFCFC;\r\n  font-size: 12px;\r\n  line-height: 14px;  \r\n`\r\n\r\nconst DexStatsCard = () => {\r\n  const [totalLiquidityUSD, setTotalLiquidityUsd] = useState(new BigNumber(0))\r\n  const chainId = 56\r\n  const farm1 = useFarmFromPid(1)\r\n  const bnbReserve = useGetReserves(farm1.lpAddresses[chainId])\r\n  let bnbPrice = usePriceBnbBusd()\r\n  if (!bnbPrice.isNaN() && bnbPrice.toString() !== '0') {\r\n    bnbPrice = new BigNumber(1).div(bnbPrice)\r\n  }\r\n  const rbs1 = bnbReserve.times(bnbPrice).times(new BigNumber(2))\r\n  const farm2 = useFarmFromPid(0)\r\n  const busdReserve = useGetReserves(farm2.lpAddresses[chainId])\r\n  const rbs2 = busdReserve.times(new BigNumber(2))\r\n\r\n  useEffect(() => {\r\n    if (!rbs1.isNaN() && !rbs2.isNaN() && rbs1 !== new BigNumber(0) && rbs2 !== new BigNumber(0)) {\r\n      setTotalLiquidityUsd(rbs1.plus(rbs2))\r\n    }\r\n  }, [rbs1, rbs2])\r\n\r\n  const TranslateString = useI18n()\r\n  const classes = useStyles.chart();\r\n  const totalValue = useTotalValue()\r\n  const data = useExchangeStats()\r\n  const ZERO = new BigNumber(0)\r\n  const volumeUSD = data ? new BigNumber(data?.data?.volume_USD) : ZERO\r\n\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(getCakeAddress(), 'RBS', 18, `https://robustswap.fi/images/farms/RBS.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(688, 'Overview')}</Text>\r\n        <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, width: 89, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px' }}>\r\n          <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n        </Button>\r\n      </Header>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(10035, 'Total Liquidity')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={totalLiquidityUSD?.toNumber()} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(10036, '24H Volume')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={getBalanceNumber(volumeUSD, 0)} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard style={{ marginRight: 0 }}>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(297, 'TVL')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={totalValue.toNumber()} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n      </Grid></>\r\n  )\r\n}\r\n\r\nexport default DexStatsCard\r\n","import { useEffect, useState } from 'react'\r\n\r\n/*\r\n * Due to Cors the api was forked and a proxy was created\r\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\r\n */\r\nexport const baseUrl = 'https://api.robustswap.com/api'\r\nexport const exchangeBaseUrl = 'https://api.robustswap.info/api'\r\n\r\n/* eslint-disable camelcase */\r\n\r\nexport interface TradePair {\r\n  swap_pair_contract: string\r\n  base_symbol: string\r\n  quote_symbol: string\r\n  last_price: number\r\n  base_volume_24_h: number\r\n  quote_volume_24_h: number\r\n}\r\n\r\nexport interface ApiStatResponse {\r\n  update_at: string\r\n  '24h_total_volume': number\r\n  total_value_locked: number\r\n  total_value_locked_all: number\r\n  trade_pairs: {\r\n    [key: string]: TradePair\r\n  }\r\n}\r\n\r\nexport interface ApiExchangeStatResponse {\r\n  updated_at: string\r\n  data: {\r\n    total_liquidity_BNB: string\r\n    total_liquidity_USD: string\r\n    total_volume_BNB: string\r\n    total_volume_USD: string\r\n    volume_BNB: string\r\n    volume_USD: string\r\n    tx_count: number\r\n  }\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<ApiStatResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${baseUrl}/stat`)\r\n        const responsedata: ApiStatResponse = await response.json()\r\n\r\n        setData(responsedata)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n\r\nexport const useExchangeStats = () => {\r\n  const [data, setData] = useState<ApiExchangeStatResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${exchangeBaseUrl}/stats`)\r\n        const responseData: ApiExchangeStatResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  useBurnedBalance,\r\n  useMasterChefBalance,\r\n  useMaximumSupply,\r\n  useMintedSupply,\r\n  useMintedBurned,\r\n  useRbsPerBlock,\r\n  useTotalSupply\r\n} from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\nimport { useTotalLockedUpRewards } from '../../../hooks/useFarmsWithBalance'\r\n\r\nconst StyledSupplyStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  border-radius: 0px;\r\n  border-right: 1px solid #151745;\r\n  border-bottom:1px solid #151745;\r\n  padding: 16px 0px 16px 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  color: #A0B9FB;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n  padding-right:16px;\r\n`\r\nconst SupplyStatsCard = () => {\r\n  const maximumSupply = useMaximumSupply()\r\n  const mintedSupply = useMintedSupply()\r\n  const mintedBurned = useMintedBurned()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const masterChefBalance = useMasterChefBalance(getCakeAddress())\r\n  const totalLocked = useTotalLockedUpRewards()\r\n  const totalLockedIncludeMasterChef = totalLocked.plus(masterChefBalance)\r\n  const rbsPerBlock = useRbsPerBlock()\r\n  const circSupply = totalSupply\r\n    ? totalSupply.minus(burnedBalance.plus(totalLockedIncludeMasterChef))\r\n    : new BigNumber(0)\r\n  const cakeSupply = getBalanceNumber(circSupply)\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n  // const volumeUSD = data ? new BigNumber(data?.data?.volume_USD) : ZERO\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ paddingLeft: 0 }}>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopLeftRadius: 16, borderTopRightRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Maximum\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(maximumSupply, 18)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopRightRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Minted\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(mintedSupply)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Unharvested Rewards\r\n            <CardValue fontSize=\"16px\" value={totalLockedIncludeMasterChef.toNumber()} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Circulation\r\n            <CardValue fontSize=\"16px\" value={cakeSupply} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Emission per block\r\n            <CardValue fontSize=\"16px\" value={rbsPerBlock.div(new BigNumber(10 ** 18)).toNumber()} decimals={2} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 16 : 0, borderBottomRightRadius: 16 }}>\r\n          {/* <Row>\r\n            <ValueTitle>{TranslateString(10036, '24H Volume')}</ValueTitle>\r\n          </Row> */}\r\n          <Row>\r\n            Burned\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(mintedBurned, 0)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default SupplyStatsCard","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport {\r\n  useSellTax,\r\n  useBuyTax,\r\n  useTransferTaxRate,\r\n  useMaxTransferLimitAmount\r\n} from 'hooks/useTokenBalance'\r\nimport CardValue from './CardValue'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n\r\nconst StyledSupplyStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  border-radius: 0px;\r\n  border-right: 1px solid #151745;\r\n  border-bottom:1px solid #151745;\r\n  padding: 16px 0px 16px 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  color: #A0B9FB;\r\n  padding-right: 16px;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n`\r\nconst SupplyStatsCard = () => {\r\n  // const TranslateString = useI18n()\r\n  const sellTax = useSellTax()\r\n  const buyTax = useBuyTax()\r\n  const transferTax = useTransferTaxRate()\r\n  const limitAmount = useMaxTransferLimitAmount()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopLeftRadius: 16, borderTopRightRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Sell Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(sellTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopRightRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Buy Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(buyTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Transfer Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(transferTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomRightRadius: 16, borderBottomLeftRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Amount Limit\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(limitAmount, 18)} decimals={2} suffix=\"RBS\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default SupplyStatsCard","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from \"react-router-dom\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarms, usePriceBnbBusd, usePriceEthBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledActivitiesCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  padding: 16px 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CalculateApr = (farm: Farm, cakePrice: BigNumber, bnbPrice: BigNumber, ethPrice: BigNumber) => {\r\n\r\n  const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n    .times(new BigNumber(farm.poolWeight))\r\n    .div(new BigNumber(10).pow(18))\r\n\r\n  const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n  let apy = cakePrice.times(cakeRewardPerYear)\r\n  let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n    totalValue = totalValue.times(bnbPrice)\r\n  }\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n    totalValue = totalValue.times(ethPrice)\r\n  }\r\n  const exception = farm.lpTotalInQuoteToken?.toString() === '0' ? 10 : 1\r\n\r\n  if (totalValue.comparedTo(0) > 0) {\r\n    apy = apy.div(totalValue)\r\n  }\r\n  else apy = apy.div(exception)\r\n  return apy.toNumber()\r\n}\r\n\r\nconst ActivitiesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const farms = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const [rbsBusd, setRbsBusd] = useState(0)\r\n  const [rbtBnb, setRbtBnb] = useState(0)\r\n  const [rbs, setRbs] = useState(0)\r\n  const [rbt, setRbt] = useState(0)\r\n  useEffect(() => {\r\n    let val = CalculateApr(farms[0], cakePrice, bnbPrice, ethPrice)\r\n    setRbsBusd(val)\r\n    val = CalculateApr(farms[1], cakePrice, bnbPrice, ethPrice)\r\n    setRbtBnb(val)\r\n    val = CalculateApr(farms[24], cakePrice, bnbPrice, ethPrice)\r\n    setRbs(val)\r\n    val = CalculateApr(farms[25], cakePrice, bnbPrice, ethPrice)\r\n    setRbt(val)\r\n  }, [bnbPrice, cakePrice, ethPrice, farms])\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item sm={6} xs={12} >\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>Top Farms</Text>\r\n        <StyledActivitiesCard>\r\n          <Link to='/farms'>\r\n            <Row>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBS.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" />\r\n                <img src=\"/images/farms/BUSD.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginLeft: -8, marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBS-BUSD')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbsBusd} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n            <Row style={{ marginBottom: 0 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBT.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" />\r\n                <img src=\"/images/farms/BNB.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginLeft: -8, marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBT-BNB')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbtBnb} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n          </Link>\r\n        </StyledActivitiesCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} >\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>Top Pools</Text>\r\n        <StyledActivitiesCard>\r\n          <Link to='/pools'>\r\n            <Row>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBS.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBS')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbs} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n            <Row style={{ marginBottom: 0 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBT.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBT')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbt} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n          </Link>\r\n        </StyledActivitiesCard>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ActivitiesCard\r\n","import React from 'react'\r\nimport { Card, CardBody } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { Timeline } from 'react-twitter-widgets'\r\n// import useI18n from 'hooks/useI18n'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  min-height: 365px;\r\n  background-color: #151745;\r\n  border: 8px;\r\n  border-bottom-left-radius: 0px;\r\n  border-bottom-right-radius: 0px;\r\n`\r\n\r\nconst TwitterCard = () => {\r\n  // const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTwitterCard>\r\n      <CardBody>\r\n        <Timeline\r\n          dataSource={{\r\n            sourceType: 'profile',\r\n            screenName: 'RobustProtocol',\r\n          }}\r\n          options={{\r\n            height: '350',\r\n            chrome: 'transparent, noheader, nofooter, noscrollbar',\r\n            theme: 'dark',\r\n            borderColor: '#1f2432',\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  )\r\n}\r\n\r\nexport default TwitterCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport TwitterCard from './TwitterCard'\r\n\r\nconst StyledLimitStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px 16px 0px 0px;\r\n  background: #1E215C;\r\n  padding: 16px 16px 0px 16px;\r\n`\r\n\r\nconst LabelTitle = styled.div`\r\n  margin-bottom:8px;\r\n  color: #A0B9FB;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n`\r\n\r\nconst LabelSubTitle = styled.div`\r\n  margin-bottom:8px;\r\n  color: #FCFCFC;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n`\r\n\r\nconst LimitStatsCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledLimitStatsCard>\r\n      <LabelTitle>{TranslateString(10039, 'Follow us on twitter')}</LabelTitle>{/* <CardValue fontSize=\"20px\" value={getBalanceNumber(totalLiquidityUSD, 0)} decimals={0} prefix=\"$\" /> */}\r\n      <LabelSubTitle>@robustprotocol</LabelSubTitle>\r\n      <TwitterCard />\r\n    </StyledLimitStatsCard>\r\n  )\r\n}\r\n\r\nexport default LimitStatsCard","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport { usePriceCakeBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport FarmStakingCard from './components/FarmStakingCard'\r\nimport LotteryCard from './components/LotteryCard'\r\nimport FarmJoinCard from './components/FarmJoinCard'\r\nimport CakeStats from './components/CakeStats'\r\nimport { useReferralCode } from '../../state/hooks'\r\nimport DexStatsCard from './components/DexStatsCard'\r\nimport SupplyStatsCard from './components/SupplyStatsCard'\r\nimport LimitStatsCard from './components/LimitStatsCard'\r\nimport ActivitiesCard from './components/ActivitiesCard'\r\nimport FollowStatsCard from './components/FollowStatsCard'\r\nimport 'assets/css/chart.css'\r\n\r\nconst Hero = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/header-welcome-bg-mobile.svg')\" : \"url('/images/header-welcome-bg.png')\"};\r\n  background-position: center, center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 25px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n\r\n  height: ${({ isMobile }) => isMobile ? \"320px\" : \"360px\"};\r\n  padding-top: ${({ isMobile }) => isMobile ? \"40px\" : \"0px\"};\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 800;\r\n  font-size: ${({ isMobile }) => isMobile ? \"48px\" : \"72px\"};\r\n  line-height: ${({ isMobile }) => isMobile ? \"48px\" : \"80px\"};\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  width: ${({ isMobile }) => isMobile ? \"343px\" : \"543px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 24px;\r\n`\r\nconst SubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-family: Poppins;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  width: ${({ isMobile }) => isMobile ? \"343px\" : \"543px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300;\r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst Home: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  useReferralCode()\r\n  const isMobile = useMedia('(max-width: 800px)')\r\n  const rbsPrice = usePriceCakeBusd().toFixed(2)\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n\r\n  return (\r\n    <div style={{ paddingBottom: isMobile ? 64 : 0 }}>\r\n      <Hero isMobile={isMobile}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbsPrice}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '15px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <StyledHeading isMobile={isMobile}>\r\n          {TranslateString(576, 'Welcome to ROBUSTSWAP')}\r\n        </StyledHeading>\r\n        <SubTitle isMobile={isMobile}>\r\n          {TranslateString(578, 'A hyper-deflationary decentralized exchange with yield farming designed to optimize profitability.')}\r\n        </SubTitle>\r\n      </Hero>\r\n      <Page style={{ marginLeft: isMobile ? '24px' : '80px', marginRight: isMobile ? '24px' : '80px' }}>\r\n        <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n          <div style={{ flexGrow: 1 }}>\r\n            <div>\r\n              {/* <FarmStakingCard /> */}\r\n              <DexStatsCard />\r\n              {/* <ChartComp /> */}\r\n              <CakeStats />\r\n              {/* <TradeCard /> */}\r\n            </div>\r\n            <div style={{ marginBottom: 32 }}>\r\n              <ActivitiesCard />\r\n            </div>\r\n            {isMobile && <FarmJoinCard />}\r\n            <div style={{ marginBottom: 48 }}>\r\n              <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(733, 'RBS Supply Stats')}</Text>\r\n              {/* <FarmStakingCard /> */}\r\n              <SupplyStatsCard />\r\n              {/* <ChartComp /> */}\r\n            </div>\r\n            <div style={{ marginBottom: 48 }}>\r\n              <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(731, 'RBS Transaction Limit')}</Text>\r\n              {/* <FarmStakingCard /> */}\r\n              <LimitStatsCard />\r\n              {/* <ChartComp /> */}\r\n            </div>\r\n            {isMobile && <div>\r\n              <FollowStatsCard />\r\n            </div>}\r\n          </div>\r\n          {!isMobile && <div style={{ flexGrow: 0, marginLeft: \"16px\" }}>\r\n            <div style={{ marginBottom: 48 }}>\r\n              <FarmStakingCard />\r\n            </div>\r\n            <div style={{ marginBottom: 48 }}>\r\n              <LotteryCard />\r\n            </div>\r\n            <div>\r\n              <FollowStatsCard />\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      </Page >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}