{"version":3,"sources":["config/index.ts","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","views/Home/components/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/FarmJoinCard.tsx","views/Home/components/ChartComp.tsx","views/Home/components/CakeStats.tsx","views/Home/components/DexStatsCard.tsx","hooks/api.ts","views/Home/components/SupplyStatsCard.tsx","views/Home/components/LimitStatsCard.tsx","views/Home/components/ActivitiesCard.tsx","views/Home/components/TwitterCard.tsx","views/Home/components/FollowStatsCard.tsx","views/Home/Home.tsx","utils/formatBalance.ts","components/UnlockButton.tsx","hooks/useTokenBalance.ts","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","utils/callHelpers.ts","hooks/useHarvest.ts"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","useTotalLockedUpRewards","useState","totalLockedUpRewards","setTotalLockedUpRewards","slowRefresh","useRefresh","masterChefContract","useMasterchef","useEffect","a","methods","call","locked","console","log","fetchTotalLockedUpRewards","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","account","useWallet","fastRefresh","fetchBalances","callsBalance","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","callsHarvest","multicall","masterChefABI","rawResultsBalance","rawResultsHarvest","results","index","balance","nextHarvestUntil","toNumber","useAllEarnings","balances","setBalance","fetchAllBalances","calls","res","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","toString","formatTimePeriodCountdown","periods","CardValue","value","decimals","fontSize","prefix","weight","suffix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","fontWeight","CakeHarvestBalance","earningsSum","TranslateString","useI18n","lineHeight","CakeWalletBalance","cakeBalance","CardBusdValue","props","StyledFarmStakingCard","styled","Card","Block","div","Label","Actions","FarmedStakingCard","pendingTx","setPendingTx","farmsWithBalance","getBalanceNumber","useTokenBalance","getCakeAddress","cakePrice","usePriceCakeBusd","allEarnings","isMobile","useMedia","reduce","accum","earning","pow","balancesWithValue","filter","balanceType","currentTime","farmsCanHarvest","closetHarvestTime","time","harvestButtonText","length","secondsUntilHarvest","timeUntil","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","maxWidth","padding","display","marginTop","width","flexDirection","variant","id","disabled","onClick","fullWidth","background","opacity","UnlockButton","StyledLotteryCard","as","href","FarmJoinCard","Grid","container","spacing","marginBottom","item","sm","xs","FarmStakingCard","LotteryCard","Chart","Row","am4core","am4themes_kelly","am4themes_animated","ChartComp","useTotalSupply","rbtPrice","usePriceRbtBusd","classes","useStyles","chart","priceChangePercent","setPriceChangePercent","low24","setLow24","high24","setHigh24","marketCap","setMarketCap","activeStatus","setActiveStatus","volume","price","chartdata","setChartData","useMediaQuery","isPad","React","selection","setSelectValue","axios","get","then","response","data","price_change_percentage_24h","low_24h","high_24h","market_cap","e","getChartData","prevState","total_volumes","prices","changeStatus","newStatus","status","cb","url","am4charts","chart1","count","chartData","i","newDate","date","push","generateChartData","gradient","addColor","rotation","dateAxis","xAxes","baseInterval","tooltipDateFormat","renderer","grid","template","labels","tooltip","dateAxis1","valueAxis","yAxes","baseGrid","valueAxis1","series","dataFields","dateX","valueY","getFillFromObject","strokeWidth","label","fill","tooltipText","fillOpacity","stroke","series1","cursor","lineY","keepSelection","Box","className","chartHeader","paddingLeft","alignItems","src","alt","height","justifyContent","toFixed","fontFamily","marginLeft","paddingRight","paddingBottom","Button","deactiveStatus","paddingTop","margin","Select","onChange","event","target","borderRadius","border","IconComponent","disableUnderline","MenuItem","mobileMenuItem","borderTop","borderRight","borderBottom","primaryStep","ceil","StyledCakeStats","CakeStats","StyledDexStatsCard","Header","ValueTitle","Text","DexStatsCard","totalLiquidityUSD","setTotalLiquidityUsd","farm1","useFarmFromPid","bnbReserve","useGetReserves","lpAddresses","bnbPrice","usePriceBnbBusd","isNaN","rbs1","times","farm2","rbs2","plus","totalValue","useTotalValue","setData","fetchData","fetch","json","responseData","error","useExchangeStats","ZERO","volumeUSD","volume_USD","registerNativeToken","registerToken","metamaskButton","marginRight","StyledSupplyStatsCard","SupplyStatsCard","maximumSupply","useMaximumSupply","mintedSupply","useMintedSupply","mintedBurned","useMintedBurned","totalSupply","burnedBalance","useBurnedBalance","totalLockedIncludeMasterChef","useMasterChefBalance","rbsPerBlock","useRbsPerBlock","circSupply","minus","cakeSupply","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","sellTax","useSellTax","buyTax","useBuyTax","transferTax","useTransferTaxRate","limitAmount","useMaxTransferLimitAmount","StyledActivitiesCard","CalculateApr","ethPrice","cakeRewardPerYear","poolWeight","apy","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","ETH","exception","comparedTo","ActivitiesCard","farms","useFarms","usePriceEthBusd","rbsBusd","setRbsBusd","rbtBnb","setRbtBnb","rbs","setRbs","rbt","setRbt","val","to","StyledTwitterCard","TwitterCard","maxHeight","dataSource","sourceType","screenName","options","chrome","theme","borderColor","StyledLimitStatsCard","LabelTitle","LabelSubTitle","LimitStatsCard","Hero","StyledHeading","Heading","SubTitle","LogTitle","LogPrice","Home","useGetDocumentTitlePrice","setHeight","useReferralCode","rbsPrice","leftTab","document","getElementsByClassName","stakingCard","joinCard","clientHeight","Page","flexGrow","FollowStatsCard","displayBalance","dividedBy","getFullDisplayBalance","connect","reset","useAuth","onPresentConnectModal","login","logout","useWalletModal","self","text","title","setTotalSupply","cakeContract","getContract","cakeABI","supply","fetchTotalSupply","tokenAddress","fetchBalance","balanceOf","bal","maxTransferLimitAmount","setMaxTransferLimitAmount","amount","fetchMaxTransferLimitAmount","setMaximumSupply","MAXIMUM_SUPPLY","maxSupply","fetchMaximumSupply","setMintedSupply","mintSupply","fetchMintedSupply","setMintedBurned","mintBurned","fetchMintedBurned","setSellTax","transferTaxRateSell","stax","fetchSellTax","setBuyTax","transferTaxRateBuy","btax","fetchbuyTax","transferTaxRate","setTransferTaxRate","rate","fetchTransferTaxRate","rbsPBlock","setrbsPBlock","fetchRbsPBlock","lpAddress","reserves","setReserves","pairABI","getReserves","_reserve1","fetchGetReserves","ethereum","getTokenBalance","provider","Web3","eth","Contract","erc20","userAddress","contract","makeStyles","createStyles","mainContainer","palette","default","breakpoints","down","cardWrapper","hegiht","paper","textAlign","cardWrapper1","pageTitle","subPageTitle","bgWrapper","bodyWrapper","walletButton","statsValue","switchButton","flex","activeSwitcher","base","root","content","transition","transitions","create","easing","sharp","leavingScreen","contentShift","easeOut","enteringScreen","changePercent","chartTitle","currentChartValue","tabList","minWidth","backgroundColor","secondary","light","select","detailChartTabs","approve","lpContract","ethers","constants","MaxUint256","send","from","stake","referrer","deposit","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useHarvest","farmPid","dispatch","useDispatch","txHash","fetchFarmUserDataAsync","farmPids","harvestPromises","Promise","all"],"mappings":"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","file":"static/js/12.3ea8140a.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.com'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\nimport { useMasterchef } from './useContract'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n  nextHarvestUntil: number\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const callsBalance = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const callsHarvest = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'userInfo',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResultsBalance = await multicall(masterChefABI, callsBalance)\r\n      const rawResultsHarvest = await multicall(masterChefABI, callsHarvest)\r\n      const results = farmsConfig.map((farm, index) => ({\r\n        ...farm,\r\n        balance: new BigNumber(rawResultsBalance[index]),\r\n        nextHarvestUntil: rawResultsHarvest[index].nextHarvestUntil.toNumber(),\r\n      }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport const useTotalLockedUpRewards = () => {\r\n  const [totalLockedUpRewards, setTotalLockedUpRewards] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalLockedUpRewards() {\r\n      const locked = await masterChefContract.methods.totalLockedUpRewards().call()\r\n      console.log(\"locked:\", locked)\r\n      setTotalLockedUpRewards(new BigNumber(locked))\r\n    }\r\n\r\n    fetchTotalLockedUpRewards()\r\n  }, [slowRefresh, masterChefContract])\r\n\r\n  return totalLockedUpRewards\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const res = await multicall(masterChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  suffix?: string\r\n  weight?: number\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '20px',\r\n  prefix = '',\r\n  weight = 400,\r\n  suffix = '',\r\n  bold = false,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ fontWeight: weight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n      {suffix}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport { Text } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n// import BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\n// import useAllEarnings from 'hooks/useAllEarnings'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeHarvestBalance = ({ earningsSum }) => {\r\n  const TranslateString = useI18n()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" fontSize=\"18px\" style={{ color: '#767676', lineHeight: '22px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={earningsSum} fontSize=\"34px\" />\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","import React from 'react'\r\nimport { Text } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n// import useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\n// import { getCakeAddress } from 'utils/addressHelpers'\r\n// import { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWalletBalance = ({ cakeBalance }) => {\r\n  const TranslateString = useI18n()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" fontSize=\"18px\" style={{ color: '#767676', lineHeight: '22px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={cakeBalance} fontSize=\"34px\" />\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"12px\" lineHeight=\"14px\" color=\"text\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardBusdValue\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\nimport { usePriceCakeBusd } from '../../../state/hooks'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport { getCakeAddress } from '../../../utils/addressHelpers'\r\nimport useAllEarnings from '../../../hooks/useAllEarnings'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n// import { registerToken } from '../../../utils/wallet'\r\nimport CardBusdValue from './CardBusdValue'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-color: #293D71;\r\n  background-image: url('/images/farm-staking-bg.svg'), linear-gradient(90.04deg, #0C0720 0.04%, #291A83 99.97%);;\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\n// const TokenImageWrapper = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   margin-bottom: 16px;\r\n// `\r\n\r\n// const CardImage = styled.img`\r\n//   margin-right: 12px;\r\n// `\r\n\r\nconst Label = styled.div`\r\n  background:linear-gradient(to bottom, #89FFE3, #BEFF74, #BEFF74);\r\n  -webkit-background-clip: text;\r\n\t-webkit-text-fill-color: transparent;\r\n  font-size: 34px;\r\n  font-weight: 600;\r\n  line-height: 40px;\r\n  letter-spacing: 0.5px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\r\n  const cakePrice = usePriceCakeBusd().toNumber()\r\n  const allEarnings = useAllEarnings()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  // Get farms can harvest and closet harvest time\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const farmsCanHarvest = balancesWithValue.filter(\r\n    (farm) => farm.nextHarvestUntil <= currentTime && farm.nextHarvestUntil > 0,\r\n  )\r\n\r\n  const closetHarvestTime = balancesWithValue.reduce((time, farm) => {\r\n    return time <= 0 || time >= farm.nextHarvestUntil ? farm.nextHarvestUntil : time\r\n  }, 0)\r\n\r\n  // Harvest button text display logic\r\n  let harvestButtonText = 'HARVEST ALL'\r\n  if (balancesWithValue.length > 0) {\r\n    if (farmsCanHarvest.length === balancesWithValue.length) {\r\n      harvestButtonText = `HARVEST ALL (${balancesWithValue.length})`\r\n    } else if (farmsCanHarvest.length > 0 && farmsCanHarvest.length < balancesWithValue.length) {\r\n      harvestButtonText = `HARVEST ALL (${farmsCanHarvest.length} of ${balancesWithValue.length})`\r\n    } else if (farmsCanHarvest.length <= 0 && balancesWithValue.length > 0) {\r\n      const secondsUntilHarvest = closetHarvestTime - currentTime\r\n      const timeUntil = getTimePeriods(secondsUntilHarvest)\r\n      harvestButtonText = `HARVEST IN ${formatTimePeriodCountdown(timeUntil)}`\r\n    }\r\n  }\r\n\r\n  const { onReward } = useAllHarvest(farmsCanHarvest.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard style={{ maxWidth: isMobile ? '100%' : '320px' }}>\r\n      <CardBody style={{ padding: 32 }}>\r\n        <Label>{TranslateString(544, 'Farms & Staking')}</Label>\r\n        <Block style={{ display: 'flex', marginTop: 24 }}>\r\n          <div style={{ width: '50%' }}>\r\n            <h5 style={{ fontSize: 12, lineHeight: '14px', color: '#E354FA' }}>RBS to Harvest</h5>\r\n            <CakeHarvestBalance earningsSum={earningsSum} />\r\n            <CardBusdValue value={cakePrice * earningsSum} decimals={3} />\r\n          </div>\r\n          <div style={{ width: '50%' }}>\r\n            <h5 style={{ fontSize: 12, lineHeight: '14px', color: '#E354FA' }}>RBS in Wallet</h5>\r\n            <CakeWalletBalance cakeBalance={cakeBalance} />\r\n            <CardBusdValue value={cakePrice * cakeBalance} decimals={3} />\r\n          </div>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <Button\r\n                variant=\"subtle\"\r\n                id=\"harvest-all\"\r\n                disabled={balancesWithValue.length <= 0 || farmsCanHarvest.length <= 0 || pendingTx}\r\n                onClick={harvestAllFarms}\r\n                fullWidth\r\n                style={{ background: 'linear-gradient(89.57deg, #89FFE3 0.25%, #BEFF74 53.04%, #FFF174 96.52%)', color: '#5F47EE', opacity: 0.4 }}\r\n              >\r\n                {pendingTx ? TranslateString(548, 'Collecting ROBUST') : TranslateString(999, harvestButtonText)}\r\n              </Button>\r\n              {/* <StyledLink to='/account'>\r\n                VIEW DETAIL\r\n              </StyledLink> */}\r\n            </div>\r\n          ) : (\r\n            <UnlockButton fullWidth variant=\"primary\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody >\r\n    </StyledFarmStakingCard >\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n// import CakeWinnings from './CakeWinnings'\r\n\r\nconst StyledLotteryCard = styled(Card)`\r\n  background: linear-gradient(90.04deg, #0C0720 0.04%, #291A83 99.97%);\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  border-radius: 16px;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: #FCFCFC;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  font-weight: 800;\r\n  letter-spacing: 0.5px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n\r\n  return (\r\n    <StyledLotteryCard style={{ maxWidth: isMobile ? '100%' : '320px' }}>\r\n      <CardBody>\r\n        <Block>\r\n          <Label>{TranslateString(554, 'Join the revolution with the Robust Protocol community.')}</Label>\r\n        </Block>\r\n        <Button style={{ width: '100%', marginTop: isMobile ? 48 : 16 }} as=\"a\" href=\"https://exchange.robustswap.com/#/swap?outputCurrency=0x95336aC5f7E840e7716781313e1607F7C9D6BE25\">BUY RBS</Button>\r\n        <Button style={{ width: '100%', marginTop: 16 }} as=\"a\" href=\"https://exchange.robustswap.com/#/swap?outputCurrency=0x891e4554227385c5c740f9b483e935e3cbc29f01\">BUY RBT</Button>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FarmStakingCard from './FarmStakingCard'\r\nimport LotteryCard from './LotteryCard'\r\n// import CakeWinnings from './CakeWinnings'\r\n\r\nconst FarmJoinCard = () => {\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ marginBottom: 24 }}>\r\n      <Grid item sm={6} xs={12}>\r\n        <FarmStakingCard />\r\n      </Grid>\r\n      <Grid item sm={6} xs={12}>\r\n        <LotteryCard />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FarmJoinCard\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text, Progress } from '@robustswap-libs/uikit'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_kelly from \"@amcharts/amcharts4/themes/kelly\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from 'axios'\r\nimport { useTotalSupply } from 'hooks/useTokenBalance'\r\nimport useStyles from \"../../../assets/styles\";\r\nimport { usePriceCakeBusd, usePriceRbtBusd } from '../../../state/hooks'\r\n\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\n\r\n/* Chart code */\r\n// Themes begin\r\n\r\nconst Chart = styled.div`\r\n    margin: -14.5px -15px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n`\r\n\r\nam4core.useTheme(am4themes_kelly);\r\nam4core.useTheme(am4themes_animated);\r\n\r\ninterface ChartProps {\r\n    volume: [],\r\n    price: []\r\n}\r\n\r\nconst ChartComp = () => {\r\n    const totalSupply = useTotalSupply()\r\n    const rbtPrice = usePriceRbtBusd()\r\n    const classes = useStyles.chart();\r\n    // const TranslateString = useI18n()\r\n    const [priceChangePercent, setPriceChangePercent] = useState(0);\r\n    const [low24, setLow24] = useState(0)\r\n    const [high24, setHigh24] = useState(0)\r\n    const [marketCap, setMarketCap] = useState(0)\r\n    const [activeStatus, setActiveStatus] = useState<number>(1);\r\n    const [chartdata, setChartData] = useState<ChartProps>({\r\n        volume: [],\r\n        price: []\r\n    });\r\n    const isMobile = useMediaQuery('(max-width: 1024px)')\r\n    const isPad = useMediaQuery('(max-width: 720px)')\r\n    const [selection, setSelectValue] = React.useState<number>(1);\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setSelectValue(event.target.value as number)\r\n        changeStatus(event.target.value as number)\r\n    };\r\n    const { countUp, update } = useCountUp({\r\n        start: 0,\r\n        end: marketCap,\r\n        duration: 1,\r\n        separator: ','\r\n    })\r\n\r\n    const updateValue = useRef(update)\r\n\r\n    useEffect(() => {\r\n        updateValue.current(marketCap)\r\n    }, [marketCap, updateValue])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=robust-token&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n                .then(response => {\r\n                    console.log(\"response:\", response)\r\n                    setPriceChangePercent(response.data[0].price_change_percentage_24h)\r\n                    setLow24(response.data[0].low_24h)\r\n                    setHigh24(response.data[0].high_24h)\r\n                    setMarketCap(response.data[0].market_cap)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`)\r\n        }\r\n        getChartData(activeStatus, (data: any) => {\r\n            setChartData(prevState => ({\r\n                ...prevState,\r\n                'volume': data.total_volumes,\r\n                'price': data.prices\r\n            }));\r\n        });\r\n    }, [activeStatus])\r\n\r\n    const changeStatus = async (newStatus: number) => {\r\n        setActiveStatus(newStatus);\r\n\r\n        getChartData(newStatus, (data: any) => {\r\n            setChartData(prevState => ({\r\n                ...prevState,\r\n                'volume': data.total_volumes,\r\n                'price': data.prices\r\n            }));\r\n        });\r\n    }\r\n\r\n    function getChartData(status: any, cb: any) {\r\n        let duration = '1';\r\n\r\n        if (status === 1) {\r\n            duration = '7'\r\n        } else if (status === 2) {\r\n            duration = '30'\r\n        } else {\r\n            duration = 'max'\r\n        }\r\n        const url = `https://api.coingecko.com/api/v3/coins/robust-token/market_chart?vs_currency=usd&days=${duration}`\r\n\r\n        try {\r\n            axios.get(url)\r\n                .then(response => {\r\n                    cb(response.data)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`)\r\n        }\r\n    }\r\n\r\n    function generateChartData(data: any) {\r\n        let count = data['volume'].length;\r\n        let chartData = [];\r\n        // current date\r\n        var item = {\r\n\r\n        }\r\n        for (var i = 0; i < count; i++) {\r\n            if (data['volume'][i]) {\r\n                let newDate = new Date(data['volume'][i][0]);\r\n                let volume = 0;\r\n                let price = 0;\r\n\r\n                volume = data['volume'][i][1]\r\n                price = data['price'][i][1]\r\n\r\n                item = {\r\n                    date: newDate,\r\n                    volume: volume,\r\n                    price: price\r\n                }\r\n                chartData.push({\r\n                    date: newDate,\r\n                    volume: volume,\r\n                    price: price\r\n                });\r\n            } else {\r\n                chartData.push(item);\r\n            }\r\n        }\r\n        return chartData;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chartdata && chartdata['volume'].length) {\r\n            let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n            let chart1 = am4core.create(\"chartdiv1\", am4charts.XYChart);\r\n\r\n            chart.data = generateChartData(chartdata);\r\n            chart1.data = chart.data;\r\n            let gradient = new am4core.LinearGradient();\r\n            gradient.addColor(am4core.color(\"rgba(179,71,238,1)\"));\r\n            gradient.addColor(am4core.color(\"rgba(179,71,238,0)\"));\r\n            gradient.rotation = 90;\r\n\r\n            let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n            dateAxis.baseInterval = {\r\n                \"timeUnit\": \"minute\",\r\n                \"count\": 1\r\n            };\r\n            dateAxis.tooltipDateFormat = \"HH:mm, d MMMM\";\r\n            dateAxis.renderer.grid.template.disabled = true;\r\n            dateAxis.renderer.labels.template.disabled = true;\r\n            dateAxis.tooltip.disabled = true;\r\n\r\n            let dateAxis1 = chart1.xAxes.push(new am4charts.DateAxis());\r\n            dateAxis1.baseInterval = {\r\n                \"timeUnit\": \"minute\",\r\n                \"count\": 1\r\n            };\r\n            dateAxis1.tooltipDateFormat = \"HH:mm, d MMMM\";\r\n            dateAxis1.renderer.grid.template.disabled = true;\r\n            dateAxis1.renderer.labels.template.disabled = true;\r\n            dateAxis1.tooltip.disabled = true;\r\n\r\n            let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n            valueAxis.tooltip.disabled = true;\r\n            valueAxis.renderer.baseGrid.disabled = true;\r\n            valueAxis.renderer.grid.template.disabled = true;\r\n            valueAxis.renderer.labels.template.disabled = true;\r\n            // valueAxis.title.text = \"Unique visitors\";\r\n\r\n            let valueAxis1 = chart1.yAxes.push(new am4charts.ValueAxis());\r\n            valueAxis1.tooltip.disabled = true;\r\n            valueAxis1.renderer.baseGrid.disabled = true;\r\n            valueAxis1.renderer.grid.template.disabled = true;\r\n            valueAxis1.renderer.labels.template.disabled = true;\r\n\r\n            let series = chart.series.push(new am4charts.LineSeries());\r\n            series.dataFields.dateX = \"date\";\r\n            series.dataFields.valueY = \"volume\";\r\n            series.tooltip.getFillFromObject = false;\r\n            series.tooltip.background.strokeWidth = 0;\r\n            series.tooltip.label.fontSize = 14;\r\n            series.tooltip.background.fill = am4core.color(\"#151745\");\r\n            series.tooltip.label.fill = am4core.color(\"#FFFFFF\");\r\n            series.tooltipText = \"{date}\\nPrice: $ {price}\\nVolume: {valueY}\";\r\n            series.fillOpacity = 0.3;\r\n            series.fill = gradient;\r\n            series.stroke = am4core.color(\"#B347EE\")\r\n            series.strokeWidth = 3;\r\n\r\n            let series1 = chart1.series.push(new am4charts.ColumnSeries());\r\n            series1.dataFields.dateX = \"date\";\r\n            series1.dataFields.valueY = \"volume\";\r\n            series1.stroke = am4core.color(\"#3924B5\")\r\n            series1.strokeWidth = 3;\r\n            series1.marginBottom = 0;\r\n\r\n            chart.cursor = new am4charts.XYCursor();\r\n            chart.cursor.lineY.opacity = 0;\r\n            chart1.cursor = new am4charts.XYCursor();\r\n            chart1.cursor.lineY.opacity = 0;\r\n            // chart.scrollbarX = new am4charts.XYChartScrollbar();\r\n            // chart.scrollbarX.series.push(series);\r\n\r\n            dateAxis.start = 0.8;\r\n            dateAxis.keepSelection = false;\r\n\r\n            dateAxis1.start = 0.8;\r\n            dateAxis1.keepSelection = false;\r\n\r\n        }\r\n    }, [chartdata]);\r\n    return (\r\n        <div>\r\n            <Box className={classes.chartHeader}>\r\n                <Box>\r\n                    <Box style={{ display: 'flex' }}>\r\n                        <Box style={{ display: 'flex', paddingLeft: 24, alignItems: 'center', flexDirection: 'column' }}>\r\n                            <img src=\"/images/farms/RBT.svg\" alt=\"rbs logo\" width={51} height={51} />\r\n                        </Box>\r\n                        <Box style={{ display: 'flex', paddingLeft: 8, flexDirection: 'column', justifyContent: 'center' }}>\r\n                            <Text style={{ fontSize: 12, color: '#FCFCFC' }}>RBT</Text>\r\n                            <Box style={{ display: 'flex', flexDirection: 'initial' }}>\r\n                                <Text style={{\r\n                                    fontSize: 34, color: '#FCFCFC', fontWeight: 600\r\n                                }}>{rbtPrice ? '$' : ''}{rbtPrice ? rbtPrice.toFixed(2) : '-'}</Text>\r\n                                <Text style={{ fontFamily: 'Poppins', fontSize: 14, color: priceChangePercent < 0 ? 'red' : '#38D047', marginTop: 15, marginLeft: 4 }}>{priceChangePercent > 0 ? '+' : ''}{priceChangePercent ? priceChangePercent.toFixed(2) : 2.1}%</Text>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                {!isMobile && <Box style={{ paddingRight: 20, paddingBottom: 22 }}>\r\n                    <Button\r\n                        onClick={() => changeStatus(1)}\r\n                        className={activeStatus === 1 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        1W\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => changeStatus(2)}\r\n                        className={activeStatus === 2 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        1M\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => changeStatus(3)}\r\n                        className={activeStatus === 3 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        All\r\n                    </Button>\r\n                </Box>}\r\n            </Box>\r\n            {isMobile &&\r\n                <Box style={{ paddingTop: 16, margin: '0px 24px' }}>\r\n                    <Select\r\n                        value={selection}\r\n                        onChange={handleChangeSelect}\r\n                        style={{\r\n                            borderRadius: 8,\r\n                            background: \"rgba(107, 161, 255, 0.2)\",\r\n                            padding: \"0px 16px\",\r\n                            width: '100%',\r\n                            border: '1px solid rgba(107, 161, 255, 0.2)',\r\n                            height: 40\r\n                        }}\r\n                        IconComponent={\r\n                            () => (<ArrowDropDownIcon style={{ color: \"#FFFFFF\" }} />)\r\n                        }\r\n                        disableUnderline\r\n                    >\r\n                        <MenuItem className={classes.mobileMenuItem} value={1} style={{ background: '#1E215C' }}>1W</MenuItem>\r\n                        <MenuItem className={classes.mobileMenuItem} value={2}>1M</MenuItem>\r\n                        <MenuItem className={classes.mobileMenuItem} value={3}>ALL</MenuItem>\r\n                    </Select>\r\n                </Box>\r\n            }\r\n            <Chart style={{ height: 458 }}>\r\n                <div id=\"chartdiv\" style={{\r\n                    width: \"calc(100%+30px)\",\r\n                    height: 300,\r\n                    display: \"block\",\r\n                }}></div>\r\n                <div id=\"chartdiv1\" style={{\r\n                    width: \"100%\",\r\n                    height: 158,\r\n                    display: \"block\"\r\n                }}></div>\r\n            </Chart>\r\n            <Box style={{ borderTop: '1px solid #0C0720' }}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item sm={6} xs={12} style={{ borderRight: isPad ? '' : '1px solid #0C0720', borderBottom: isPad ? '1px solid #0C0720' : '', padding: 16 }}>\r\n                        <Text style={{ color: '#A0B9FB', fontSize: 14, marginBottom: 8 }}>24h Low/ 24h High</Text>\r\n                        <Row>\r\n                            ${low24}\r\n                            <div style={{ width: '55%', height: 8 }}><Progress primaryStep={Math.ceil(100 * low24 / high24)} /></div>\r\n                            ${high24}\r\n                        </Row>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12} style={{ padding: 16 }}>\r\n                        <Text style={{ color: '#A0B9FB', fontSize: 14, marginBottom: 8 }}>Market Cap</Text>\r\n                        <Row>${countUp}</Row>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default ChartComp;\r\n","import React from 'react'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport ChartComp from './ChartComp'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background: #1E215C;\r\n  margin-bottom: 24px;\r\n  min-height: 595px !important;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <ChartComp />\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card, Text } from '@robustswap-libs/uikit'\r\nimport Button from '@material-ui/core/Button';\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useExchangeStats } from 'hooks/api'\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { useFarmFromPid, usePriceBnbBusd, useTotalValue } from \"state/hooks\";\r\nimport { useGetReserves, useCirculatinSupply } from \"hooks/useTokenBalance\";\r\nimport CardValue from './CardValue'\r\nimport useStyles from \"../../../assets/styles\";\r\nimport { registerToken } from '../../../utils/wallet'\r\nimport { getCakeAddress } from '../../../utils/addressHelpers'\r\n\r\nconst StyledDexStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  padding: 16px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\nconst ValueTitle = styled(Text)`\r\n  color: #FCFCFC;\r\n  font-size: 12px;\r\n  line-height: 14px;  \r\n`\r\n\r\nconst DexStatsCard = () => {\r\n  const [totalLiquidityUSD, setTotalLiquidityUsd] = useState(new BigNumber(0))\r\n  const chainId = 56\r\n  const farm1 = useFarmFromPid(1)\r\n  const bnbReserve = useGetReserves(farm1.lpAddresses[chainId])\r\n  let bnbPrice = usePriceBnbBusd()\r\n  if (!bnbPrice.isNaN() && bnbPrice.toString() !== '0') {\r\n    bnbPrice = new BigNumber(1).div(bnbPrice)\r\n  }\r\n  const rbs1 = bnbReserve.times(bnbPrice).times(new BigNumber(2))\r\n  const farm2 = useFarmFromPid(0)\r\n  const busdReserve = useGetReserves(farm2.lpAddresses[chainId])\r\n  const rbs2 = busdReserve.times(new BigNumber(2))\r\n\r\n  useEffect(() => {\r\n    if (!rbs1.isNaN() && !rbs2.isNaN() && rbs1 !== new BigNumber(0) && rbs2 !== new BigNumber(0)) {\r\n      setTotalLiquidityUsd(rbs1.plus(rbs2))\r\n    }\r\n  }, [rbs1, rbs2])\r\n\r\n  const TranslateString = useI18n()\r\n  const classes = useStyles.chart();\r\n  const totalValue = useTotalValue()\r\n  const data = useExchangeStats()\r\n  const ZERO = new BigNumber(0)\r\n  const volumeUSD = data ? new BigNumber(data?.data?.volume_USD) : ZERO\r\n\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(getCakeAddress(), 'RBS', 18, `https://robustswap.com/images/farms/RBS.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(688, 'Overview')}</Text>\r\n        <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, width: 89, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px' }}>\r\n          <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n        </Button>\r\n      </Header>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(10035, 'Total Liquidity')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={totalLiquidityUSD?.toNumber()} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(10036, '24H Volume')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={getBalanceNumber(volumeUSD, 0)} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard style={{ marginRight: 0 }}>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(297, 'TVL')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={totalValue.toNumber()} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n      </Grid></>\r\n  )\r\n}\r\n\r\nexport default DexStatsCard\r\n","import { useEffect, useState } from 'react'\r\n\r\n/*\r\n * Due to Cors the api was forked and a proxy was created\r\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\r\n */\r\nexport const baseUrl = 'https://api.robustswap.com/api'\r\nexport const exchangeBaseUrl = 'https://api.robustswap.info/api'\r\n\r\n/* eslint-disable camelcase */\r\n\r\nexport interface TradePair {\r\n  swap_pair_contract: string\r\n  base_symbol: string\r\n  quote_symbol: string\r\n  last_price: number\r\n  base_volume_24_h: number\r\n  quote_volume_24_h: number\r\n}\r\n\r\nexport interface ApiStatResponse {\r\n  update_at: string\r\n  '24h_total_volume': number\r\n  total_value_locked: number\r\n  total_value_locked_all: number\r\n  trade_pairs: {\r\n    [key: string]: TradePair\r\n  }\r\n}\r\n\r\nexport interface ApiExchangeStatResponse {\r\n  updated_at: string\r\n  data: {\r\n    total_liquidity_BNB: string\r\n    total_liquidity_USD: string\r\n    total_volume_BNB: string\r\n    total_volume_USD: string\r\n    volume_BNB: string\r\n    volume_USD: string\r\n    tx_count: number\r\n  }\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<ApiStatResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${baseUrl}/stat`)\r\n        const responsedata: ApiStatResponse = await response.json()\r\n\r\n        setData(responsedata)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n\r\nexport const useExchangeStats = () => {\r\n  const [data, setData] = useState<ApiExchangeStatResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${exchangeBaseUrl}/stats`)\r\n        const responseData: ApiExchangeStatResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  useBurnedBalance,\r\n  useMasterChefBalance,\r\n  useMaximumSupply,\r\n  useMintedSupply,\r\n  useMintedBurned,\r\n  useRbsPerBlock,\r\n  useTotalSupply\r\n} from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\nimport { useTotalLockedUpRewards } from '../../../hooks/useFarmsWithBalance'\r\n\r\nconst StyledSupplyStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  border-radius: 0px;\r\n  border-right: 1px solid #151745;\r\n  border-bottom:1px solid #151745;\r\n  padding: 16px 0px 16px 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  color: #A0B9FB;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n  padding-right:16px;\r\n`\r\nconst SupplyStatsCard = () => {\r\n  const maximumSupply = useMaximumSupply()\r\n  const mintedSupply = useMintedSupply()\r\n  const mintedBurned = useMintedBurned()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const masterChefBalance = useMasterChefBalance(getCakeAddress())\r\n  const totalLocked = useTotalLockedUpRewards()\r\n  const totalLockedIncludeMasterChef = totalLocked\r\n  const rbsPerBlock = useRbsPerBlock()\r\n  const circSupply = totalSupply\r\n    ? totalSupply.minus(burnedBalance.plus(totalLockedIncludeMasterChef))\r\n    : new BigNumber(0)\r\n  const cakeSupply = getBalanceNumber(circSupply)\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n  // const volumeUSD = data ? new BigNumber(data?.data?.volume_USD) : ZERO\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ paddingLeft: 0 }}>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopLeftRadius: 16, borderTopRightRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Maximum\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(maximumSupply, 18)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopRightRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Minted\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(mintedSupply)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Unharvested Rewards\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(totalLockedIncludeMasterChef)} decimals={2} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Circulation\r\n            <CardValue fontSize=\"16px\" value={cakeSupply} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Emission per block\r\n            <CardValue fontSize=\"16px\" value={rbsPerBlock.div(new BigNumber(10 ** 18)).toNumber()} decimals={2} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 16 : 0, borderBottomRightRadius: 16 }}>\r\n          {/* <Row>\r\n            <ValueTitle>{TranslateString(10036, '24H Volume')}</ValueTitle>\r\n          </Row> */}\r\n          <Row>\r\n            Burned\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(mintedBurned, 0)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default SupplyStatsCard","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport {\r\n  useSellTax,\r\n  useBuyTax,\r\n  useTransferTaxRate,\r\n  useMaxTransferLimitAmount\r\n} from 'hooks/useTokenBalance'\r\nimport CardValue from './CardValue'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n\r\nconst StyledSupplyStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  border-radius: 0px;\r\n  border-right: 1px solid #151745;\r\n  border-bottom:1px solid #151745;\r\n  padding: 16px 0px 16px 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  color: #A0B9FB;\r\n  padding-right: 16px;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n`\r\nconst SupplyStatsCard = () => {\r\n  // const TranslateString = useI18n()\r\n  const sellTax = useSellTax()\r\n  const buyTax = useBuyTax()\r\n  const transferTax = useTransferTaxRate()\r\n  const limitAmount = useMaxTransferLimitAmount()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopLeftRadius: 16, borderTopRightRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Sell Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(sellTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopRightRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Buy Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(buyTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Transfer Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(transferTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomRightRadius: 16, borderBottomLeftRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Amount Limit\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(limitAmount, 18)} decimals={2} suffix=\" RBS\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default SupplyStatsCard","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from \"react-router-dom\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarms, usePriceBnbBusd, usePriceEthBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledActivitiesCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  padding: 16px 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CalculateApr = (farm: Farm, cakePrice: BigNumber, bnbPrice: BigNumber, ethPrice: BigNumber) => {\r\n\r\n  const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n    .times(new BigNumber(farm.poolWeight))\r\n    .div(new BigNumber(10).pow(18))\r\n\r\n  const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n  let apy = cakePrice.times(cakeRewardPerYear)\r\n  let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n    totalValue = totalValue.times(bnbPrice)\r\n  }\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n    totalValue = totalValue.times(ethPrice)\r\n  }\r\n  const exception = farm.lpTotalInQuoteToken?.toString() === '0' ? 10 : 1\r\n\r\n  if (totalValue.comparedTo(0) > 0) {\r\n    apy = apy.div(totalValue)\r\n  }\r\n  else apy = apy.div(exception)\r\n  return apy.toNumber()\r\n}\r\n\r\nconst ActivitiesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const farms = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const [rbsBusd, setRbsBusd] = useState(0)\r\n  const [rbtBnb, setRbtBnb] = useState(0)\r\n  const [rbs, setRbs] = useState(0)\r\n  const [rbt, setRbt] = useState(0)\r\n  useEffect(() => {\r\n    let val = CalculateApr(farms[0], cakePrice, bnbPrice, ethPrice)\r\n    setRbsBusd(val)\r\n    val = CalculateApr(farms[1], cakePrice, bnbPrice, ethPrice)\r\n    setRbtBnb(val)\r\n    val = CalculateApr(farms[24], cakePrice, bnbPrice, ethPrice)\r\n    setRbs(val)\r\n    val = CalculateApr(farms[25], cakePrice, bnbPrice, ethPrice)\r\n    setRbt(val)\r\n  }, [bnbPrice, cakePrice, ethPrice, farms])\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item sm={6} xs={12} >\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>Top Farms</Text>\r\n        <StyledActivitiesCard>\r\n          <Link to='/farms'>\r\n            <Row>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBS.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" />\r\n                <img src=\"/images/farms/BUSD.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginLeft: -8, marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBS-BUSD')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbsBusd} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n            <Row style={{ marginBottom: 0 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBT.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" />\r\n                <img src=\"/images/farms/BNB.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginLeft: -8, marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBT-BNB')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbtBnb} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n          </Link>\r\n        </StyledActivitiesCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} >\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>Top Pools</Text>\r\n        <StyledActivitiesCard>\r\n          <Link to='/pools'>\r\n            <Row>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBS.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBS')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbs} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n            <Row style={{ marginBottom: 0 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBT.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBT')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbt} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n          </Link>\r\n        </StyledActivitiesCard>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ActivitiesCard\r\n","import React from 'react'\r\nimport { Card, CardBody } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { Timeline } from 'react-twitter-widgets'\r\n// import useI18n from 'hooks/useI18n'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background-color: #151745;\r\n  border: 8px;\r\n  border-bottom-left-radius: 0px;\r\n  border-bottom-right-radius: 0px;\r\n  overflow-y: scroll;\r\n`\r\n\r\ninterface TwitterProps {\r\n  height: number\r\n  isMobile: boolean\r\n}\r\n\r\nconst TwitterCard: React.FC<TwitterProps> = ({ height = 0, isMobile }) => {\r\n\r\n  return (\r\n    <StyledTwitterCard style={{ maxHeight: height <= 0 ? 'auto' : height }}>\r\n      <CardBody>\r\n        <Timeline\r\n          dataSource={{\r\n            sourceType: 'profile',\r\n            screenName: 'RobustProtocol',\r\n          }}\r\n          options={{\r\n            chrome: 'transparent, noheader, nofooter, noscrollbar',\r\n            theme: 'dark',\r\n            borderColor: '#1f2432',\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  )\r\n}\r\n\r\nexport default TwitterCard\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport TwitterCard from './TwitterCard'\r\n\r\nconst StyledLimitStatsCard = styled(Card) <{ height: string, isMobile: boolean }>`\r\n  width: 100%;\r\n  max-width: ${({ isMobile }) => isMobile ? '' : '320px !important'};\r\n  border-radius: 16px;\r\n  background: #1E215C;\r\n  padding: 16px;\r\n  height: ${({ height }) => height};\r\n`\r\n\r\nconst LabelTitle = styled.div`\r\n  margin-bottom:8px;\r\n  color: #A0B9FB;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n`\r\n\r\nconst LabelSubTitle = styled.div`\r\n  margin-bottom:8px;\r\n  color: #FCFCFC;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n`\r\n\r\ninterface LimitProps {\r\n  height: number\r\n}\r\n\r\nconst LimitStatsCard: React.FC<LimitProps> = ({ height = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 970px)')\r\n\r\n  return (\r\n    <StyledLimitStatsCard height={height <= 0 ? 'auto' : `${height}px`} isMobile={isMobile}>\r\n      <LabelTitle>{TranslateString(10039, 'Follow us on twitter')}</LabelTitle>\r\n      <LabelSubTitle>@robustprotocol</LabelSubTitle>\r\n      <TwitterCard height={height <= 0 ? 0 : height - 90} isMobile={isMobile} />\r\n    </StyledLimitStatsCard>\r\n  )\r\n}\r\n\r\nexport default LimitStatsCard","import React, { useEffect, useState } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport { usePriceCakeBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from 'hooks/useGetDocumentTitlePrice'\r\nimport FarmStakingCard from './components/FarmStakingCard'\r\nimport LotteryCard from './components/LotteryCard'\r\nimport FarmJoinCard from './components/FarmJoinCard'\r\nimport CakeStats from './components/CakeStats'\r\nimport { useReferralCode } from '../../state/hooks'\r\nimport DexStatsCard from './components/DexStatsCard'\r\nimport SupplyStatsCard from './components/SupplyStatsCard'\r\nimport LimitStatsCard from './components/LimitStatsCard'\r\nimport ActivitiesCard from './components/ActivitiesCard'\r\nimport FollowStatsCard from './components/FollowStatsCard'\r\nimport 'assets/css/chart.css'\r\n\r\nconst Hero = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/header-welcome-bg-mobile.svg')\" : \"url('/images/header-welcome-bg.png')\"};\r\n  background-position: center, center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 25px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n\r\n  height: ${({ isMobile }) => isMobile ? \"320px\" : \"360px\"};\r\n  padding-top: ${({ isMobile }) => isMobile ? \"40px\" : \"0px\"};\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 800;\r\n  font-size: ${({ isMobile }) => isMobile ? \"48px\" : \"72px\"};\r\n  line-height: ${({ isMobile }) => isMobile ? \"48px\" : \"80px\"};\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  width: ${({ isMobile }) => isMobile ? \"343px\" : \"543px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 24px;\r\n`\r\nconst SubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-family: Poppins;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  width: ${({ isMobile }) => isMobile ? \"343px\" : \"543px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300;\r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst Home: React.FC = () => {\r\n\r\n  useGetDocumentTitlePrice('Home')\r\n  const TranslateString = useI18n()\r\n  const [height, setHeight] = useState(0)\r\n  useReferralCode()\r\n  const isMobile = useMedia('(max-width: 970px)')\r\n  const rbsPrice = usePriceCakeBusd().toFixed(2)\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n\r\n  useEffect(() => {\r\n    const leftTab = document.getElementsByClassName(\"leftTab\")[0]\r\n    const stakingCard = document.getElementsByClassName(\"staking\")[0]\r\n    const joinCard = document.getElementsByClassName(\"join\")[0]\r\n    setHeight(leftTab?.clientHeight - stakingCard?.clientHeight - joinCard?.clientHeight - 96)\r\n  }, [isMobile])\r\n\r\n  return (\r\n    <div style={{ paddingBottom: isMobile ? 64 : 0 }}>\r\n      <Hero isMobile={isMobile}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbsPrice}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '38px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <StyledHeading isMobile={isMobile}>\r\n          {TranslateString(576, 'Welcome to ROBUSTSWAP')}\r\n        </StyledHeading>\r\n        <SubTitle isMobile={isMobile}>\r\n          {TranslateString(578, 'A hyper-deflationary decentralized exchange with yield farming designed to optimize profitability.')}\r\n        </SubTitle>\r\n      </Hero>\r\n      <Page style={{ marginLeft: isMobile ? '24px' : '80px', marginRight: isMobile ? '24px' : '80px' }}>\r\n        <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n          <div className=\"leftTab\" style={{ flexGrow: 1 }}>\r\n            <div>\r\n              <DexStatsCard />\r\n              <CakeStats />\r\n            </div>\r\n            <div style={{ marginBottom: 32 }}>\r\n              <ActivitiesCard />\r\n            </div>\r\n            {isMobile && <FarmJoinCard />}\r\n            <div style={{ marginBottom: 48 }}>\r\n              <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(733, 'RBS Supply Stats')}</Text>\r\n              <SupplyStatsCard />\r\n            </div>\r\n            <div style={{ marginBottom: isMobile ? 48 : 0 }}>\r\n              <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(731, 'RBS Transaction Limit')}</Text>\r\n              <LimitStatsCard />\r\n            </div>\r\n            {isMobile && <div>\r\n              <FollowStatsCard height={460} />\r\n            </div>}\r\n          </div>\r\n          {!isMobile && <div style={{\r\n            flexGrow: 0,\r\n            marginLeft: \"16px\"\r\n          }}>\r\n            <div className=\"staking\" style={{ opacity: 1, marginBottom: 48 }}>\r\n              <FarmStakingCard />\r\n            </div>\r\n            <div className=\"join\" style={{ opacity: 1, marginBottom: 48 }}>\r\n              <LotteryCard />\r\n            </div>\r\n            <div className=\"twitter\">\r\n              <FollowStatsCard height={height} />\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      </Page >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport pairABI from 'config/abi/pair.json'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMasterChefBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf(getMasterChefAddress()).call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMaxTransferLimitAmount = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maxTransferLimitAmount, setMaxTransferLimitAmount] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaxTransferLimitAmount() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const amount = await cakeContract.methods.maxTransferLimitAmount().call()\r\n      setMaxTransferLimitAmount(new BigNumber(amount))\r\n    }\r\n\r\n    fetchMaxTransferLimitAmount()\r\n  }, [slowRefresh])\r\n\r\n  return maxTransferLimitAmount\r\n}\r\n\r\nexport const useMaximumSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maximumSupply, setMaximumSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaximumSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const maxSupply = await cakeContract.methods.MAXIMUM_SUPPLY().call()\r\n      setMaximumSupply(new BigNumber(maxSupply))\r\n    }\r\n\r\n    fetchMaximumSupply()\r\n  }, [slowRefresh])\r\n\r\n  return maximumSupply\r\n}\r\n\r\nexport const useMintedSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedSupply, setMintedSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const mintSupply = await cakeContract.methods.mintedSupply().call()\r\n      setMintedSupply(new BigNumber(mintSupply))\r\n    }\r\n\r\n    fetchMintedSupply()\r\n  }, [slowRefresh])\r\n\r\n  return mintedSupply\r\n}\r\n\r\nexport const useMintedBurned = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedBurned, setMintedBurned] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedBurned() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const mintBurned = await cakeContract.methods.mintedBurned().call()\r\n      setMintedBurned(new BigNumber(mintBurned))\r\n    }\r\n\r\n    fetchMintedBurned()\r\n  }, [slowRefresh])\r\n\r\n  return mintedBurned\r\n}\r\n\r\nexport const useSellTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [sellTax, setSellTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSellTax() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const stax = await cakeContract.methods.transferTaxRateSell().call()\r\n      setSellTax(new BigNumber(stax))\r\n    }\r\n\r\n    fetchSellTax()\r\n  }, [slowRefresh])\r\n\r\n  return sellTax\r\n}\r\n\r\nexport const useBuyTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [buyTax, setBuyTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchbuyTax() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const btax = await cakeContract.methods.transferTaxRateBuy().call()\r\n      setBuyTax(new BigNumber(btax))\r\n    }\r\n\r\n    fetchbuyTax()\r\n  }, [slowRefresh])\r\n\r\n  return buyTax\r\n}\r\n\r\nexport const useTransferTaxRate = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [transferTaxRate, setTransferTaxRate] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchTransferTaxRate() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const rate = await cakeContract.methods.transferTaxRate().call()\r\n      setTransferTaxRate(new BigNumber(rate))\r\n    }\r\n\r\n    fetchTransferTaxRate()\r\n  }, [slowRefresh])\r\n\r\n  return transferTaxRate\r\n}\r\n\r\nexport const useRbsPerBlock = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [rbsPBlock, setrbsPBlock] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchRbsPBlock() {\r\n      const cakeContract = getContract(masterChefABI, getMasterChefAddress())\r\n      const rbs = await cakeContract.methods.rbsPerBlock().call()\r\n      setrbsPBlock(new BigNumber(rbs))\r\n    }\r\n\r\n    fetchRbsPBlock()\r\n  }, [slowRefresh])\r\n\r\n  return rbsPBlock\r\n}\r\n\r\nexport const useGetReserves = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [reserves, setReserves] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchGetReserves() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.getReserves().call()\r\n      setReserves(new BigNumber(rbs?._reserve1).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchGetReserves()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return reserves\r\n}\r\n\r\nexport const useCirculatinSupply = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [supply, setSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSupply() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.totalSupply().call()\r\n      setSupply(new BigNumber(rbs).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchSupply()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return supply\r\n}\r\n\r\nexport default useTokenBalance\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n"],"sourceRoot":""}