{"version":3,"sources":["utils/formatBalance.ts","components/UnlockButton.tsx","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","utils/callHelpers.ts","hooks/useHarvest.ts","config/index.ts","utils/wallet.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/HarvestCountdownModal.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/getLiquidityUrlPathParts.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmList/StakeAction.tsx","views/Farms/components/FarmList/HarvestAction.tsx","views/Farms/components/FarmList/CardActionsContainer.tsx","views/Farms/components/FarmList/MobileHarvestAction.tsx","views/Farms/components/FarmList/MobileCardActionsContainer.tsx","views/Farms/components/FarmList/DetailsSection.tsx","views/Farms/components/FarmList/CardHeading.tsx","views/Farms/components/FarmList/ApyCalculatorModal.tsx","views/Farms/components/FarmList/ApyButton.tsx","views/Farms/components/FarmList/FarmList.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","UnlockButton","props","useWallet","connect","reset","onPresentConnectModal","useWalletModal","self","text","title","variant","onClick","getContract","provider","address","Web3","eth","Contract","erc20","getTokenBalance","tokenAddress","userAddress","a","contract","methods","balanceOf","call","useStyles","makeStyles","theme","createStyles","mainContainer","padding","spacing","background","palette","default","height","breakpoints","down","cardWrapper","width","marginRight","hegiht","paper","border","borderRadius","textAlign","alignItems","cardWrapper1","pageTitle","fontSize","fontWeight","color","fontFamily","subPageTitle","paddingBottom","bgWrapper","marginBottom","bodyWrapper","display","flexDirection","walletButton","statsValue","justifyContent","switchButton","flex","activeSwitcher","account","base","root","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","chart","chartHeader","paddingTop","activeStatus","deactiveStatus","changePercent","paddingRight","chartTitle","currentChartValue","tabList","minWidth","backgroundColor","secondary","light","select","detailChartTabs","paddingLeft","metamaskButton","marginTop","mobileMenuItem","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","referrer","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useHarvest","farmPid","dispatch","useDispatch","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","registerToken","tokenSymbol","tokenDecimals","tokenImage","window","ethereum","request","method","params","type","symbol","image","tokenAdded","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","formatTimePeriodCountdown","periods","FlexLayout","styled","div","isMobile","Wrapper","viewMode","colors","primary","ExpandableSectionButton","expanded","TranslateString","useI18n","role","style","defaultProps","PopoverContainer","show","card","transparentize","textSubtle","ReferenceElement","Arrow","Popover","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","current","tick","id","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","mode","rest","DropDownList","QuestionWrapper","invertedContrast","QuestionHelper","wth","hgh","setShow","open","close","onMouseEnter","onMouseLeave","Block","StyledLinkExternal","LinkExternal","DetailsSection","cakePrice","lpLabel","depositFee","harvestInterval","tokenMode","stakedTokenPriceUSD","bscScanAddress","pairinfo","addLiquidityUrl","useFarmUser","allowance","stakedBalance","isGreaterThan","replace","classes","canHarvest","earnings","registerNativeToken","href","toLocaleString","src","alt","Flex","CardHeading","primaryToken","secondToken","auto","indexOf","useApprove","onApprove","useStake","useReferrerAddressFromCookie","handleStake","console","log","info","onStake","useUnstake","handleUnstake","onUnstake","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","radii","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","max","lineHeight","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","onSelectMax","depositFeeBP","includes","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","disabled","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","stakedBalanceUSD","useModal","onPresentDeposit","onPresentWithdraw","mt","mr","BalanceAndCompound","HarvestAction","cardMode","rawEarningsBalance","earningBalanceUSD","mb","opacity","HarvestCountdownModal","nextHarvestUntil","farm","secondsUntilHarvest","timeUntil","bold","isTokenOnly","lpSymbol","Action","StyledIconButton","IconButton","warning","tada","keyframes","TadaAlarmIcon","AlarmIcon","CardActions","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","tokenAddresses","lpAddress","process","lpName","toUpperCase","isApproved","handleApprove","error","renderApprovalOrStakeButton","as","onPresentHarvestCountdown","textTransform","pr","gt","Number","fullWidth","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","firstPart","secondPart","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","lpTotalInQuoteToken","apyAsDecimal","daysAsDecimalOfYear","principal","interestEarned","exception","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","StyledLink","Link","ApyCalculatorModal","apy","liquidityUrlPathParts","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","external","textDecoration","ApyButton","onPresentApyModal","ml","RainbowLight","StyledCardAccent","FCard","Divider","ExpandingWrapper","FarmCard","removed","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","earningToken","stakingToken","totalValue","QuoteToken","BNB","CAKE","ETH","totalValueFormated","isNaN","undefined","maximumFractionDigits","farmAPY","minimumFractionDigits","tokenPriceVsQuote","lpTokenPriceVsQuote","quoteTokenBlanceLP","lpTotalSupply","multiplier","CardActionsContainer","compoundRawEarningsBalance","minus","integerValue","MobileHarvestAction","StyledBlock","MobileCardActionsContainer","FList","FarmList","innerWidth","setWth","document","getElementsByClassName","clientWidth","min1","setMin1","min2","setMin2","maxWidth","FarmTabButtons","stakedOnly","setStakedOnly","setViewMode","filter","setFilter","sort","setSort","useRouteMatch","url","isExact","StyledButton","Cookies","set","activeIndex","to","ToggleWrapper","scale","checked","Select","event","target","IconComponent","disableUnderline","StyledMenuItem","Button","MenuItem","Hero","mediaQueries","lg","StyledHeading","Heading","PubTitle","LogTitle","LogPrice","FarmBanner","FarmBanner1","BannerText","Farms","farmsProps","path","useMedia","farmsLP","useFarms","usePriceCakeBusd","usePriceBnbBusd","usePriceEthBusd","rbtPrice","usePriceRbtBusd","fastRefresh","useRefresh","get","sortByMultiplier","item1","item2","sortByAPR","sortByLiquidity","sortByEarned","userData","activeFarms","inactiveFarms","stakedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","cakeRewardPerYear","rbsPerBlock","poolWeight","comparedTo","borderRight","Page","exact"],"mappings":"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","file":"static/js/12.d671e417.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.fi'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div<{ isMobile: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  max-width: 980px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: ${({ isMobile }) => isMobile ? \"40px\" : \"32px\"};\r\n  & > * {\r\n    min-width: 310px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n  viewMode?: number\r\n  isMobile?: boolean\r\n  marginBottom?: string\r\n}\r\n\r\nconst Wrapper = styled.div<{ viewMode: number }>`\r\n  display: ${({ viewMode }) => viewMode === 1 ? 'flex' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, viewMode, isMobile, marginBottom }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()} viewMode={viewMode} style={{ marginBottom: marginBottom }}>\r\n      {!isMobile && <Text style={{ color: '#A5A5A5', fontSize: 12, marginLeft: 12 }}>\r\n        {expanded ? TranslateString(725, 'Hide') : TranslateString(658, 'Details')}\r\n      </Text>}\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background: #151745;\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, OpenNewIcon } from '@robustswap-libs/uikit'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 300;\r\n  box-shadow: 5px 4px 8px 3px rgba(14, 14, 14, 0.2);\r\n  border: 1px solid #293D71;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n  mode: number\r\n}\r\n\r\nexport default function Tooltip({ text, mode, ...rest }: TooltipProps) {\r\n  if (mode === 0)\r\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n  else if (mode === 1) {\r\n    return (\r\n      <Popover placement=\"top\" content={\r\n        <TooltipContainer style={{ width: 'auto' }}>\r\n          <DropDownList />\r\n        </TooltipContainer>} {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport function DropDownList() {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>RBS-BNB</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>View Contract</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>Pair Info</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MouseoverTooltip({ children, mode, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip mode={mode} {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { InfoIcon } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: transparent;\r\n  //color: ${({ theme }) => theme.colors.text};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text, mode, wth, hgh }: { text: string, mode: number, wth: number, hgh: number }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4, marginTop: 'auto', marginBottom: 'auto' }}>\r\n      <Tooltip text={text} show={show} mode={mode}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <InfoIcon style={{ width: wth, height: hgh }} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { LinkExternal, Text, Flex, OpenNewIcon, Button } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport HarvestAction from './HarvestAction'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface ExpandableSectionProps {\r\n  cakePrice?: BigNumber\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  tokenMode: boolean\r\n  account?: string\r\n  stakedBalance?: BigNumber\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  cakePrice,\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  tokenMode,\r\n  account,\r\n  bscScanAddress,\r\n  pairinfo,\r\n  addLiquidityUrl\r\n}) => {\r\n\r\n  const { stakedBalance, allowance } = useFarmUser(pid)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const tokenAddress = bscScanAddress.replace('https://bscscan.com/token/', '')\r\n  const TranslateString = useI18n()\r\n  const { canHarvest, earnings } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(tokenAddress, lpLabel, 18, `https://robustswap.fi/images/farms/${lpLabel === 'WBNB' ? 'BNB' : lpLabel}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [lpLabel, tokenAddress])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tokenMode ? <>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n            <StyledLinkExternal href={addLiquidityUrl}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n            <StyledLinkExternal href={bscScanAddress}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n            <StyledLinkExternal href={pairinfo}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" style={{ marginTop: 16 }}>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n            {/* <Text fontSize=\"16px\">{lpLabel.split('-', 1)}-LP</Text> */}\r\n            <Text fontSize=\"16px\">Cake-LP</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>\r\n        </Flex> </> :\r\n        <>\r\n          <Flex justifyContent=\"center\">\r\n            <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, marginBottom: 16, width: '100%', height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n              <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n            </Button>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}:</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text> {/* {depositFee / 100} */}\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block>\r\n          </Flex>\r\n        </>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\n// import useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image, Text } from '@robustswap-libs/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { auto } from '@popperjs/core'\r\n// import { NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  margin-top:auto;\r\n  margin-bottom:auto;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo }) => {\r\n  // const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" style={{ marginBottom: 24 }}>\r\n      <div style={{ width: 40, height: 40 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? 40 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: '100%' }}>\r\n        <Heading>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ width: 170, marginTop: auto, marginBottom: auto }}>\r\n              {lpLabel.replace('LP', '')}\r\n              {lpLabel.indexOf('-') === -1 && <Text style={{ fontSize: 12 }}>Earn RBS</Text>}{/* {lpLabel.replace('LP', '')} */}\r\n            </div>\r\n            {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} />}\r\n          </div>\r\n        </Heading>\r\n        {/* <Flex justifyContent=\"flex-start\">\r\n          <StyledLinkExternal\r\n            href={bscScanAddress}\r\n          >\r\n            {TranslateString(356, 'View Contract')}\r\n          </StyledLinkExternal>\r\n          <StyledLinkExternal\r\n            href={pairinfo}\r\n          >\r\n            {TranslateString(355, 'Pair Info')}\r\n          </StyledLinkExternal>\r\n        </Flex> */}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport { useReferrerAddressFromCookie } from '../state/hooks'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, referrer)\r\n      console.log(\"txHash:\", txHash)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, referrer)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [99999]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n  max?: number | string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, max }) => {\r\n  return (\r\n    <>\r\n      <StyledInputWrapper style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 400, fontSize: 12, lineHeight: '14px', textAlign: 'right' }}>\r\n          Balance: {max.toLocaleString()}\r\n        </Text>\r\n        <div style={{ display: \"flex\", width: '100%' }}>\r\n          {!!startAdornment && startAdornment}\r\n          <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n          {!!endAdornment && endAdornment}\r\n        </div>\r\n      </StyledInputWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #151745;\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  width: auto;\r\n  height: 86px;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width:195px !important;\r\n  background: none;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const image = `/images/farms/${symbol === 'WBNB' ? 'BNB' : symbol}.svg`;\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <div>\r\n              <Button variant=\"text\" size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'MAX')}\r\n              </Button>\r\n            </div>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Flex>\r\n                {!(symbol.includes('LP')) && <img src={image} alt={symbol} width={24} height={24} />}\r\n                <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n              </Flex>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n        max={max}\r\n      />\r\n      {depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '} {symbol}</Text>\r\n        </StyledMaxText>\r\n      ) : (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(0).toString()}{' '}{symbol}</Text>\r\n        </StyledMaxText>\r\n      )}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n  margin-bottom:16px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-left: 4px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, IconButton, Heading, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ width: '100%' }}>\r\n      <div>\r\n        <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawStakedBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${stakedBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useStake from '../../../../hooks/useStake'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  cardMode?: number\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, cardMode = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      {cardMode === 1 && <div>\r\n        <Heading color={account ? rawEarningsBalance === 0 ? 'textDisabled' : 'text' : 'text'}>{account ? displayBalance : '-'}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>}\r\n      <BalanceAndCompound style={{ width: cardMode ? 'auto' : '100%' }}>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', opacity: '0.4', color: 'white', width: '100%' }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(999, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport { Modal, Text } from '@robustswap-libs/uikit'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { Farm } from '../../../state/types'\r\n\r\ninterface HarvestCountdownModalProps {\r\n  farm: Farm\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst HarvestCountdownModal: React.FC<HarvestCountdownModalProps> = ({\r\n  onDismiss,\r\n  nextHarvestUntil,\r\n  harvestInterval,\r\n  farm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const secondsUntilHarvest = nextHarvestUntil - currentTime\r\n  const timeUntil = getTimePeriods(secondsUntilHarvest > 0 ? secondsUntilHarvest : 0)\r\n\r\n  return (\r\n    <Modal title={TranslateString(10029, 'Harvest In')} onDismiss={onDismiss}>\r\n      <Text bold color=\"primary\" fontSize=\"36px\" style={{ textAlign: 'center' }}>\r\n        {formatTimePeriodCountdown(timeUntil)}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"10px\" style={{ textAlign: 'center' }}>\r\n        {farm.isTokenOnly ? 'Pool' : 'Farm'}: {farm.lpSymbol}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"5px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10027, 'Harvest Interval')}: {(harvestInterval / 3600).toLocaleString()}{' '}\r\n        {TranslateString(10028, 'Hours')}\r\n      </Text>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestCountdownModal\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\r\nimport { Button, Flex, Heading, Text, LinkExternal, IconButton, AlarmIcon, useModal } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 4px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  tokenMode: boolean\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n  tokenMode,\r\n  addLiquidityUrl\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (tokenBalance.toNumber() === 0 && tokenMode) ? (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'GET LP')}\r\n        </Button>\r\n      </Flex>\r\n    ) : (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" pr=\"3px\" style={{ color: '#A5A5A5' }}>\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          &nbsp;RBS\r\n        </Text>\r\n        {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n          <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n            <TadaAlarmIcon />\r\n          </StyledIconButton>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} cardMode={1} />\r\n      {tokenMode ? <>\r\n        <Flex>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {tokenBalance.toNumber() <= 0 ? TranslateString(453, 'Available LP') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          {tokenBalance.toNumber() <= 0 ?\r\n            <div style={{ textAlign: 'left' }}>\r\n              <Text fontSize=\"16px\">\r\n                {getFullDisplayBalance(tokenBalance)} LP\r\n              </Text>\r\n              <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n            </div> :\r\n            <Heading style={{ marginTop: 15, opacity: 0 }} />\r\n          }\r\n          {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n        </Flex>\r\n      </> :\r\n        <>\r\n          <Flex>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 8 }}>\r\n              {TranslateString(329, 'Staked')} Tokens\r\n            </Text>\r\n          </Flex>\r\n          {!account ? <UnlockButton fullWidth /> : renderApprovalOrStakeButton()}\r\n        </>\r\n      }\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import BigNumber from \"bignumber.js\"\r\n\r\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice, lpTotalInQuoteToken }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  // return roundToTwoDp(interestEarned)\r\n  const exception = lpTotalInQuoteToken?.toString() === '0' ? 100 : 1;\r\n  return roundToTwoDp(interestEarned * (exception)) // exception when staking is 0\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Calculated based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.fi/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Skeleton, Text } from '@robustswap-libs/uikit'\r\n// import { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: #1E215C;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 16px 16px 0px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 320px !important;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n  background: #151745;\r\n  margin: 0px -16px;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n  isMobile?: boolean\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue && !new BigNumber(totalValue).isNaN()\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const chainId = 56\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.fi/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  const earnLabel = 'ROBUST'\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    if (farm.isTokenOnly) {\r\n      return new BigNumber(farm.tokenPriceVsQuote)\r\n    }\r\n\r\n    const lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    ethPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n  ])\r\n\r\n  return (\r\n    <FCard>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        depositFee={farm.depositFeeBP}\r\n        primaryToken={earningToken}\r\n        secondToken={stakingToken}\r\n        tokenSymbol={farm.tokenSymbol}\r\n        bscScanAddress={\r\n          farm.isTokenOnly\r\n            ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n        pairinfo={\r\n          farm.isTokenOnly\r\n            ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n      />\r\n      {!removed && (\r\n        <Block>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n          <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n            {farm.apy ? (\r\n              <>\r\n                {farmAPY ? farmAPY : 0}%\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Block>\r\n      )}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n          {lpLabel.indexOf('-') >= 0 ?\r\n            TranslateString(10035, 'Liquidity') + ':' :\r\n            TranslateString(408, 'Total Staked')\r\n          }\r\n        </Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n      </Block>\r\n      {/* {lpLabel.indexOf('-') >= 0 &&  */}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n      </Block>\r\n      {/* } */}\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        ethereum={ethereum}\r\n        account={account}\r\n        harvestInterval={farm.harvestInterval}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n        cakePrice={cakePrice}\r\n        tokenMode={lpLabel.indexOf('-') >= 0}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n        viewMode={1}\r\n        isMobile={isMobile}\r\n        marginBottom=\"16px\"\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          cakePrice={cakePrice}\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          tokenMode={lpLabel.indexOf('-') >= 0}\r\n          account={account}\r\n          bscScanAddress={\r\n            farm.isTokenOnly\r\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          pairinfo={\r\n            farm.isTokenOnly\r\n              ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const tokenMode = tokenName.includes('-')\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {renderStakingButtons()}\r\n      <div>\r\n        {/* <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'} style={{ marginRight: 20 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 5 }}>Staked {tokenName.includes('-') ? 'LP' : 'Tokens'}</Text>\r\n          {displayBalance}\r\n        </Heading> */}\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {!tokenMode ? TranslateString(333, 'Staked Tokens') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n          <Text fontSize=\"16px\">{stakedBalance.toString()} {!tokenMode ? tokenName : 'LP'}</Text>\r\n          <Text fontSize=\"12px\">${(stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString()}</Text>\r\n        </div>\r\n        {rawStakedBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${stakedBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n    </Flex >\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\">\r\n      <BalanceAndCompound>\r\n        {/* {pid === 9 ? (\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            marginBottom=\"15px\"\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(compoundRawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n        ) : null} */}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', color: 'white', opacity: \"0.4\" }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  tokenMode: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport useStake from '../../../../hooks/useStake'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const compoundRawEarningsBalance = getBalanceNumber(earnings.minus(earnings.times(0.05).integerValue()))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      <BalanceAndCompound>\r\n        {pid === 9 ? (\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            marginBottom=\"15px\"\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(compoundRawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n        ) : null}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', opacity: '0.4', color: 'white' }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport MobileHarvestAction from './MobileHarvestAction'\r\n\r\nconst Action = styled.div`\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n  text-align: right;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }} justifyContent=\"space-between\">\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {TranslateString(333, 'Staked Tokens')}\r\n          </Text>\r\n          <Text fontSize=\"14px\">{isApproved ? stakedBalance : 0} RBS</Text>\r\n          <Text fontSize=\"12px\">${isApproved ? (stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString() : 0}</Text>\r\n        </div>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(495, 'Enable Farm')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <MobileHarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { LinkExternal, OpenNewIcon, Text, Flex, Button } from '@robustswap-libs/uikit'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport MobileCardActionsContainer from './MobileCardActionsContainer'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  isMobile: boolean\r\n  removed: boolean\r\n  totalValueFormated?: string\r\n  tokenMode: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<{ tokenMode: boolean }>`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  padding: 24px 0px 0px 0px;\r\n  padding-bottom: ${({ tokenMode }) => tokenMode ? \"24px\" : \"0px\"};\r\n  text-align: left;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledBlock = styled.div`\r\n  background-color: #293D71;\r\n  padding-bottom: 8px;\r\n  margin: 12px 0px;\r\n  padding: 8px 24px;\r\n  background-image: url('/images/farm-step.svg');\r\n  background-position: 16px, center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps & FarmCardActionsProps> = ({\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  cakePrice,\r\n  isMobile,\r\n  removed,\r\n  totalValueFormated,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { tokenBalance } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const chainId = 56\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(farm.tokenAddresses[chainId], farm.tokenSymbol, 18, `https://robustswap.fi/images/farms/${farm.tokenSymbol === 'WBNB' ? 'BNB' : farm.tokenSymbol}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [farm])\r\n\r\n  const bscScanAddress = farm.isTokenOnly\r\n    ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const pairinfo = farm.isTokenOnly\r\n    ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.fi/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  return (\r\n    <Wrapper tokenMode={tokenMode}>\r\n      {isMobile ?\r\n        <>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold', color: '#FF6B2A' }}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of PANTHER rewards each farm gets. For example, if a 1x farm was getting 1 PANTHER per block, a 40x farm would be getting 40 PANTHER per block.')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(408, 'Total Staked')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n                {tokenMode ?\r\n                  <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                  <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n                }\r\n              </Flex>\r\n            </Block>\r\n          </Flex>\r\n          <StyledBlock>\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              <div style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                <Text fontSize=\"14px\">{getFullDisplayBalance(tokenBalance)} LP</Text>\r\n                <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n              </div>\r\n              <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl}>\r\n                {TranslateString(507, 'GET LP')}\r\n              </Button>\r\n            </Flex>\r\n            <MobileCardActionsContainer\r\n              farm={farm}\r\n              ethereum={ethereum}\r\n              account={account}\r\n              harvestInterval={harvestInterval}\r\n              stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n              cakePrice={cakePrice}\r\n            />\r\n          </StyledBlock>\r\n        </> :\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Flex alignItems=\"center\">\r\n            {!tokenMode && <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ marginRight: 16 }}>\r\n              {TranslateString(507, 'GET LP')}\r\n            </Button>}\r\n            <div>\r\n              {tokenMode ?\r\n                <>\r\n                  <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ width: 89, height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n                    <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n                  </Button>\r\n                </> :\r\n                <>\r\n                  <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                  <Text fontSize=\"16px\">{getFullDisplayBalance(tokenBalance)} LP</Text>\r\n                  <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n                </>\r\n              }\r\n            </div>\r\n          </Flex>\r\n          {tokenMode && <>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n          </>}\r\n          {tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>}\r\n          {!tokenMode && <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />}\r\n          <CardActionsContainer\r\n            farm={farm}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            harvestInterval={harvestInterval}\r\n            stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n            cakePrice={cakePrice}\r\n            tokenMode={tokenMode}\r\n          />\r\n        </Flex>\r\n      }\r\n      {!isMobile && !tokenMode && <Divider style={{ marginTop: 16, marginBottom: 16 }} />}\r\n      {isMobile ?\r\n        <Flex justifyContent=\"space-between\" style={{ padding: '0px 24px' }}>\r\n          {!tokenMode && <><Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"12px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"12px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"12px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex> :\r\n        <Flex>\r\n          {!tokenMode && <>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n              <StyledLinkExternal href={addLiquidityUrl}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n              <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"16px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginTop: -1 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex>\r\n      }\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image } from '@robustswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex) <{ isMobile: boolean }>`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  flex-grow: 0.2;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 24px' : '0px 0px'}\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" isMobile={isMobile}>\r\n      {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} marginRight={16} />}\r\n      <div style={{ width: 40, height: isMobile ? 40 : 44 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? isMobile ? 40 : 44 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: 165, marginTop: 10 }}>\r\n        <Heading mb=\"8px\" style={{ fontWeight: 800 }}>{lpLabel.replace('LP', '')}</Heading>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Calculated based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.fi/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Text, Skeleton, Flex } from '@robustswap-libs/uikit'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FList = styled.div<{ isMobile: boolean }>`\r\n  align-self: baseline;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: ${({ isMobile }) => isMobile ? '0px' : '0px 24px'};\r\n  position: relative;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  background-color: #151745;\r\n  margin: 0px -24px 0px -24px;\r\n  border-radius: 0px 0px 8px 8px;\r\n  padding: 0px 24px 0px 24px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string,\r\n  isMobile: boolean,\r\n  tokenMode: boolean\r\n}\r\n\r\nconst FarmList: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account, isMobile, tokenMode }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const { earnings } = useFarmUser(farm.pid)\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated =\r\n    totalValue && !new BigNumber(totalValue).isNaN()\r\n      ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : '-'\r\n\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  // const earnLabel = 'ROBUST'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    if (farm.isTokenOnly) {\r\n      return new BigNumber(farm.tokenPriceVsQuote)\r\n    }\r\n\r\n    const lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    ethPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n  ])\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n  return (\r\n    <FList isMobile={isMobile} style={{ backgroundColor: '#1E215C', width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      {isMobile ?\r\n        <>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            {!removed && (\r\n              <Block>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n                <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#FF6B2A' }}>\r\n                  {farm.apy ? (\r\n                    <>\r\n                      {farmAPY}%\r\n                      <ApyButton\r\n                        lpLabel={lpLabel}\r\n                        quoteTokenAdresses={quoteTokenAdresses}\r\n                        quoteTokenSymbol={quoteTokenSymbol}\r\n                        tokenAddresses={tokenAddresses}\r\n                        cakePrice={cakePrice}\r\n                        apy={farm.apy}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <Skeleton height={24} width={80} />\r\n                  )}\r\n                </Text>\r\n              </Block>\r\n            )}\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'ROBUST Earned')}:</Text>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n            </Block>\r\n            <ExpandableSectionButton\r\n              onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n              expanded={showExpandableSection}\r\n              viewMode={0}\r\n              isMobile={isMobile}\r\n            />\r\n          </Flex>\r\n        </> :\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ height: 88 }}>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          {!removed && (\r\n            <Block style={{ marginBottom: 'auto', marginTop: 'auto' }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n              <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n                {farm.apy ? (\r\n                  <>\r\n                    {farmAPY}%\r\n                    <ApyButton\r\n                      lpLabel={lpLabel}\r\n                      quoteTokenAdresses={quoteTokenAdresses}\r\n                      lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                      quoteTokenSymbol={quoteTokenSymbol}\r\n                      tokenAddresses={tokenAddresses}\r\n                      cakePrice={cakePrice}\r\n                      apy={farm.apy}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Skeleton height={24} width={80} />\r\n                )}\r\n              </Text>\r\n            </Block>\r\n          )}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n              {TranslateString(408, 'Total Staked')}:\r\n            </Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800 }}>{!removed ? totalValueFormated : 0}</Text>\r\n              {tokenMode ?\r\n                <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n              }\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n              <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'Earned')}:</Text>\r\n            <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n          </Block>\r\n          <ExpandableSectionButton\r\n            onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n            expanded={showExpandableSection}\r\n            viewMode={0}\r\n            isMobile={isMobile}\r\n          />\r\n        </Flex>\r\n      }\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          farm={farm}\r\n          ethereum={ethereum}\r\n          account={account}\r\n          cakePrice={cakePrice}\r\n          isMobile={isMobile}\r\n          removed={removed}\r\n          totalValueFormated={totalValueFormated}\r\n          tokenMode={tokenMode}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FList>\r\n  )\r\n}\r\n\r\nexport default FarmList\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle, Button, Input } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { setWith } from 'lodash';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly, viewMode, setViewMode, filter, setFilter, sort, setSort, isMobile }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSort(event.target.value as number);\r\n  };\r\n  return (\r\n    <Wrapper isMobile={isMobile} style={{ width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      <Flex style={{ paddingBottom: isMobile ? '16px' : 0 }}>\r\n        {!isMobile &&\r\n          <>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(false)\r\n              Cookies.set('viewMode', false)\r\n            }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-list.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-list-active.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(true)\r\n              Cookies.set('viewMode', true)\r\n            }} style={{ marginRight: 28 }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-card-active.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-card.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n          </>}\r\n        <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: 0, width: 67 }}>\r\n            {TranslateString(601, 'Live')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: 0, width: 108 }}>\r\n            {TranslateString(599, 'Finished')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <ToggleWrapper>\r\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n          <Text style={{ color: '#7381FC', fontSize: isMobile ? '14px' : '16px' }}> {TranslateString(699, 'Staked only')}</Text>\r\n        </ToggleWrapper>\r\n      </Flex>\r\n      <Flex>\r\n        <Input\r\n          id=\"search\"\r\n          name=\"search-card\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(10011, 'Search')}\r\n          style={{ maxWidth: 170, marginRight: 8 }}\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.currentTarget.value)}\r\n        // isWarning={error}\r\n        // disabled={isloading}\r\n        />\r\n        <Select\r\n          value={sort}\r\n          onChange={handleChangeSelect}\r\n          style={{\r\n            borderRadius: 8,\r\n            background: \"rgba(30, 33, 92, 1)\",\r\n            paddingLeft: \"16px\",\r\n            width: '100%',\r\n            // border: '1px solid rgba(107, 161, 255, 0.2)',\r\n            height: 40,\r\n            color: '#7381FC',\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            backgroundColor: '#1E215C'\r\n          }}\r\n          IconComponent={\r\n            () => (<ArrowDropDownIcon style={{ color: \"#7381FC\" }} />)\r\n          }\r\n          disableUnderline\r\n        >\r\n          <StyledMenuItem value={1}>{TranslateString(395, 'HOT')}</StyledMenuItem>\r\n          <StyledMenuItem value={2}>{TranslateString(457, 'Multiplier')}</StyledMenuItem>\r\n          <StyledMenuItem value={3}>{TranslateString(352, 'APR')}</StyledMenuItem>\r\n          <StyledMenuItem value={4}>{TranslateString(686, 'Liquidity')}</StyledMenuItem>\r\n          <StyledMenuItem value={5}>{TranslateString(331, 'Earned')}</StyledMenuItem>\r\n        </Select>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div<{ isMobile: boolean }>`\r\n  display: ${({ isMobile }) => isMobile ? 'block' : 'flex'};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 0px' : '0px 8px'};\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 16px;\r\n  ${Text} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 0px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 16px;\r\n  background: transparent;\r\n`\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMenuItem = styled(MenuItem)`\r\n  color: #7381FC;\r\n`","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport Cookies from 'js-cookie'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmList from './components/FarmList/FarmList'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Hero = styled.div<{ isMobile: boolean, tokenMode: boolean }>`\r\n  background-image: ${({ tokenMode, isMobile }) => !tokenMode ?\r\n    (isMobile ? \"url('/images/farms/farms-header-bg-mobile.png')\" : \"url('/images/farms/farms-header-bg.png')\") :\r\n    (isMobile ? \"url('/images/farms/pools-header-bg-mobile.png')\" : \"url('/images/farms/pools-header-bg.png')\")};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 44px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n  height: ${({ isMobile }) => isMobile ? \"240px\" : \"320px\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 34px;\r\n  line-height: 40px;\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 36px;\r\n`\r\nconst PubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  max-width: ${({ isMobile }) => isMobile ? \"327px\" : \"538px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300; \r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst FarmBanner = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/farms-banner-bg.png')\" : \"url('/images/farms/farms-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 34px 86px 34px 25px;\r\n`\r\nconst FarmBanner1 = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/pools-banner-bg.png')\" : \"url('/images/farms/pools-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 48px 96px 48px 25px;\r\n`\r\nconst BannerText = styled.text`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n`\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const isMobile = useMedia('(max-width: 768px)')\r\n  const TranslateString = useI18n()\r\n  let farmsLP = useFarms()\r\n  const [filter, setFilter] = useState('')\r\n  const [sort, setSort] = useState(1);\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n  const { tokenMode } = farmsProps\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n  const [viewMode, setViewMode] = useState(Cookies.get('viewMode') ? Cookies.get('viewMode') === 'true' : !isMobile)\r\n\r\n  const sortByMultiplier = (item1, item2) => {\r\n    return item2.multiplier.replace('X', '') - item1.multiplier.replace('X', '');\r\n  }\r\n  const sortByAPR = (item1, item2) => {\r\n    return item2.apy - item1.apy\r\n  }\r\n  const sortByLiquidity = (item1, item2) => {\r\n    return item2.lpTotalInQuoteToken - item1.lpTotalInQuoteToken\r\n  }\r\n  const sortByEarned = (item1, item2) => {\r\n    return item2.userData.earnings - item1.userData.earnings\r\n  }\r\n  // activeFarms.sort(sortByMultiplier);\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  if (filter !== '') {\r\n    activeFarms = activeFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  if (filter !== '') {\r\n    inactiveFarms = inactiveFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  if (filter !== '') {\r\n    stakedOnlyFarms = stakedOnlyFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n          .times(new BigNumber(farm.poolWeight))\r\n          .div(new BigNumber(10).pow(18))\r\n\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        let apy = cakePrice.times(cakeRewardPerYear)\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          totalValue = totalValue.times(ethPrice)\r\n        }\r\n\r\n        if (totalValue.comparedTo(0) > 0) {\r\n          apy = apy.div(totalValue)\r\n        }\r\n        else apy = apy.div(100000)  // exception when staking is 0\r\n        return { ...farm, apy }\r\n      })\r\n\r\n      if (sort === 1) {\r\n        // farmsToDisplayWithAPY.sort()\r\n      } else if (sort === 2) {\r\n        farmsToDisplayWithAPY.sort(sortByMultiplier)\r\n      } else if (sort === 3) {\r\n        farmsToDisplayWithAPY.sort(sortByAPR)\r\n      } else if (sort === 4) {\r\n        farmsToDisplayWithAPY.sort(sortByLiquidity)\r\n      } else if (sort === 5) {\r\n        farmsToDisplayWithAPY.sort(sortByEarned)\r\n      }\r\n      if (viewMode) {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmCard\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={false}\r\n          />\r\n        ))\r\n      } else {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmList\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={isMobile}\r\n            tokenMode={tokenMode}\r\n          />\r\n        ))\r\n      }\r\n    },\r\n    [bnbPrice, account, cakePrice, ethPrice, ethereum, sort, viewMode, isMobile, tokenMode],\r\n  )\r\n  return (\r\n    <>\r\n      <Hero isMobile={isMobile} tokenMode={tokenMode}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${cakePrice.toFixed(2)}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '15px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ display: 'block' }}>\r\n            <StyledHeading isMobile={isMobile}>\r\n              {tokenMode\r\n                ? TranslateString(676, 'Pools')\r\n                : TranslateString(674, 'Farms')}\r\n            </StyledHeading>\r\n            <PubTitle isMobile={isMobile}>\r\n              {tokenMode ?\r\n                TranslateString(730, 'Looking for competitive rewards, low-risk, and no impermanent-loss farming alternative? Stake your RBS and other tokens below to earn more RBS.') :\r\n                TranslateString(729, 'ROBUSTSWAP Farms offer multiple farming opportunities and high rewards to you. Get rewarded by staking your LP tokens.')\r\n              }\r\n            </PubTitle>\r\n          </div>\r\n          {!isMobile && <div>\r\n            {tokenMode ?\r\n              <>\r\n                <FarmBanner1 isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(737, 'High APR,')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(738, 'low risk earning.')}</BannerText>\r\n                </FarmBanner1>\r\n              </>\r\n              :\r\n              <>\r\n                <FarmBanner isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(734, 'Enjoy')}</BannerText>&nbsp;\r\n                    <BannerText style={{ color: '#D6EE47' }}>{TranslateString(735, 'FREE')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(736, 'deposit with our featured farms.')}</BannerText>\r\n                </FarmBanner>\r\n              </>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </Hero>\r\n      <Page>\r\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} viewMode={viewMode} setViewMode={setViewMode} filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} isMobile={isMobile} />\r\n        <div>\r\n          <FlexLayout isMobile={isMobile}>\r\n            <Route exact path={`${path}`}>\r\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n            </Route>\r\n            <Route exact path={`${path}/history`}>\r\n              {farmsList(inactiveFarms, true)}\r\n            </Route>\r\n          </FlexLayout>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}