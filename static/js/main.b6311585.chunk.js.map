{"version":3,"sources":["config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","contexts/BlockContext.tsx","state/multicalls/index.ts","state/index.ts","Providers.tsx","style/Global.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/configtw.ts","components/Menu/configcn.ts","components/Menu/index.tsx","components/PageLoader.tsx","hooks/useGetDocumentTitlePrice.ts","App.tsx","index.tsx","utils/referralCode.ts","state/hooks.ts","hooks/useParsedQueryString.ts","utils/web3.ts","config/constants/types.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/contracts.ts","utils/getRpcUrl.ts","state/actions.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","contexts/Localisation/translationsContext.ts","components/layout/Container.tsx","components/layout/Page.tsx","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","config/constants/farms.ts","state/pools/fetchPools.ts","state/pools/index.ts","state/pools/fetchPoolsUser.ts"],"names":["EN","code","language","allLanguages","CACHE_KEY","LanguageContext","React","createContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","children","useState","translations","setTranslations","useEffect","storedLangCode","localStorage","getItem","storedLang","filter","getStoredLang","fetch","then","r","json","translationApiResponse","data","length","catch","e","console","error","Provider","value","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","setIsDark","prevState","JSON","stringify","theme","dark","light","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","interval","setInterval","a","eth","getBlockNumber","blockNumber","current","clearInterval","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","address","Error","callData","multiCallSlice","createSlice","name","initialState","callResults","reducers","addMulticallListeners","state","payload","calls","chainId","options","blocksPerFetch","listeners","callListeners","forEach","callKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","Object","keys","actions","store","configureStore","devTools","process","reducer","farms","farmsReducer","pools","poolsReducer","multicalls","Providers","rpcUrl","getRpcUrl","parseInt","connectors","walletconnect","bsc","RefreshContext","GlobalStyle","createGlobalStyle","colors","background","useTheme","useContext","StyledThemeCopntext","config","label","icon","href","items","configtw","configcn","Menu","props","useWallet","connect","reset","account","cakePriceUsd","usePriceCakeBusd","links","login","logout","currentLang","langs","setLang","toNumber","cakePriceLink","getCakeAddress","Wrapper","styled","Page","PageLoader","useGetDocumentTitlePrice","cakePriceUsdString","eq","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title","Home","lazy","Farms","Exchange","Liquidity","NotFound","Referrals","Account","BigNumber","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","useFetchPublicData","Global","fallback","path","exact","tokenMode","component","memo","MuiThemeProvider","createMuiTheme","Mode","ThemeProvider","ReactDOM","render","StrictMode","CssBaseline","getElementById","hashids","Hashids","referralCodeToAccount","referralCode","hex","decodeHex","Web3","utils","isAddress","toChecksumAddress","ZERO","dispatch","useDispatch","slowRefresh","useRefresh","fetchFarmsPublicDataAsync","useFarms","useSelector","useFarmFromPid","pid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","nextHarvestUntil","canHarvest","earnings","usePriceBnbBusd","tokenPriceVsQuote","usePriceEthBusd","ethBnbPrice","usePriceEthBnb","bnbPrice","times","useTotalValue","cakePrice","ethPrice","i","lpTotalInQuoteToken","isNaN","val","quoteTokenSymbol","QuoteToken","BNB","CAKE","ETH","plus","useReferralCode","parsedQs","search","useLocation","useMemo","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","ref","isValid","Cookies","set","expires","useReferrerAddressFromCookie","get","RPC_URL","httpProvider","providers","HttpProvider","timeout","getContract","abi","contractOptions","Contract","PoolCategory","fetchFarms","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","tokenAddresses","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","div","pow","tokenSymbol","BUSD","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","pantherPerBlock","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","harvestInterval","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","log","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","fetchFarmUserCanHarvest","rawResults","farmsSlice","setFarmsPublicData","action","liveFarmsData","liveFarmData","setFarmUserData","arrayOfUserDataObjects","userDataEl","index","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","userFarmCanHarvest","farmAllowance","cake","masterChef","sousChef","referral","wbnb","lottery","lotteryNFT","mulltiCall","busd","cakeRouter","cakeFactory","nodes","getNodeUrl","randomIndex","random","slow","fast","RefreshContextProvider","setSlow","setFast","prev","fastRefresh","defaultTranslationState","TranslationsContext","Container","mediaQueries","sm","lg","multi","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","addresses","getWbnbAddress","getReferralAddress","getCakeRouterAddress","sousId","tokenName","stakingTokenName","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","lpSymbol","contracts","fetchPoolsExtraConfigs","poolsWithEnd","poolsConfig","p","callsStartBlock","poolConfig","callsEndBlock","callsPoolLimitPerUser","callsWithdrawalInterval","sousChefABI","starts","ends","limits","intervals","cakePoolConfig","startBlock","endBlock","limit","poolLimitPerUser","withdrawalInterval","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","PoolsSlice","setPoolsPublicData","livePoolsData","pool","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","extraConfigs","totalStakings","liveData","extraConfig","totalStaking","fetchPoolsUserDataAsync","fetchPoolsAllowance","allowances","fetchUserBalances","stakingTokenBalances","fetchUserStakeBalances","stakedBalances","fetchUserPendingRewards","pendingRewards","stakingTokenBalance","nextWithdrawalUntil","pendingReward","updateUserAllowance","updateUserBalance","tokenBalances","updateUserStakedBalance","userWithdrawalUntil","updateUserPendingReward","bnbPools","nonMasterPools","masterChefContract","masterChefABI","reduce","acc","tokenBalancesRaw","getBalance","bnbBalance","bnbBalances","fetchWbnbBalance","userInfo","amount","masterPoolAmount","pendingPanther"],"mappings":"kVAAaA,EAAK,CAAEC,KAAM,KAAMC,SAAU,WA8B7BC,EAAe,CAC1BH,EA5BkB,CAAEC,KAAM,QAASC,SAAU,4BAC3B,CAAED,KAAM,QAASC,SAAU,6B,QCCzCE,EAAY,sBAcZC,EAAkBC,IAAMC,cAAc,CAC1CC,iBAAkBR,EAClBS,oBAAqB,aACrBC,mBAAoBV,EACpBW,sBAAuB,eAanBC,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,EAAgDC,mBAAcd,GAA9D,mBAAOQ,EAAP,KAAyBC,EAAzB,KACA,EAAoDK,mBAAcd,GAAlE,mBAAOU,EAAP,KAA2BC,EAA3B,KACA,EAAwCG,mBAAqB,IAA7D,mBAAOC,EAAP,KAAqBC,EAArB,KAQAC,qBAAU,WACR,IAAMC,EAAiBC,aAAaC,QAAQhB,GAC5C,GAAIc,EAAgB,CAClB,IAAMG,EATY,SAACH,GACrB,OAAOf,EAAamB,QAAO,SAACpB,GAC1B,OAAOA,EAASD,OAASiB,KACxB,GAMkBK,CAAcL,GACjCT,EAAoBY,QAEpBZ,EAAoBT,KAErB,IAEHiB,qBAAU,WACJT,GAEFgB,MAAM,UAAD,OAAWhB,EAAiBP,KAA5B,UACFwB,MAAK,SAACC,GAAD,OAAOA,EAAEC,UAEdF,MAAK,SAACG,GACDA,EAAuBC,KAAKC,OAAS,EACvCd,EAAgB,CAAC,UAEjBA,EAAgBY,EAAuBC,SAG1CJ,MAAK,kBAAMd,EAAsBH,MACjCuB,OAAM,SAACC,GACNC,QAAQC,MAAM,SACdD,QAAQC,MAAMF,GACdhB,EAAgB,CAAC,eAGtB,CAACR,EAAkBQ,IAOtB,OACE,cAACX,EAAgB8B,SAAjB,CACEC,MAAO,CAAE5B,mBAAkBC,oBAPF,SAAC4B,GAC5B5B,EAAoB4B,GACpBlB,aAAamB,QAAQlC,EAAWiC,EAAWpC,OAK6BS,qBAAoBC,yBAD5F,SAGE,cAAC,IAAoBwB,SAArB,CAA8BC,MAAO,CAAErB,eAAcC,mBAArD,SAAyEH,O,OClFzE0B,EAAejC,IAAMC,cAAc,CAAEiC,OAAQ,KAAMC,YAAa,kBAAM,QAEtEC,EAAuB,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAC9B,EAA4BC,oBAAS,WAGnC,OAAO,KAHT,mBAAO0B,EAAP,KAAeG,EAAf,KAaA,OACE,cAACJ,EAAaJ,SAAd,CAAuBC,MAAO,CAAEI,SAAQC,YARtB,WAClBE,GAAU,SAACC,GAET,OADAzB,aAAamB,QAbD,UAaoBO,KAAKC,WAAWF,KACxCA,IAAa,OAKvB,SACE,cAAC,IAAD,CAAiBG,MAAOP,EAASQ,IAAOC,IAAxC,SAAgDpC,O,iCCrBhDqC,EAAe5C,IAAMC,cAAc,GAEnC4C,EAAuB,SAAC,GAAkB,IAAhBtC,EAAe,EAAfA,SACxBuC,EAAgBC,iBAAO,GAC7B,EAA0BvC,mBAAS,GAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAeA,OAbAtC,qBAAU,WACR,IAAMuC,EAAOC,cACPC,EAAWC,YAAW,sBAAC,4BAAAC,EAAA,sEACDJ,EAAKK,IAAIC,iBADR,QACrBC,EADqB,UAEPX,EAAcY,UAChCZ,EAAcY,QAAUD,EACxBR,EAASQ,IAJgB,2CAM1B,KAEH,OAAO,kBAAME,cAAcP,MAC1B,IAEI,cAACR,EAAaf,SAAd,CAAuBC,MAAOkB,EAA9B,SAAsCzC,K,kCCnBzCqD,EAAgB,sBAChBC,EAAkB,gBACxB,SAASC,EAAUC,GACjB,IAAKH,EAAcI,KAAKD,EAAKE,SAC3B,MAAM,IAAIC,MAAJ,2BAA8BH,EAAKE,UAE3C,IAAKJ,EAAgBG,KAAKD,EAAKI,UAC7B,MAAM,IAAID,MAAJ,uBAA0BH,EAAKI,WAEvC,MAAM,GAAN,OAAUJ,EAAKE,QAAf,YAA0BF,EAAKI,UAGjC,I,IAIaC,EAAiBC,YAAY,CACxCC,KAAM,aACNC,aANoC,CACpCC,YAAa,IAMbC,SAAU,CACRC,sBAAuB,SAACC,EAAD,GAAmF,IAAD,MAAxEC,QAAWC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,QAAsD,IAA7CC,QAA6C,gBAAX,GAAW,GAAlCC,sBAAkC,MAAjB,EAAiB,EACjGC,EAA8CN,EAAMO,cACtDP,EAAMO,cACLP,EAAMO,cAAgB,GAC3BD,EAAUH,GAAV,UAAqBG,EAAUH,UAA/B,QAA2C,GAC3CD,EAAMM,SAAQ,SAAApB,GAAS,IAAD,IACdqB,EAAUtB,EAAUC,GAC1BkB,EAAUH,GAASM,GAAnB,UAA8BH,EAAUH,GAASM,UAAjD,QAA6D,GAC7DH,EAAUH,GAASM,GAASJ,IAAkB,UAACC,EAAUH,GAASM,GAASJ,UAA7B,QAAgD,GAAK,MAGvGK,yBAA0B,SAACV,EAAD,GAAmF,IAAD,IAAxEC,QAAWE,EAA6D,EAA7DA,QAASD,EAAoD,EAApDA,MAAoD,IAA7CE,QAA6C,gBAAX,GAAW,GAAlCC,sBAAkC,MAAjB,EAAiB,EACpGC,EAA8CN,EAAMO,cACtDP,EAAMO,cACLP,EAAMO,cAAgB,GAEtBD,EAAUH,IACfD,EAAMM,SAAQ,SAAApB,GACZ,IAAMqB,EAAUtB,EAAUC,GACrBkB,EAAUH,GAASM,IACnBH,EAAUH,GAASM,GAASJ,KAEmB,IAAhDC,EAAUH,GAASM,GAASJ,UACvBC,EAAUH,GAASM,GAASJ,GAEnCC,EAAUH,GAASM,GAASJ,UAIlCM,yBAA0B,SAACX,EAAD,GAAkE,IAAD,MAAvDC,QAAWE,EAA4C,EAA5CA,QAASS,EAAmC,EAAnCA,oBAAqBV,EAAc,EAAdA,MAC3EF,EAAMH,YAAYM,GAAlB,UAA6BH,EAAMH,YAAYM,UAA/C,QAA2D,GAC3DD,EAAMM,SAAQ,SAAApB,GACZ,IAAMqB,EAAUtB,EAAUC,GACpBL,EAAUiB,EAAMH,YAAYM,GAASM,GAC3C,GAAK1B,EAIE,CAAC,IAAD,EACL,IAAI,UAACA,EAAQ6B,2BAAT,QAAgC,IAAMA,EAAqB,OAC/DZ,EAAMH,YAAYM,GAASM,GAASG,oBAAsBA,OAL1DZ,EAAMH,YAAYM,GAASM,GAAW,CACpCG,2BAQRC,8BAA+B,SAACb,EAAD,GAAkE,IAAD,MAAvDC,QAAWW,EAA4C,EAA5CA,oBAAqBT,EAAuB,EAAvBA,QAASD,EAAc,EAAdA,MAChFF,EAAMH,YAAYM,GAAlB,UAA6BH,EAAMH,YAAYM,UAA/C,QAA2D,GAC3DD,EAAMM,SAAQ,SAAApB,GACZ,IAAMqB,EAAUtB,EAAUC,GACpBL,EAAUiB,EAAMH,YAAYM,GAASM,GACtC1B,GACDA,EAAQ6B,sBAAwBA,WAC3B7B,EAAQ6B,oBACf7B,EAAQnC,KAAO,KACfmC,EAAQD,YAAc8B,OAI5BE,uBAAwB,SAACd,EAAD,GAA4D,IAAD,MAAjDC,QAAWE,EAAsC,EAAtCA,QAASY,EAA6B,EAA7BA,QAASjC,EAAoB,EAApBA,YAC7DkB,EAAMH,YAAYM,GAAlB,UAA6BH,EAAMH,YAAYM,UAA/C,QAA2D,GAC3Da,OAAOC,KAAKF,GAASP,SAAQ,SAAAC,GAAY,IAAD,EAChC1B,EAAUiB,EAAMH,YAAYM,GAASM,IACvC,iBAAC1B,QAAD,IAACA,OAAD,EAACA,EAASD,mBAAV,QAAyB,GAAKA,IAClCkB,EAAMH,YAAYM,GAASM,GAAW,CACpC7D,KAAMmE,EAAQN,GACd3B,uBAQH,EAA6IW,EAAeyB,QAEpJzB,GAFR,EAAQM,sBAAR,EAA+BW,yBAA/B,EAAyDC,yBAAzD,EAAmFE,8BAAnF,EAAkHC,uBAE1GrB,EAAf,SC9Ee0B,EAZDC,YAAe,CAC3BC,UAAUC,EACVC,QAAS,CACPC,MAAOC,IACPC,MAAOC,IACPC,gBC0BWC,EA1Ba,SAAC,GAAkB,IAAhBjG,EAAe,EAAfA,SACvBkG,EAASC,cACT5B,EAAU6B,SAASV,MACzB,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,CACEhB,QAASA,EACT8B,WAAY,CACVC,cAAe,CAAEJ,UACjBK,OAJJ,SAOE,cAAC,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,UAAgBxG,iB,kDCRjByG,EAXKC,YAAH,wIAEO,qBAAGxE,MAAkByE,OAAOC,c,QCDrCC,GANE,WACf,MAAgCC,qBAAWpF,GAE3C,MAAO,CAAEC,OAFT,EAAQA,OAESC,YAFjB,EAAgBA,YAEcM,MADhB4E,qBAAWC,OCsJZC,GA1Ja,CAC1B,CACEC,MAAO,OACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,WACPC,KAAM,YACNC,KAAM,kCAER,CACEF,MAAO,QACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,QACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,YACPC,KAAM,eACNC,KAAM,cAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,QACPC,KAAM,YACNC,KAAM,WAER,CACEF,MAAO,WACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,aAER,CACEF,MAAO,YACPE,KAAM,eAER,CACEF,MAAO,YACPE,KAAM,eAER,CACEF,MAAO,gBACPE,KAAM,mBAER,CACEF,MAAO,gBACPE,KAAM,mBAER,CACEF,MAAO,OACPE,KAAM,YAIZ,CACEF,MAAO,WACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,kBACPE,KAAM,cAER,CACEF,MAAO,oBACPE,KAAM,uBAER,CACEF,MAAO,kBACPE,KAAM,qBAER,CACEF,MAAO,uBACPE,KAAM,sBAER,CACEF,MAAO,gBACPE,KAAM,uBAER,CACEF,MAAO,iBACPE,KAAM,sBAER,CACEF,MAAO,oBACPE,KAAM,uBAER,CACEF,MAAO,mBACPE,KAAM,yBAIZ,CACEF,MAAO,SACPC,KAAM,YACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,YAER,CACEF,MAAO,WACPE,KAAM,sBAER,CACEF,MAAO,UACPE,KAAM,kBAER,CACEF,MAAO,SACPE,KAAM,sBAIZ,CACEF,MAAO,OACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,SACPE,KAAM,YAER,CACEF,MAAO,UACPE,KAAM,aAER,CACEF,MAAO,UACPE,KAAM,aAER,CACEF,MAAO,SACPE,KAAM,YAER,CACEF,MAAO,SACPE,KAAM,eC0BCE,GA9Ke,CAC5B,CACEJ,MAAO,eACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,aAYR,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IAER,CACEF,MAAO,qBACPC,KAAM,WACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,cACNC,KAAM,IAER,CACEF,MAAO,iCACPC,KAAM,UACNC,KAAM,IAER,CACEF,MAAO,2BACPC,KAAM,eACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IA0CR,CACEF,MAAO,2BACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,OACPE,KAAM,MASZ,CACEF,MAAO,eACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,SACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,IAER,CACEF,MAAO,2BACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,IAER,CACEF,MAAO,eACPE,KAAM,OCMCG,GA9Ke,CAC5B,CACEL,MAAO,eACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,IAYR,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,qBACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,YAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,cACNC,KAAM,YAER,CACEF,MAAO,iCACPC,KAAM,UACNC,KAAM,QAER,CACEF,MAAO,2BACPC,KAAM,eACNC,KAAM,cAER,CACEF,MAAO,UACPC,KAAM,GACNC,KAAM,KAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,IAER,CACEF,MAAO,eACPC,KAAM,WACNC,KAAM,IA0CR,CACEF,MAAO,2BACPC,KAAM,cACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,YACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,gBACPE,KAAM,IAER,CACEF,MAAO,OACPE,KA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","file":"static/js/main.b6311585.chunk.js","sourcesContent":["export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pantherSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\n// const fileId = 8\r\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\n// const stringTranslationsApi = new StringTranslations({\r\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n// })\r\n\r\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n// }\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then((r) => r.json())\r\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error('ERROR')\r\n          console.error(e)\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@robustswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    // const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    // return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n    return true\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState || true\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Call, MulticallsState } from 'state/types'\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nfunction toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nconst initialState: MulticallsState = {\r\n  callResults: {}\r\n}\r\n\r\nexport const multiCallSlice = createSlice({\r\n  name: 'multicalls',\r\n  initialState,\r\n  reducers: {\r\n    addMulticallListeners: (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallsState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    },\r\n    removeMulticallListeners: (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallsState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n\r\n      if (!listeners[chainId]) return\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        if (!listeners[chainId][callKey]) return\r\n        if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n        if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n          delete listeners[chainId][callKey][blocksPerFetch]\r\n        } else {\r\n          listeners[chainId][callKey][blocksPerFetch]--\r\n        }\r\n      })\r\n    },\r\n    fetchingMulticallResults: (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    },\r\n    errorFetchingMulticallResults: (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    },\r\n    updateMulticallResults: (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach(callKey => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber\r\n        }\r\n      })\r\n    }\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addMulticallListeners, removeMulticallListeners, fetchingMulticallResults, errorFetchingMulticallResults, updateMulticallResults } = multiCallSlice.actions\r\n\r\nexport default multiCallSlice.reducer","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport multicalls from './multicalls'\r\n\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    multicalls\r\n  }\r\n})\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport { ModalProvider } from '@robustswap-libs/uikit'\r\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\r\nimport * as bsc from '@binance-chain/bsc-use-wallet'\r\nimport { Provider } from 'react-redux'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  const rpcUrl = getRpcUrl()\r\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeContextProvider>\r\n        <LanguageContextProvider>\r\n          <bsc.UseWalletProvider\r\n            chainId={chainId}\r\n            connectors={{\r\n              walletconnect: { rpcUrl },\r\n              bsc,\r\n            }}\r\n          >\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </bsc.UseWalletProvider>\r\n        </LanguageContextProvider>\r\n      </ThemeContextProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { RobustTheme } from '@robustswap-libs/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends RobustTheme { }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Exchange',\r\n    icon: 'TradeIcon',\r\n    href: 'https://exchange.robustswap.fi',\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: 'Referrals',\r\n    icon: 'ReferralIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: 'Audit',\r\n    icon: 'AuditIcon',\r\n    href: \"/_audit\"\r\n  },\r\n  {\r\n    label: \"Listings\",\r\n    icon: \"ListingIcon\",\r\n    items: [\r\n      {\r\n        label: \"BSCScan\",\r\n        href: \"/_bscscan\",\r\n      },\r\n      {\r\n        label: \"DappRadar\",\r\n        href: \"/_dappradar\",\r\n      },\r\n      {\r\n        label: \"Coingecko\",\r\n        href: \"/_coingecko\",\r\n      },\r\n      {\r\n        label: \"CoinMarketCap\",\r\n        href: \"/_coinmarketcap\",\r\n      },\r\n      {\r\n        label: \"LiveCoinWatch\",\r\n        href: \"/_livecoinwatch\",\r\n      },\r\n      {\r\n        label: \"Vfat\",\r\n        href: \"/_vfat\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Features\",\r\n    icon: \"FeatureIcon\",\r\n    items: [\r\n      {\r\n        label: \"Configurability\",\r\n        href: \"/_features\",\r\n      },\r\n      {\r\n        label: \"Transaction Limit\",\r\n        href: \"/_features/_trlimit\",\r\n      },\r\n      {\r\n        label: \"Transaction Tax\",\r\n        href: \"/_features/_trtax\",\r\n      },\r\n      {\r\n        label: \"Liquidity Generation\",\r\n        href: \"/_features/_liqgen\",\r\n      },\r\n      {\r\n        label: \"Reward Lockup\",\r\n        href: \"/_features/_rewlock\",\r\n      },\r\n      {\r\n        label: \"Maximum Supply\",\r\n        href: \"/_features/_maxsup\",\r\n      },\r\n      {\r\n        label: \"Automatic Burning\",\r\n        href: \"/_features/_autburn\",\r\n      },\r\n      {\r\n        label: \"Buyback and Burn\",\r\n        href: \"/_features/_buyburn\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    label: \"Charts\",\r\n    icon: \"ChartIcon\",\r\n    items: [\r\n      {\r\n        label: \"Poocoin\",\r\n        href: \"/_charts\",\r\n      },\r\n      {\r\n        label: \"DexTools\",\r\n        href: \"/_charts/_dextools\",\r\n      },\r\n      {\r\n        label: \"DexGuru\",\r\n        href: \"/_charts/_guru\",\r\n      },\r\n      {\r\n        label: \"Bogged\",\r\n        href: \"/_charts/_bogged\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"More\",\r\n    icon: \"MoreIcon\",\r\n    items: [\r\n      {\r\n        label: \"GitHub\",\r\n        href: \"/_github\",\r\n      },\r\n      {\r\n        label: \"GitBook\",\r\n        href: \"/_gitbook\",\r\n      },\r\n      {\r\n        label: \"Roadmap\",\r\n        href: \"/_roadmap\",\r\n      },\r\n      {\r\n        label: \"Voting\",\r\n        href: \"/_voting\",\r\n      },\r\n      {\r\n        label: \"Videos\",\r\n        href: \"/_videos\",\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default config\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst configtw: MenuEntry[] = [\r\n  {\r\n    label: \"\\u9996\\u9801\",\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: \"\\u4ea4\\u6613\",\r\n    icon: 'TradeIcon',\r\n    href: '/exchange',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u514c\\u63db\",\r\n    //     href: 'https://dex.robustswap.com/',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u6d41\\u52d5\\u6027\",\r\n    //     href: 'https://dex.robustswap.com/#/pool',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: \"\\u8fb2\\u5834\",\r\n    icon: 'FarmIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"\\u8cc7\\u91d1\\u6c60\",\r\n    icon: 'PoolIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"叢林\",\r\n    icon: 'JungleIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: \"\\u5f69\\u5238\",\r\n    icon: 'LotteryIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"首次豹發行\",\r\n    icon: 'IfoIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"推薦總數\",\r\n    icon: 'ReferralIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"\",\r\n  },\r\n  {\r\n    label: \"審計\",\r\n    icon: 'ShieldIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"信息\",\r\n    icon: 'InfoIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u6982\\u89bd\",\r\n    //     href: 'https://robustswap.info',\r\n    //   },\r\n    //   {\r\n    //     label: \"代幣\",\r\n    //     href: 'https://robustswap.info/tokens',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u4ee3\\u5e63\",\r\n    //     href: 'https://robustswap.info/pairs',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u5e33\\u6236\",\r\n    //     href: 'https://robustswap.info/accounts',\r\n    //   },\r\n    // ],\r\n  },\r\n  // {\r\n  //   label: \"產品\",\r\n  //   icon: 'FeatureIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: \"自動流動性\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-liquidity',\r\n  //     },\r\n  //     {\r\n  //       label: \"自動燃燒\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-burning',\r\n  //     },\r\n  //     {\r\n  //       label: \"收穫鎖定\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/harvest-lockup',\r\n  //     },\r\n  //     {\r\n  //       label: \"反鯨魚\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/anti-whale',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: \"商品清單\",\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'DappRadar',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'LiveCoinWatch',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'Vfat',\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'NFT',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/nft',\r\n  // },\r\n  {\r\n    label: \"\\u66f4\\u591a\",\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6587\\u4ef6\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"發行計畫\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u7db2\\u8a8c\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6295\\u7968\",\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default configtw\r\n","import { MenuEntry } from '@robustswap-libs/uikit'\r\n\r\nconst configcn: MenuEntry[] = [\r\n  {\r\n    label: \"\\u9996\\u9875\",\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: \"\\u4ea4\\u6613\",\r\n    icon: 'TradeIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u5151\\u6362\",\r\n    //     href: '',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u6d41\\u52a8\\u6027\",\r\n    //     href: '',\r\n    //   },\r\n    // ],\r\n  },\r\n  {\r\n    label: \"\\u519c\\u573a\",\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: \"\\u8d44\\u91d1\\u6c60\",\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: \"丛林\",\r\n    icon: 'JungleIcon',\r\n    href: '/jungles',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"\\u5f69\\u7968\",\r\n    icon: 'LotteryIcon',\r\n    href: '/lottery',\r\n  },\r\n  {\r\n    label: \"首次豹发行\",\r\n    icon: 'IfoIcon',\r\n    href: '/ipo',\r\n  },\r\n  {\r\n    label: \"推荐总数\",\r\n    icon: 'ReferralIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: \"Divider\",\r\n    icon: \"\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"审计\",\r\n    icon: 'ShieldIcon',\r\n    href: '',\r\n  },\r\n  {\r\n    label: \"信息\",\r\n    icon: 'InfoIcon',\r\n    href: '',\r\n    // items: [\r\n    //   {\r\n    //     label: \"\\u6982\\u89c8\",\r\n    //     href: 'https://robustswap.info',\r\n    //   },\r\n    //   {\r\n    //     label: \"代币\",\r\n    //     href: 'https://robustswap.info/tokens',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u4ee3\\u5e01\",\r\n    //     href: 'https://robustswap.info/pairs',\r\n    //   },\r\n    //   {\r\n    //     label: \"\\u8d26\\u6237\",\r\n    //     href: 'https://robustswap.info/accounts',\r\n    //   },\r\n    // ],\r\n  },\r\n  // {\r\n  //   label: \"产品\",\r\n  //   icon: 'FeatureIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: \"自动流动性\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-liquidity',\r\n  //     },\r\n  //     {\r\n  //       label: \"自动燃烧\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/automatic-burning',\r\n  //     },\r\n  //     {\r\n  //       label: \"收获锁定\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/harvest-lockup',\r\n  //     },\r\n  //     {\r\n  //       label: \"反鲸鱼\",\r\n  //       href: 'https://docs.robustswap.com/tokenomics/anti-whale',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: \"商品清单\",\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'DappRadar',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'LiveCoinWatch',\r\n        href: '',\r\n      },\r\n      {\r\n        label: 'Vfat',\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'NFT',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/nft',\r\n  // },\r\n  {\r\n    label: \"\\u66f4\\u591a\",\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6587\\u6863\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"发行计画\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u535a\\u5ba2\",\r\n        href: '',\r\n      },\r\n      {\r\n        label: \"\\u6295\\u7968\",\r\n        href: '',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default configcn\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { Menu as UikitMenu } from '@robustswap-libs/uikit'\r\nimport config from './config'\r\nimport configtw from './configtw'\r\nimport configcn from './configcn'\r\nimport { getCakeAddress } from '../../utils/addressHelpers'\r\n\r\nconst Menu = (props) => {\r\n  const { connect, reset } = useWallet()\r\n  const { account } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  let links = config;\r\n  if (selectedLanguage.code === 'zh-CN') {\r\n    links = configcn;\r\n  }\r\n  else if (selectedLanguage.code === 'zh-TW') {\r\n    links = configtw;\r\n  }\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      cakePriceLink={`https://bscscan.com/token/${getCakeAddress()}`}\r\n      links={links}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@robustswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n\r\n  const cakePriceUsdString = cakePriceUsd.eq(0)\r\n    ? ''\r\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 3,\r\n      maximumFractionDigits: 3,\r\n    })} - `\r\n\r\n  useEffect(() => {\r\n    document.title = `RobustSwap`\r\n  }, [cakePriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\n\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Exchange = lazy(() => import('./views/Exchange'))\r\nconst Liquidity = lazy(() => import('./views/Exchange/Liquidity'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Nft = lazy(() => import('./views/Nft'))\r\nconst Referrals = lazy(() => import('./views/Referrals'))\r\nconst Account = lazy(() => import('./views/Account'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { connect } = useWallet()\r\n  const { account } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/exchange/liquidity\">\r\n              <Liquidity />\r\n            </Route>\r\n            <Route path=\"/exchange\">\r\n              <Exchange />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            <Route path=\"/referrals\" exact>\r\n              <Referrals />\r\n            </Route>\r\n            {/* <Route path=\"/pools\"> */}\r\n            {/*  <Pools /> */}\r\n            {/* </Route> */}\r\n            <Route path=\"/ipo\">\r\n              <Exchange />\r\n            </Route>\r\n            <Route path=\"/account\">\r\n              <Account />\r\n            </Route>\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from '@material-ui/core/styles'\r\nimport Providers from './Providers'\r\nimport App from './App'\r\nimport Mode from './style/theme.json'\r\nimport \"./assets/css/font.css\"\r\n\r\ninterface MuiThemeProviderProps {\r\n  children: any\r\n}\r\n\r\nconst MuiThemeProvider = ({ children }: MuiThemeProviderProps) => {\r\n  const themeMode = 'dark';\r\n  const theme = createMuiTheme((Mode as any)[themeMode]);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <MuiThemeProvider>\r\n        <CssBaseline />\r\n        <App />\r\n      </MuiThemeProvider>\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import Hashids from 'hashids'\r\nimport Web3 from 'web3'\r\nimport { getCakeAddress } from './addressHelpers'\r\n\r\nconst hashids = new Hashids(getCakeAddress(), 0, '0123456789abcdefghijklmnopqrstuvwxyz')\r\n\r\nexport const accountToReferralCode = (account: string) => {\r\n  return account ? hashids.encodeHex(account.substring(2)) : null\r\n}\r\n\r\nexport const referralCodeToAccount = (referralCode: string) => {\r\n  const hex = hashids.decodeHex(referralCode)\r\n  if (Web3.utils.isAddress(hex)) {\r\n    return Web3.utils.toChecksumAddress(hex)\r\n  }\r\n\r\n  return null\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\nimport useParsedQueryString from '../hooks/useParsedQueryString'\r\nimport { referralCodeToAccount } from '../utils/referralCode'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    // dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    nextHarvestUntil: farm.userData ? farm.userData.nextHarvestUntil : 0,\r\n    canHarvest: farm.userData ? farm.userData.canHarvest : false,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\n// export const usePoolFromPid = (sousId): Pool => {\r\n//   const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n//   return pool\r\n// }\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 2 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  // const pid = 1 // CAKE-BNB LP\r\n  // const bnbPriceUSD = usePriceBnbBusd()\r\n  // const farm = useFarmFromPid(pid)\r\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n  const pid = 16 // PANTHER-BUSD PANTHER-LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBnb = (): BigNumber => {\r\n  const pid = 20 // ETH-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBusd = (): BigNumber => {\r\n  const ethBnbPrice = usePriceEthBnb()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  return ethBnbPrice && bnbPrice ? ethBnbPrice.times(bnbPrice) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken && !new BigNumber(farm.lpTotalInQuoteToken).isNaN()) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n        val = ethPrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport const useReferralCode = (): string => {\r\n  const parsedQs = useParsedQueryString()\r\n  const referralCode = typeof parsedQs.ref === 'string' ? parsedQs.ref : ''\r\n  const account = referralCodeToAccount(referralCode)\r\n  const isValid = referralCode && account\r\n  // console.log(referralCode, account, isValid)\r\n\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      try {\r\n        Cookies.set('referral_code', referralCode, {\r\n          path: '/',\r\n          expires: 365,\r\n        })\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }, [isValid, referralCode])\r\n\r\n  return isValid ? referralCode : null\r\n}\r\n\r\nexport const useReferrerAddressFromCookie = (): string => {\r\n  const referralCode = Cookies.get('referral_code')\r\n  const account = referralCodeToAccount(referralCode)\r\n  const zeroAddress = '0x0000000000000000000000000000000000000000'\r\n  return typeof account === 'string' ? account : zeroAddress\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nexport { getWeb3, getContract, httpProvider }\r\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'ETH' = 'ETH',\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  stakingTokenName: string\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  tokenDecimals: number\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount\r\n      let lpTotalInQuoteToken\r\n      let tokenPriceVsQuote\r\n      if (farmConfig.isTokenOnly) {\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\r\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\r\n          tokenPriceVsQuote = new BigNumber(1)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\r\n      } else {\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(18))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        if (tokenAmount.comparedTo(0) > 0) {\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n          // In case the pair created without adding liquidity\r\n          tokenPriceVsQuote = tokenPriceVsQuote.isNaN() ? new BigNumber(0.1) : tokenPriceVsQuote\r\n        }\r\n      }\r\n\r\n      const [info, totalAllocPoint, pantherPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'pantherPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount,\r\n        lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n        quoteTokenBlanceLP: new BigNumber(quoteTokenBlanceLP).toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        poolWeight: poolWeight.toNumber(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n        harvestInterval: info.harvestInterval.toNumber(),\r\n        pantherPerBlock: new BigNumber(pantherPerBlock).toNumber(),\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  console.log(\"rawLP:\", rawLpAllowances)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => ({\r\n    stakedBalance: new BigNumber(stakedBalance[0]._hex).toJSON(),\r\n    nextHarvestUntil: stakedBalance.nextHarvestUntil.toNumber(),\r\n  }))\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingPanther',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n\r\nexport const fetchFarmUserCanHarvest = async (account: string) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'canHarvest',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawResults = await multicall(masterchefABI, calls)\r\n  return rawResults.map((canHarvest) => {\r\n    return !!canHarvest[0]\r\n  })\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n  fetchFarmUserCanHarvest,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n  const userFarmCanHarvest = await fetchFarmUserCanHarvest(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index].stakedBalance,\r\n      nextHarvestUntil: userStakedBalances[index].nextHarvestUntil,\r\n      canHarvest: userFarmCanHarvest[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","export default {\r\n  cake: {\r\n    56: '0xd7cc483c9e04d861f3DF35A899765Eace1Bbe379',\r\n    97: '',\r\n  },\r\n  masterChef: {\r\n    56: '0x97548842D1cAB4b2299FEcb2A99ad31cb1877CAa',\r\n    97: '',\r\n  },\r\n  sousChef: {\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n    97: '',\r\n  },\r\n  referral: {\r\n    56: '0x20BF6eF7D765D5485CD52a981554b42A9B375058',\r\n    97: '',\r\n  },\r\n  wbnb: {\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    97: '',\r\n  },\r\n  lottery: {\r\n    56: '0xd75dc5a09bcfe4c508e2aa3320188c0742ee717a',\r\n    97: '',\r\n  },\r\n  lotteryNFT: {\r\n    56: '0x983c4fb762e6136a609431d4a93187c6f6ab886f',\r\n    97: '',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    97: '',\r\n  },\r\n  eth: {\r\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    97: '',\r\n  },\r\n  cakeRouter: {\r\n    56: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\r\n    97: '',\r\n  },\r\n  cakeFactory: {\r\n    56: '0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73',\r\n    97: '',\r\n  }\r\n}\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 24px;\r\n    margin-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  margin:0px;\r\n  margin-bottom:0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import addresses from 'config/constants/contracts'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n\r\nexport const getReferralAddress = () => {\r\n  return addresses.referral[chainId]\r\n}\r\n\r\nexport const getCakeRouterAddress = () => {\r\n  return addresses.cakeRouter[chainId]\r\n}","import { PoolCategory, PoolConfig } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 1,\r\n    tokenName: 'WBNB',\r\n    stakingTokenName: 'PANTHER',\r\n    stakingTokenAddress: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b5ed7b0f8bf5d2b485352e15a416092ca741c2c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://binance.org/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0005',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n  {\r\n    sousId: 2,\r\n    tokenName: 'BUSD',\r\n    stakingTokenName: 'PANTHER',\r\n    stakingTokenAddress: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf31cbe0b2bb2e704310c90a6f74300b3d4627ce8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.3',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\n// const farms: FarmConfig[] = [\r\n//   {\r\n//     pid: 16,\r\n//     lpSymbol: 'PANTHER-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9287f5ad55d7ee8eae90b865718eb9a7cf3fb71a',\r\n//     },\r\n//     tokenSymbol: 'PANTHER',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 17,\r\n//     lpSymbol: 'PANTHER-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc24ad5197daefd97df28c70acbdf17d9ff92a49b',\r\n//     },\r\n//     tokenSymbol: 'PANTHER',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 18,\r\n//     lpSymbol: 'BNB-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6af4c4433474b2f8ba385ad62b23299c82846783',\r\n//     },\r\n//     tokenSymbol: 'BNB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 19,\r\n//     lpSymbol: 'BTCB-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9e78cea62cd4df80520912a137c0778fe8a34186',\r\n//     },\r\n//     tokenSymbol: 'BTCB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 20,\r\n//     lpSymbol: 'ETH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x542b077f6a06b488a31b8c8b31e456f2b3984989',\r\n//     },\r\n//     tokenSymbol: 'ETH',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 21,\r\n//     lpSymbol: 'DOT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbf72e6296acecb9916a8fddafadfbd77a46744bd',\r\n//     },\r\n//     tokenSymbol: 'DOT',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 22,\r\n//     lpSymbol: 'USDT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x26782a2669d32be87c892ada10aa630d0834b3c4',\r\n//     },\r\n//     tokenSymbol: 'USDT',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x55d398326f99059ff775485246999027b3197955',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 23,\r\n//     lpSymbol: 'CAKE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbe63f8cdcf2c7cc509ebb18742d3866f0c3bc2b4',\r\n//     },\r\n//     tokenSymbol: 'CAKE',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 24,\r\n//     lpSymbol: 'USDC-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9c58fdabd7e41e1a2bfc5b7b8b8b6ff248d8aa66',\r\n//     },\r\n//     tokenSymbol: 'USDC',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 25,\r\n//     lpSymbol: 'USDT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7ec7702d1e65c84470720563175a20c2fc03a72d',\r\n//     },\r\n//     tokenSymbol: 'USDT',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x55d398326f99059ff775485246999027b3197955',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 26,\r\n//     lpSymbol: 'BTCB-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1ffd9f2190b82537e4e0e0c5ac55588e24485889',\r\n//     },\r\n//     tokenSymbol: 'BTCB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 27,\r\n//     lpSymbol: 'UNI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe5cfe5bfec85b60acd529d1b214465330cfe4c7f',\r\n//     },\r\n//     tokenSymbol: 'UNI',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 28,\r\n//     lpSymbol: 'XRP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd0288ad5941495720d46e82c11a40788fd7e0d8d',\r\n//     },\r\n//     tokenSymbol: 'XRP',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 29,\r\n//     lpSymbol: 'DAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x722ba2b93c7a27e047a295a1f6b090e4db416d8b',\r\n//     },\r\n//     tokenSymbol: 'DAI',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 30,\r\n//     lpSymbol: 'VAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8b2acb68c305a6e68f2de034297cd91f51a0a2c8',\r\n//     },\r\n//     tokenSymbol: 'VAI',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 31,\r\n//     lpSymbol: 'ADA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf5e93dacc1f92323ecf55adb3f7b7d892c92866d',\r\n//     },\r\n//     tokenSymbol: 'ADA',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 32,\r\n//     lpSymbol: 'DOGE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x642454810ae790c716a87e81f3adb6913f2d4bc0',\r\n//     },\r\n//     tokenSymbol: 'DOGE',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 33,\r\n//     lpSymbol: 'LINK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbb69899353775e960476d389cde9438a155249b4',\r\n//     },\r\n//     tokenSymbol: 'LINK',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 34,\r\n//     lpSymbol: 'LTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdf9190aa9b80afbe798ef316c0216d12bdb2c416',\r\n//     },\r\n//     tokenSymbol: 'LTC',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 35,\r\n//     lpSymbol: 'UST-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8a2dad69d63e91a41634494385a565c57cda837e',\r\n//     },\r\n//     tokenSymbol: 'UST',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 36,\r\n//     lpSymbol: 'SHARK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1fd789fa513871cb89aa655f11ec777cad1784a0',\r\n//     },\r\n//     tokenSymbol: 'SHARK',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xf7321385a461c4490d5526d83e63c366b149cb15',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 37,\r\n//     lpSymbol: 'SHARK-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xea0d470d4af27123ca870c70cf41853a6e6e8313',\r\n//     },\r\n//     tokenSymbol: 'SHARK',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xf7321385a461c4490d5526d83e63c366b149cb15',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 38,\r\n//     lpSymbol: 'TRX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc31f3477a0a1e4ea16d86df9550d3883e68421de',\r\n//     },\r\n//     tokenSymbol: 'TRX',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 39,\r\n//     lpSymbol: 'XVS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6540af5891b255bdec2be61f049052bec4f875ce',\r\n//     },\r\n//     tokenSymbol: 'XVS',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 40,\r\n//     lpSymbol: 'SUSHI-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf54a05746f9c59a7d88a51fa1916169afdfc6c09',\r\n//     },\r\n//     tokenSymbol: 'SUSHI',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.ETH,\r\n//     quoteTokenAdresses: contracts.eth,\r\n//   },\r\n//   {\r\n//     pid: 41,\r\n//     lpSymbol: 'BCH-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1a2edb0f3217693739911a2397aa831b010287ae',\r\n//     },\r\n//     tokenSymbol: 'BCH',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 42,\r\n//     lpSymbol: 'SXP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x317c6ffbbf9bd8cb4f027ee5d777a2ea92453666',\r\n//     },\r\n//     tokenSymbol: 'SXP',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 43,\r\n//     lpSymbol: 'TWT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6348ec6f0763d02f9387c53b6d9c55d2c3c95ae9',\r\n//     },\r\n//     tokenSymbol: 'TWT',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 0,\r\n//     lpSymbol: 'PANTHER-BUSD LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x937ced19daa8a057e7f4062e93ea4aedad730e1c',\r\n//     },\r\n//     tokenSymbol: 'PANTHER',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 1,\r\n//     lpSymbol: 'PANTHER-BNB LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xecc11a78490866e0073ebc4a4dcb6f75673c8685',\r\n//     },\r\n//     tokenSymbol: 'PANTHER',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 2,\r\n//     lpSymbol: 'BNB-BUSD LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x58f876857a02d6762e0101bb5c46a8c1ed44dc16',\r\n//     },\r\n//     tokenSymbol: 'BNB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 3,\r\n//     lpSymbol: 'BTCB-BNB LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x61eb789d75a95caa3ff50ed7e47b96c132fec082',\r\n//     },\r\n//     tokenSymbol: 'BTCB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 4,\r\n//     lpSymbol: 'ETH-BNB LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x74e4716e431f45807dcf19f284c7aa99f18a4fbc',\r\n//     },\r\n//     tokenSymbol: 'ETH',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 5,\r\n//     lpSymbol: 'DOT-BNB LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdd5bad8f8b360d76d12fda230f8baf42fe0022cf',\r\n//     },\r\n//     tokenSymbol: 'DOT',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 6,\r\n//     lpSymbol: 'USDT-BNB LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x16b9a82891338f9ba80e2d6970fdda79d1eb0dae',\r\n//     },\r\n//     tokenSymbol: 'USDT',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x55d398326f99059ff775485246999027b3197955',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   // {\r\n//   //   pid: 7,\r\n//   //   lpSymbol: 'CAKE-BUSD LP v2',\r\n//   //   lpAddresses: {\r\n//   //     97: '',\r\n//   //     56: '0x804678fa97d91b974ec2af3c843270886528a9e6',\r\n//   //   },\r\n//   //   tokenSymbol: 'CAKE',\r\n//   //   tokenAddresses: {\r\n//   //     97: '',\r\n//   //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n//   //   },\r\n//   //   quoteTokenSymbol: QuoteToken.BUSD,\r\n//   //   quoteTokenAdresses: contracts.busd,\r\n//   // },\r\n//   {\r\n//     pid: 8,\r\n//     lpSymbol: 'CAKE-BNB LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0ed7e52944161450477ee417de9cd3a859b14fd0',\r\n//     },\r\n//     tokenSymbol: 'CAKE',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BNB,\r\n//     quoteTokenAdresses: contracts.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 15,\r\n//     lpSymbol: 'USDC-BUSD LP v2',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2354ef4df11afacb85a5c7f98b624072eccddbb1',\r\n//     },\r\n//     tokenSymbol: 'USDC',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 9,\r\n//     isTokenOnly: true,\r\n//     lpSymbol: 'PANTHER',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9287f5ad55d7ee8eae90b865718eb9a7cf3fb71a', // PANTHER-BUSD LP\r\n//     },\r\n//     tokenSymbol: 'PANTHER',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 10,\r\n//     isTokenOnly: true,\r\n//     lpSymbol: 'BUSD',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9287f5ad55d7ee8eae90b865718eb9a7cf3fb71a', // PANTHER-BUSD LP (BUSD-BUSD will ignore)\r\n//     },\r\n//     tokenSymbol: 'BUSD',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 11,\r\n//     isTokenOnly: true,\r\n//     lpSymbol: 'WBNB',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x58f876857a02d6762e0101bb5c46a8c1ed44dc16', // BNB-BUSD LP\r\n//     },\r\n//     tokenSymbol: 'WBNB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 12,\r\n//     isTokenOnly: true,\r\n//     lpSymbol: 'BTCB',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf45cd219aef8618a92baa7ad848364a158a24f33', // BTCB-BUSD LP\r\n//     },\r\n//     tokenSymbol: 'BTCB',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 13,\r\n//     isTokenOnly: true,\r\n//     lpSymbol: 'ETH',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7213a321f1855cf1779f42c0cd85d3d95291d34c', // ETH-BUSD LP\r\n//     },\r\n//     tokenSymbol: 'ETH',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n//   {\r\n//     pid: 14,\r\n//     isTokenOnly: true,\r\n//     lpSymbol: 'CAKE',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x804678fa97d91b974ec2af3c843270886528a9e6', // CAKE-BUSD LP\r\n//     },\r\n//     tokenSymbol: 'CAKE',\r\n//     tokenAddresses: {\r\n//       97: '',\r\n//       56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n//     },\r\n//     quoteTokenSymbol: QuoteToken.BUSD,\r\n//     quoteTokenAdresses: contracts.busd,\r\n//   },\r\n// ]\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'RBS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9287f5ad55d7ee8eae90b865718eb9a7cf3fb71a',\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'RBS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc24ad5197daefd97df28c70acbdf17d9ff92a49b',\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'RBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6af4c4433474b2f8ba385ad62b23299c82846783',\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e78cea62cd4df80520912a137c0778fe8a34186',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x542b077f6a06b488a31b8c8b31e456f2b3984989',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbf72e6296acecb9916a8fddafadfbd77a46744bd',\r\n    },\r\n    tokenSymbol: 'DOT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x26782a2669d32be87c892ada10aa630d0834b3c4',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 23,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe63f8cdcf2c7cc509ebb18742d3866f0c3bc2b4',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 24,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9c58fdabd7e41e1a2bfc5b7b8b8b6ff248d8aa66',\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 25,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7ec7702d1e65c84470720563175a20c2fc03a72d',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 26,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1ffd9f2190b82537e4e0e0c5ac55588e24485889',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 27,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe5cfe5bfec85b60acd529d1b214465330cfe4c7f',\r\n    },\r\n    tokenSymbol: 'UNI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 28,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd0288ad5941495720d46e82c11a40788fd7e0d8d',\r\n    },\r\n    tokenSymbol: 'XRP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x722ba2b93c7a27e047a295a1f6b090e4db416d8b',\r\n    },\r\n    tokenSymbol: 'DAI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8b2acb68c305a6e68f2de034297cd91f51a0a2c8',\r\n    },\r\n    tokenSymbol: 'VAI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 31,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf5e93dacc1f92323ecf55adb3f7b7d892c92866d',\r\n    },\r\n    tokenSymbol: 'ADA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x642454810ae790c716a87e81f3adb6913f2d4bc0',\r\n    },\r\n    tokenSymbol: 'DOGE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 33,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbb69899353775e960476d389cde9438a155249b4',\r\n    },\r\n    tokenSymbol: 'LINK',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 34,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdf9190aa9b80afbe798ef316c0216d12bdb2c416',\r\n    },\r\n    tokenSymbol: 'LTC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 35,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8a2dad69d63e91a41634494385a565c57cda837e',\r\n    },\r\n    tokenSymbol: 'UST',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 36,\r\n    lpSymbol: 'SHARK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1fd789fa513871cb89aa655f11ec777cad1784a0',\r\n    },\r\n    tokenSymbol: 'SHARK',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xf7321385a461c4490d5526d83e63c366b149cb15',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 37,\r\n    lpSymbol: 'SHARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xea0d470d4af27123ca870c70cf41853a6e6e8313',\r\n    },\r\n    tokenSymbol: 'SHARK',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xf7321385a461c4490d5526d83e63c366b149cb15',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 38,\r\n    lpSymbol: 'TRX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc31f3477a0a1e4ea16d86df9550d3883e68421de',\r\n    },\r\n    tokenSymbol: 'TRX',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 39,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6540af5891b255bdec2be61f049052bec4f875ce',\r\n    },\r\n    tokenSymbol: 'XVS',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 40,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf54a05746f9c59a7d88a51fa1916169afdfc6c09',\r\n    },\r\n    tokenSymbol: 'SUSHI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.ETH,\r\n    quoteTokenAdresses: contracts.eth,\r\n  },\r\n  {\r\n    pid: 41,\r\n    lpSymbol: 'BCH-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1a2edb0f3217693739911a2397aa831b010287ae',\r\n    },\r\n    tokenSymbol: 'BCH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 42,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x317c6ffbbf9bd8cb4f027ee5d777a2ea92453666',\r\n    },\r\n    tokenSymbol: 'SXP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 43,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6348ec6f0763d02f9387c53b6d9c55d2c3c95ae9',\r\n    },\r\n    tokenSymbol: 'TWT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'PANTHER-BUSD LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x937ced19daa8a057e7f4062e93ea4aedad730e1c',\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'PANTHER-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xecc11a78490866e0073ebc4a4dcb6f75673c8685',\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BNB-BUSD LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58f876857a02d6762e0101bb5c46a8c1ed44dc16',\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'BTCB-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61eb789d75a95caa3ff50ed7e47b96c132fec082',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'ETH-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74e4716e431f45807dcf19f284c7aa99f18a4fbc',\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'DOT-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdd5bad8f8b360d76d12fda230f8baf42fe0022cf',\r\n    },\r\n    tokenSymbol: 'DOT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'USDT-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9ba80e2d6970fdda79d1eb0dae',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  // {\r\n  //   pid: 7,\r\n  //   lpSymbol: 'CAKE-BUSD LP v2',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x804678fa97d91b974ec2af3c843270886528a9e6',\r\n  //   },\r\n  //   tokenSymbol: 'CAKE',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BUSD,\r\n  //   quoteTokenAdresses: contracts.busd,\r\n  // },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'CAKE-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0ed7e52944161450477ee417de9cd3a859b14fd0',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'USDC-BUSD LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4df11afacb85a5c7f98b624072eccddbb1',\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 9,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'RBS',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9287f5ad55d7ee8eae90b865718eb9a7cf3fb71a', // PANTHER-BUSD LP\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xb04A88fCBB482c4954E3f5BC789d161f0ED0e042',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 10,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'RBT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9287f5ad55d7ee8eae90b865718eb9a7cf3fb71a', // PANTHER-BUSD LP (BUSD-BUSD will ignore)\r\n    },\r\n    tokenSymbol: 'BUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 11,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BNB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58f876857a02d6762e0101bb5c46a8c1ed44dc16', // BNB-BUSD LP\r\n    },\r\n    tokenSymbol: 'WBNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 12,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BTC',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33', // BTCB-BUSD LP\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 13,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'ETH',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7213a321f1855cf1779f42c0cd85d3d95291d34c', // ETH-BUSD LP\r\n    },\r\n    tokenSymbol: 'ETH',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 14,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91b974ec2af3c843270886528a9e6', // CAKE-BUSD LP\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n]\r\n\r\nexport default farms\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsExtraConfigs = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n  const callsPoolLimitPerUser = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'poolLimitPerUser',\r\n    }\r\n  })\r\n  const callsWithdrawalInterval = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'withdrawalInterval',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n  const limits = await multicall(sousChefABI, callsPoolLimitPerUser)\r\n  const intervals = await multicall(sousChefABI, callsWithdrawalInterval)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    const limit = limits[index]\r\n    const interval = intervals[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n      poolLimitPerUser: new BigNumber(limit).toJSON(),\r\n      withdrawalInterval: new BigNumber(interval).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsExtraConfigs, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const extraConfigs = await fetchPoolsExtraConfigs()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const extraConfig = extraConfigs.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...extraConfig,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  console.log(\"getBNB:\", account, ' ', stakingTokenBalances)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId].stakedBalance,\r\n    nextWithdrawalUntil: stakedBalances[pool.sousId].nextWithdrawalUntil,\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId].stakedBalance }))\r\n  dispatch(\r\n    updatePoolsUserData({ sousId, field: 'userWithdrawalUntil', value: stakedBalances[sousId].userWithdrawalUntil }),\r\n  )\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchWbnbBalance = async (account) => {\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  return bnbBalance\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: {\r\n        stakedBalance: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n        nextWithdrawalUntil: new BigNumber(userInfo[index].nextWithdrawalUntil._hex).toJSON(),\r\n      },\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return {\r\n    ...stakedBalances,\r\n    0: {\r\n      stakedBalance: new BigNumber(masterPoolAmount).toJSON(),\r\n      nextWithdrawalUntil: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingPanther('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n"],"sourceRoot":""}