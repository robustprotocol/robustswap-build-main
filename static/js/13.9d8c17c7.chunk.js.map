{"version":3,"sources":["components/UnlockButton.tsx","utils/callHelpers.ts","hooks/useHarvest.ts","utils/wallet.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/HarvestCountdownModal.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/getLiquidityUrlPathParts.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmList/StakeAction.tsx","views/Farms/components/FarmList/HarvestAction.tsx","views/Farms/components/FarmList/CardActionsContainer.tsx","views/Farms/components/FarmList/MobileHarvestAction.tsx","views/Farms/components/FarmList/MobileCardActionsContainer.tsx","views/Farms/components/FarmList/DetailsSection.tsx","views/Farms/components/FarmList/CardHeading.tsx","views/Farms/components/FarmList/ApyCalculatorModal.tsx","views/Farms/components/FarmList/ApyButton.tsx","views/Farms/components/FarmList/FarmList.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["UnlockButton","props","useWallet","connect","reset","onPresentConnectModal","useWalletModal","self","text","title","variant","onClick","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","referrer","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useHarvest","farmPid","dispatch","useDispatch","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","registerToken","tokenAddress","tokenSymbol","tokenDecimals","tokenImage","window","ethereum","request","method","params","type","symbol","decimals","image","tokenAdded","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","formatTimePeriodCountdown","periods","FlexLayout","styled","div","isMobile","Wrapper","viewMode","theme","colors","primary","ExpandableSectionButton","expanded","marginBottom","TranslateString","useI18n","role","style","color","fontSize","marginLeft","defaultProps","PopoverContainer","show","card","transparentize","textSubtle","ReferenceElement","Arrow","Popover","content","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","current","tick","id","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","mode","rest","width","DropDownList","display","marginRight","height","marginTop","QuestionWrapper","invertedContrast","QuestionHelper","wth","hgh","setShow","open","close","onMouseEnter","onMouseLeave","Block","StyledLinkExternal","LinkExternal","DetailsSection","cakePrice","lpLabel","depositFee","harvestInterval","tokenMode","stakedTokenPriceUSD","bscScanAddress","pairinfo","addLiquidityUrl","useFarmUser","allowance","stakedBalance","isGreaterThan","replace","classes","canHarvest","earnings","useStyles","chart","registerNativeToken","justifyContent","href","alignItems","toLocaleString","metamaskButton","borderRadius","border","fontWeight","padding","background","src","alt","Flex","CardHeading","primaryToken","secondToken","textAlign","paddingLeft","auto","indexOf","useApprove","onApprove","useStake","useReferrerAddressFromCookie","handleStake","console","log","info","onStake","useUnstake","handleUnstake","onUnstake","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","radii","default","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","max","lineHeight","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","onSelectMax","depositFeeBP","includes","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","disabled","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","getBalanceNumber","stakedBalanceUSD","displayBalance","useModal","onPresentDeposit","onPresentWithdraw","mt","minWidth","mr","BalanceAndCompound","HarvestAction","cardMode","rawEarningsBalance","earningBalanceUSD","mb","opacity","HarvestCountdownModal","nextHarvestUntil","farm","secondsUntilHarvest","timeUntil","bold","isTokenOnly","lpSymbol","Action","StyledIconButton","IconButton","warning","tada","keyframes","TadaAlarmIcon","AlarmIcon","CardActions","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","tokenAddresses","lpAddress","process","lpName","toUpperCase","isApproved","getContract","handleApprove","error","renderApprovalOrStakeButton","toNumber","as","onPresentHarvestCountdown","textTransform","pr","gt","Number","fullWidth","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","firstPart","secondPart","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","lpTotalInQuoteToken","apyAsDecimal","daysAsDecimalOfYear","principal","interestEarned","exception","round","apyModalRoi","amountEarned","amountInvested","toFixed","Grid","GridItem","Description","Text","StyledLink","Link","ApyCalculatorModal","apy","liquidityUrlPathParts","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","paddingRight","external","textDecoration","ApyButton","onPresentApyModal","ml","RainbowLight","StyledCardAccent","FCard","Divider","ExpandingWrapper","FarmCard","removed","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","earningToken","stakingToken","totalValue","QuoteToken","BNB","CAKE","ETH","totalValueFormated","isNaN","undefined","maximumFractionDigits","farmAPY","minimumFractionDigits","tokenPriceVsQuote","lpTokenPriceVsQuote","quoteTokenBlanceLP","lpTotalSupply","multiplier","CardActionsContainer","compoundRawEarningsBalance","minus","integerValue","MobileHarvestAction","StyledBlock","MobileCardActionsContainer","FList","FarmList","innerWidth","setWth","document","getElementsByClassName","clientWidth","min1","setMin1","min2","setMin2","backgroundColor","maxWidth","FarmTabButtons","stakedOnly","setStakedOnly","setViewMode","filter","setFilter","sort","setSort","useRouteMatch","url","isExact","paddingBottom","StyledButton","Cookies","set","activeIndex","to","ToggleWrapper","scale","checked","Select","event","target","IconComponent","disableUnderline","StyledMenuItem","Button","MenuItem","Hero","mediaQueries","lg","StyledHeading","Heading","PubTitle","LogTitle","LogPrice","FarmBanner","FarmBanner1","BannerText","Farms","farmsProps","path","useMedia","farmsLP","useFarms","usePriceCakeBusd","usePriceBnbBusd","usePriceEthBusd","rbtPrice","usePriceRbtBusd","fastRefresh","useRefresh","get","sortByMultiplier","item1","item2","sortByAPR","sortByLiquidity","sortByEarned","userData","activeFarms","inactiveFarms","stakedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","cakeRewardPerYear","rbsPerBlock","poolWeight","BLOCKS_PER_YEAR","comparedTo","borderRight","Page","exact"],"mappings":"yLAmBeA,IAfM,SAACC,GAGpB,MAA2BC,cAAnBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MACTC,EAA0BC,YAAeH,EAAS,MAAOC,GAAzDC,sBACFE,EAAON,EACPO,EAAOD,EAAKE,MAAQF,EAAKE,MAAQ,gBAEvC,OACE,cAAC,IAAD,yBAAQC,QAAQ,SAASC,QAASN,GAA2BJ,GAA7D,aACGO,O,6aCXMI,EAAO,uCAAG,WAAOC,EAAYC,EAAoBC,GAAvC,SAAAC,EAAA,+EACdH,EAAWI,QACfL,QAAQE,EAAmBI,QAAQC,QAASC,SAAOC,UAAUC,YAC7DC,KAAK,CAAEC,KAAMT,KAHK,2CAAH,0DAMPU,EAAK,uCAAG,WAAOX,EAAoBY,EAAKC,EAAQZ,EAASa,GAAjD,SAAAZ,EAAA,+EACZF,EAAmBG,QACvBY,QAAQH,EAAK,IAAII,IAAUH,GAAQI,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,WAAYL,GAChFL,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALK,2CAAH,8DASLC,EAAS,uCAAG,WAAOC,EAAkBX,EAAQZ,GAAjC,SAAAC,EAAA,+EAChBsB,EAAiBrB,QACrBY,QAAQ,IAAIC,IAAUH,GAAQI,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YAC/DV,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALS,2CAAH,0DASTG,EAAY,uCAAG,WAAOD,EAAkBX,EAAQZ,GAAjC,SAAAC,EAAA,+EACnBsB,EAAiBrB,QACrBY,UACAN,KAAK,CAAEC,KAAMT,EAASyB,MAAO,IAAIV,IAAUH,GAAQI,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,aACpFC,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALY,2CAAH,0DASZK,EAAO,uCAAG,WAAO3B,EAAoBY,EAAKC,EAAQZ,GAAxC,SAAAC,EAAA,+EACdF,EAAmBG,QACvByB,SAAShB,EAAK,IAAII,IAAUH,GAAQI,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YACrEV,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,4DASPO,EAAW,uCAAG,WAAOL,EAAkBX,EAAQZ,GAAjC,SAAAC,EAAA,yDAEgB,+CAArCsB,EAAiBpB,QAAQC,QAFJ,yCAGhBmB,EAAiBrB,QACrB2B,oBACArB,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAPS,UAUgB,+CAArCE,EAAiBpB,QAAQC,QAVJ,yCAWhBmB,EAAiBrB,QACrB2B,oBACArB,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAfS,gCAkBlBE,EAAiBrB,QACrByB,SAAS,IAAIZ,IAAUH,GAAQI,MAAM,IAAID,IAAU,IAAIE,IAAI,KAAKC,YAChEV,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAtBW,2CAAH,0DA0BXS,EAAmB,uCAAG,WAAOP,EAAkBX,EAAQZ,GAAjC,SAAAC,EAAA,+EAC1BsB,EAAiBrB,QACrB2B,oBACArB,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALmB,2CAAH,0DASnBU,EAAO,uCAAG,WAAOhC,EAAoBY,EAAKX,GAAhC,SAAAC,EAAA,+EACdF,EAAmBG,QACvBY,QAAQH,EAAK,IAAK,8CAClBH,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,0DASPW,EAAY,uCAAG,WAAOT,EAAkBvB,GAAzB,SAAAC,EAAA,+EACnBsB,EAAiBrB,QACrBY,QAAQ,KACRN,KAAK,CAAEC,KAAMT,IACbmB,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALY,2CAAH,wDASZY,EAAe,uCAAG,WAAOV,EAAkBvB,GAAzB,SAAAC,EAAA,+EACtBsB,EAAiBrB,QACrBY,UACAN,KAAK,CAAEC,KAAMT,EAASyB,MAAO,IAAIV,IAAU,KAC3CI,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALe,2CAAH,yD,8LC3Ffa,EAAa,SAACC,GACzB,IAAMC,EAAWC,cAETrC,EAAYb,cAAZa,QACFD,EAAqBuC,cAQ3B,MAAO,CAAEC,SANaC,sBAAW,sBAAC,4BAAAvC,EAAA,sEACX8B,YAAQhC,EAAoBoC,EAASnC,GAD1B,cAC1ByC,EAD0B,OAEhCL,EAASM,YAAuB1C,IAFA,kBAGzByC,GAHyB,2CAI/B,CAACzC,EAASoC,EAAUD,EAASpC,MAKrB4C,EAAgB,SAACC,GAE5B,IAAQ5C,EAAYb,cAAZa,QACFD,EAAqBuC,cAU3B,MAAO,CAAEC,SARaC,sBAAW,sBAAC,4BAAAvC,EAAA,6DAC1B4C,EAAkBD,EAASE,QAAO,SAACC,EAAOpC,GAC9C,MAAM,GAAN,mBAAWoC,GAAX,CAAkBhB,YAAQhC,EAAoBY,EAAKX,OAClD,IAH6B,kBAKzBgD,QAAQC,IAAIJ,IALa,2CAM/B,CAAC7C,EAAS4C,EAAU7C,O,gGCeZmD,G,OAAa,uCAAG,WAC3BC,EACAC,EACAC,EACAC,GAJ2B,eAAArD,EAAA,sEAMDsD,OAAuBC,SAASC,QAAQ,CAChEC,OAAQ,oBACRC,OAAQ,CACNC,KAAM,QACNzD,QAAS,CACPC,QAAS+C,EACTU,OAAQT,EACRU,SAAUT,EACVU,MAAOT,MAdc,cAMrBU,EANqB,yBAmBpBA,GAnBoB,2CAAH,8D,uFC9CbC,EAAiB,WAC5B,MAA0CC,oBAAS,IAAIC,MAAOC,WAA9D,mBAAOC,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,qBAAU,WACR,IAIMC,EAAUC,aAAY,WAH1BH,GAAiB,SAACI,GAAD,OAAgBA,EAAa,SAGN,KAE1C,OAAO,kBAAMC,cAAcH,MAC1B,IAEIH,I,kCCfT,IACMO,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQD,EACNE,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTP,QAAS,GA8BX,OA3BIC,GAASH,IACXI,EAASC,MAAQK,KAAKC,MAAMR,EAAQH,GACpCG,GAASC,EAASC,MAAQL,GAGxBG,GAASJ,IACXK,EAASE,OAASI,KAAKC,MAAMR,EAAQJ,GACrCI,GAASC,EAASE,OAASP,GAGzBI,GAASL,IACXM,EAASG,KAAOG,KAAKC,MAAMR,EAAQL,GACnCK,GAASC,EAASG,KAAOT,GAGvBK,GAASN,IACXO,EAASI,MAAQE,KAAKC,MAAMR,EAAQN,GACpCM,GAASC,EAASI,MAAQX,GAGxBM,GA1CoB,KA2CtBC,EAASK,QAAUC,KAAKC,MAAMR,EA3CR,IA4CtBA,GA5CsB,GA4CbC,EAASK,SAGpBL,EAASF,QAAUC,EAEZC,I,kCC/CT,kCAIA,IAgBaQ,EAAU,SAACC,GACtB,IAAIC,EAAYD,EAAO1E,WAQvB,OANe,IAAX0E,EACFC,EAAY,KACHD,EAAS,KAClBC,EAAS,WAAOD,IAGXC,GAOIC,EAA4B,SAACC,GACxC,IAAMR,EAAQQ,EAAQR,MAAuB,GAAfQ,EAAQT,KACtC,MAAM,GAAN,OAAUK,EAAQJ,GAAlB,YAA4BI,EAAQI,EAAQP,SAA5C,YAAwDG,EAAQI,EAAQd,Y,gOCpB3De,EAlBIC,IAAOC,IAAV,oUAQG,qBAAGC,SAA0B,OAAS,U,8DCGnDC,EAAUH,IAAOC,IAAV,qJACA,cAAGG,SAAH,MAAmC,UAMpC,qBAAGC,MAAkBC,OAAOC,WAIlCC,EAAkE,SAAC,GAA6D,IAA3D7G,EAA0D,EAA1DA,QAAS8G,EAAiD,EAAjDA,SAAUL,EAAuC,EAAvCA,SAAUF,EAA6B,EAA7BA,SAAUQ,EAAmB,EAAnBA,aAC1GC,EAAkBC,cACxB,OACE,eAACT,EAAD,CAAS,aAAW,kCAAkCU,KAAK,SAASlH,QAAS,kBAAMA,KAAWyG,SAAUA,EAAUU,MAAO,CAAEJ,aAAcA,GAAzI,WACIR,GAAY,cAAC,IAAD,CAAMY,MAAO,CAAEC,MAAO,UAAWC,SAAU,GAAIC,WAAY,IAA3D,SACXR,EAAWE,EAAgB,IAAK,QAAUA,EAAgB,IAAK,aAEjEF,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCD,EAAwBU,aAAe,CACrCT,UAAU,GAGGD,I,MAAAA,I,oFChCf,IAAMW,EAAmBnB,IAAOC,IAAV,6OAEN,SAAChH,GAAD,OAAYA,EAAMmI,KAAO,UAAY,YACxC,SAACnI,GAAD,OAAYA,EAAMmI,KAAO,EAAI,KAG1B,qBAAGf,MAAkBC,OAAOe,OAChBC,YAAe,GAAK,YACrC,qBAAGjB,MAAkBC,OAAOiB,cAIjCC,EAAmBxB,IAAOC,IAAV,sDAIhBwB,EAAQzB,IAAOC,IAAV,6tBAyDI,SAASyB,EAAT,GAAiF,IAAD,IAA7DC,EAA6D,EAA7DA,QAASP,EAAoD,EAApDA,KAAMQ,EAA8C,EAA9CA,SAA8C,IAApCC,iBAAoC,MAAxB,OAAwB,EAC7F,EAAgD5D,mBAAgC,MAAhF,mBAAO6D,EAAP,KAAyBC,EAAzB,KACA,EAA0C9D,mBAAgC,MAA1E,mBAAO+D,EAAP,KAAsBC,EAAtB,KACA,EAAwChE,mBAAgC,MAAxE,mBAAOiE,EAAP,KAAqBC,EAArB,KACA,EAAuCC,YAAUN,EAAkBE,EAAe,CAChFH,YACAQ,SAAU,QACVC,UAAW,CACT,CAAEC,KAAM,SAAUrI,QAAS,CAAEsI,OAAQ,CAAC,EAAG,KACzC,CAAED,KAAM,QAASrI,QAAS,CAAEuI,QAASP,OALjCQ,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,WAexB,OClGa,SAAqBC,EAAsBC,GAAuC,IAAjBC,IAAgB,yDACxFC,EAAgBC,mBAGtB3E,qBAAU,WACR0E,EAAcE,QAAUL,IACvB,CAACA,IAGJvE,qBAAU,WACR,SAAS6E,IACP,IAAQD,EAAYF,EAAZE,QACJA,GACFA,IAIJ,GAAc,OAAVJ,EAAgB,CACdC,GAASI,IACb,IAAMC,EAAK5E,YAAY2E,EAAML,GAC7B,OAAO,kBAAMpE,cAAc0E,OAG5B,CAACN,EAAOC,IDyEXM,CALuB9G,uBAAY,WAC7BoG,GACFA,MAED,CAACA,IACwBvB,EAAO,IAAM,MAGvC,qCACE,cAACI,EAAD,CAAkB8B,IAAKvB,EAAvB,SAAoDH,IACpD,cAAC,IAAD,UACE,eAACT,EAAD,yBAAkBC,KAAMA,EAAMkC,IAAKrB,EAAyBnB,MAAO4B,EAAOa,QAAYX,EAAWW,QAAjG,cACG5B,EACD,cAACF,EAAD,aACE+B,UAAS,oCAAWZ,EAAWW,cAAtB,aAAW,EAAoB,gCAA/B,QAA2D,IACpED,IAAKnB,EACLrB,MAAO4B,EAAOe,OACVb,EAAWa,iB,0BEzGrBC,EAAmB1D,IAAOC,IAAV,2RAkBP,SAAS0D,EAAT,GAAyD,IAAtCnK,EAAqC,EAArCA,KAAMoK,EAA+B,EAA/BA,KAASC,EAAsB,iBACrE,OAAa,IAATD,EACK,cAAClC,EAAD,aAASC,QAAS,cAAC+B,EAAD,UAAmBlK,KAA8BqK,IAC1D,IAATD,EAEL,cAAClC,EAAD,aAASG,UAAU,MAAMF,QACvB,cAAC+B,EAAD,CAAkB5C,MAAO,CAAEgD,MAAO,QAAlC,SACE,cAACC,EAAD,OACuBF,SAL1B,EAWA,SAASE,IACd,OACE,qCACE,sBAAKjD,MAAO,CAAEkD,QAAS,QAAvB,UACE,cAAC,IAAD,CAAMlD,MAAO,CAAEE,SAAU,GAAIiD,YAAa,GAA1C,qBACA,cAAC,IAAD,CAAanD,MAAO,CAAEgD,MAAO,GAAII,OAAQ,GAAIC,UAAW,OAAQzD,aAAc,aAEhF,sBAAKI,MAAO,CAAEkD,QAAS,QAAvB,UACE,cAAC,IAAD,CAAMlD,MAAO,CAAEE,SAAU,GAAIiD,YAAa,GAA1C,2BACA,cAAC,IAAD,CAAanD,MAAO,CAAEgD,MAAO,GAAII,OAAQ,GAAIC,UAAW,OAAQzD,aAAc,aAEhF,sBAAKI,MAAO,CAAEkD,QAAS,QAAvB,UACE,cAAC,IAAD,CAAMlD,MAAO,CAAEE,SAAU,GAAIiD,YAAa,GAA1C,uBACA,cAAC,IAAD,CAAanD,MAAO,CAAEgD,MAAO,GAAII,OAAQ,GAAIC,UAAW,OAAQzD,aAAc,gBC7CtF,I,YAAM0D,GAAkBpE,IAAOC,IAAV,2VAUI,qBAAGI,MAAkBC,OAAO+D,oBAExC,qBAAGhE,MAAkBC,OAAO9G,QAQ1B,SAAS8K,GAAT,GAA6G,IAAnF9K,EAAkF,EAAlFA,KAAMoK,EAA4E,EAA5EA,KAAMW,EAAsE,EAAtEA,IAAKC,EAAiE,EAAjEA,IACxD,EAAwBvG,oBAAkB,GAA1C,mBAAOmD,EAAP,KAAaqD,EAAb,KAEMC,EAAOnI,uBAAY,kBAAMkI,GAAQ,KAAO,CAACA,IACzCE,EAAQpI,uBAAY,kBAAMkI,GAAQ,KAAQ,CAACA,IAEjD,OACE,sBAAM3D,MAAO,CAAEG,WAAY,EAAGkD,UAAW,OAAQzD,aAAc,QAA/D,SACE,cAACiD,EAAD,CAASnK,KAAMA,EAAM4H,KAAMA,EAAMwC,KAAMA,EAAvC,SACE,cAACQ,GAAD,CAAiBzK,QAAS+K,EAAME,aAAcF,EAAMG,aAAcF,EAAlE,SACE,cAAC,IAAD,CAAU7D,MAAO,CAAEgD,MAAOS,EAAKL,OAAQM,WCPjD,I,yMAAMrE,GAAUH,IAAOC,IAAV,qEAYP6E,IAPU9E,IAAOC,IAAV,kHAOCD,IAAOC,IAAV,oDAIL8E,GAAqB/E,YAAOgF,IAAPhF,CAAH,iFAiHTiF,GA1G0C,SAAC,GAYpD,EAXJC,UAWK,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,WACAC,EAQI,EARJA,gBACA3K,EAOI,EAPJA,IAEA4K,GAKI,EANJC,oBAMI,EALJD,WACAvL,EAII,EAJJA,QACAyL,EAGI,EAHJA,eACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAGA,EAAqCC,YAAYjL,GAA1BkL,GAAvB,EAAQC,cAAR,EAAuBD,WAGjB1I,GAFanD,GAAW6L,GAAaA,EAAUE,cAAc,GAE9CN,EAAeO,QAAQ,6BAA8B,KACpEpF,EAAkBC,cACxB,EAAiC+E,YAAYjL,GACvCsL,GADN,EAAQC,WAAR,EAAoBC,SACJC,IAAUC,SACpBC,EAAsB9J,sBAAW,sBAAC,sBAAAvC,EAAA,+EAE9BiD,YAAcC,EAAciI,EAAS,GAAxB,6CAA8E,SAAZA,EAAqB,MAAQA,EAA/F,SAFiB,8GAMrC,CAACA,EAASjI,IAEb,OACE,cAAC,GAAD,UACGoI,EAAY,qCACX,eAAC,IAAD,CAAMgB,eAAe,gBAArB,UACE,eAACxB,GAAD,WACE,cAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,gBACzE,cAACoE,GAAD,CAAoBwB,KAAMb,EAA1B,SACE,cAAC,IAAD,CAAM1E,SAAS,OAAOD,MAAM,UAA5B,yBAGJ,eAAC+D,GAAD,WACE,cAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,cACzE,cAACoE,GAAD,CAAoBwB,KAAMf,EAA1B,SACE,cAAC,IAAD,CAAMxE,SAAS,OAAOD,MAAM,UAA5B,uBAGJ,eAAC+D,GAAD,WACE,cAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,eACzE,cAACoE,GAAD,CAAoBwB,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAMzE,SAAS,OAAOD,MAAM,UAA5B,0BAIN,eAAC,IAAD,CAAMuF,eAAe,gBAAgBxF,MAAO,CAAEqD,UAAW,IAAzD,UACE,eAACW,GAAD,WACE,cAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,iBAC3E,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBoE,EAAa,IAApC,UAEF,eAACN,GAAD,WACE,cAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,aAE3E,cAAC,IAAD,CAAMK,SAAS,OAAf,wBAEF,eAAC8D,GAAD,WACE,eAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,OAA5D,WACInB,EAAkB,MAAMoB,iBAD5B,IAC+C9F,EAAgB,MAAO,SACpE,mCACE,cAAC2D,GAAD,CAAgB9K,KAAK,6CAA6C+K,IAAK,GAAIC,IAAK,GAAIZ,KAAM,eApCvF,OAyCX,qCACE,cAAC,IAAD,CAAM0C,eAAe,SAArB,SACE,eAAC,IAAD,CAAQ3M,QAAS0M,EAAqB7C,UAAWwC,EAAQU,eAAgB5F,MAAO,CAAEqD,UAAW,EAAGzD,aAAc,GAAIoD,MAAO,OAAQI,OAAQ,GAAIyC,aAAc,GAAIC,OAAQ,oBAAqB7F,MAAO,UAAW8F,WAAY,IAAK7F,SAAU,GAAI8F,QAAS,WAAYC,WAAY,eAA9Q,UACE,qBAAKjG,MAAO,CAAEmD,YAAa,GAAKH,MAAO,GAAIkD,IAAI,8BAA8BC,IAAI,kBADnF,UAIF,eAAC,IAAD,CAAMX,eAAe,gBAArB,UACE,eAACxB,GAAD,WACE,eAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,SAAzE,OACA,cAACoE,GAAD,CAAoBwB,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAMzE,SAAS,OAAf,uBAGJ,eAAC8D,GAAD,WACE,eAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,YAAzE,OACA,eAACoE,GAAD,CAAoBwB,KAAMf,EAA1B,UACE,cAAC,IAAD,CAAMxE,SAAS,OAAf,kBADF,UAIF,eAAC8D,GAAD,WACE,eAAC,IAAD,CAAM9D,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,OAA5D,WACInB,EAAkB,MAAMoB,iBAD5B,IAC+C9F,EAAgB,MAAO,SACpE,mCACE,cAAC2D,GAAD,CAAgB9K,KAAK,6CAA6C+K,IAAK,GAAIC,IAAK,GAAIZ,KAAM,qB,WChItGzD,GAAUH,YAAOkH,IAAPlH,CAAH,2IAwDEmH,GA/CuC,SAAC,GAA+F,IAA7FhC,EAA4F,EAA5FA,QAASC,EAAmF,EAAnFA,WAAYgC,EAAuE,EAAvEA,aAAcC,EAAyD,EAAzDA,YAAalK,EAA4C,EAA5CA,YAA4C,EAA/BqI,eAA+B,EAAfC,SAIpI,OACE,eAAC,GAAD,CAASa,eAAe,aAAaxF,MAAO,CAAEJ,aAAc,IAA5D,UACE,sBAAKI,MAAO,CAAEgD,MAAO,GAAII,OAAQ,IAAjC,UACmB,KAAhBmD,GAAsB,cAAC,IAAD,CACrBL,IAAG,wBAAmC,SAAhBK,EAAyB,MAAQA,EAApD,QACHJ,IAAKI,EACLvD,MAAO,GACPI,OAAQ,KACV,cAAC,IAAD,CACE8C,IAAG,wBAAoC,SAAjBI,EAA0B,MAAQA,EAArD,QACHH,IAAKG,EACLtD,MAAuB,KAAhBuD,EAAqB,GAAK,GACjCnD,OAAwB,KAAhBmD,EAAqB,GAAK,GAClCpG,WAAYoG,EAAc,MAAQ,MAClClD,UAAWkD,EAAc,QAAU,WAEvC,qBAAKvG,MAAO,CAAEwG,UAAW,OAAQC,YAAa,EAAGzD,MAAO,QAAxD,SACE,cAAC,IAAD,UACE,sBAAKhD,MAAO,CAAEkD,QAAS,OAAQsC,eAAgB,iBAA/C,UACE,sBAAKxF,MAAO,CAAEgD,MAAO,IAAKK,UAAWqD,KAAM9G,aAAc8G,MAAzD,UACGrC,EAAQY,QAAQ,KAAM,KACI,IAA1BZ,EAAQsC,QAAQ,MAAe,cAAC,IAAD,CAAM3G,MAAO,CAAEE,SAAU,IAAzB,yBAElB,IAAfoE,GAAoB,cAAC,IAAD,CAAO4B,IAzBrB,4BAyBuCC,IAAK9J,EAAa2G,MAAO,GAAII,OAAQ,gB,iEC7ClFwD,GAAa,SAAC7N,GACzB,IAAMsC,EAAWC,cAETrC,EAAYb,cAAZa,QACFD,EAAqBuC,eAY3B,MAAO,CAAEsL,UAVapL,sBAAW,sBAAC,4BAAAvC,EAAA,+EAEbJ,aAAQC,EAAYC,EAAoBC,GAF3B,cAExBoB,EAFwB,OAG9BgB,EAASM,YAAuB1C,IAHF,kBAIvBoB,GAJuB,0DAMvB,GANuB,yDAQ/B,CAACpB,EAASoC,EAAUtC,EAAYC,MC8BtB8N,GA9CE,SAAClN,GAChB,IAAMyB,EAAWC,cAETrC,EAAYb,cAAZa,QACFD,EAAqBuC,eACrBzB,EAAWiN,cAEXC,EAAcvL,sBAAW,uCAC7B,WAAO5B,GAAP,eAAAX,EAAA,sEACuBS,aAAMX,EAAoBY,EAAKC,EAAQZ,EAASa,GADvE,OACQ4B,EADR,OAEEuL,QAAQC,IAAI,UAAWxL,GACvBL,EAASM,YAAuB1C,IAChCgO,QAAQE,KAAKzL,GAJf,2CAD6B,sDAO7B,CAACzC,EAASoC,EAAUrC,EAAoBY,EAAKE,IAG/C,MAAO,CAAEsN,QAASJ,ICqCLK,GAlDI,SAACzN,GAClB,IAAMyB,EAAWC,cAETrC,EAAYb,cAAZa,QACFD,EAAqBuC,eAErB+L,EAAgB7L,sBAAW,uCAC/B,WAAO5B,GAAP,eAAAX,EAAA,sEACuByB,aAAQ3B,EAAoBY,EAAKC,EAAQZ,GADhE,OACQyC,EADR,OAEEL,EAASM,YAAuB1C,IAChCgO,QAAQE,KAAKzL,GAHf,2CAD+B,sDAM/B,CAACzC,EAASoC,EAAUrC,EAAoBY,IAG1C,MAAO,CAAE2N,UAAWD,ICGhBE,GAAetI,IAAOC,IAAV,iEACN,SAAChH,GAAD,OAAWA,EAAMsP,QAClB,SAACtP,GAAD,OAAWA,EAAMsP,QAGbC,GA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MAEF,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACJ,GAAD,CAAcC,KAAME,KCJvBI,GAAqB7I,IAAOC,IAAV,mIAEF,SAAChH,GAAD,OAAWA,EAAMoH,MAAMC,OAAOwI,eAM9CC,GAAoB/I,IAAOC,IAAV,iEAKR+I,GA3BgB,SAAC,GAAkB,IAAhBpH,EAAe,EAAfA,SAC1BqH,EAAIC,IAAMC,SAASC,QAAQxH,GAAUyH,OAC3C,OACE,cAACR,GAAD,UACGK,IAAMC,SAASG,IAAI1H,GAAU,SAAC2H,EAAOC,GAAR,OAC5B,qCACE,cAACT,GAAD,UAAoBQ,IACnBC,EAAIP,EAAI,GAAK,cAAC,GAAD,a,WCkBlBQ,GAAqBzJ,IAAOC,IAAV,mKAGL,SAAChH,GAAD,OAAWA,EAAMoH,MAAMqJ,MAAMC,WAM1CC,GAAc5J,IAAO6J,MAAV,kOAcFC,GAxCqB,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,aAAcC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgB1O,EAAiB,EAAjBA,MAAO2O,EAAU,EAAVA,IACjG,OACE,mCACE,eAACV,GAAD,CAAoB3I,MAAO,CAAE0F,WAAY,UAAzC,UACE,eAAC,IAAD,CAAM1F,MAAO,CAAE+F,WAAY,IAAK7F,SAAU,GAAIoJ,WAAY,OAAQ9C,UAAW,SAA7E,sBACY6C,EAAI1D,oBAEhB,sBAAK3F,MAAO,CAAEkD,QAAS,OAAQF,MAAO,QAAtC,YACKoG,GAAkBA,EACrB,cAACN,GAAD,CAAaK,YAAaA,EAAazO,MAAOA,EAAOwO,SAAUA,MAC5DD,GAAgBA,WCiCvBM,GAAmBrK,IAAOC,IAAV,4BAEhBqI,GAAetI,IAAOC,IAAV,+CACP,SAAChH,GAAD,OAAWA,EAAMoH,MAAMqI,QAAQ,MAGpC4B,GAA8BtK,IAAOC,IAAV,wEAK3BsK,GAAgBvK,IAAOC,IAAV,sNAER,SAAChH,GAAD,OAAWA,EAAMoH,MAAMC,OAAOC,WAUnCiK,GAAoBxK,IAAOyK,KAAV,0JASRC,GA1E+B,SAAC,GAAqE,IAAnEP,EAAkE,EAAlEA,IAAKvM,EAA6D,EAA7DA,OAAQoM,EAAqD,EAArDA,SAAUW,EAA2C,EAA3CA,YAAanP,EAA8B,EAA9BA,MAA8B,IAAvBoP,oBAAuB,MAAR,EAAQ,EAC3GjK,EAAkBC,cAClB9C,EAAK,wBAA+B,SAAXF,EAAoB,MAAQA,EAAhD,QACX,OACE,eAACyM,GAAD,WACE,cAAC,GAAD,CACEN,aACE,eAACO,GAAD,WACE,8BACE,cAAC,IAAD,CAAQ5Q,QAAQ,OAAO6O,KAAK,KAAK5O,QAASgR,EAA1C,SACGhK,EAAgB,IAAK,WAG1B,cAAC,GAAD,IACA,8BACE,eAAC,IAAD,YACK/C,EAAOiN,SAAS,OAAU,qBAAK7D,IAAKlJ,EAAOmJ,IAAKrJ,EAAQkG,MAAO,GAAII,OAAQ,KAC9E,cAACsG,GAAD,UAAoB5M,YAK5BoM,SAAUA,EACVC,YAAY,IACZzO,MAAOA,EACP2O,IAAKA,IAENS,EAAe,EACd,eAACL,GAAD,WACE,cAAC,IAAD,CAAMzJ,MAAO,CAAEwG,UAAW,OAAQxD,MAAO,MAAO/C,MAAO,WAAvD,SAAqEJ,EAAgB,MAAO,iBAC5F,eAAC,IAAD,CAAMG,MAAO,CAAEwG,UAAW,QAASxD,MAAO,OAA1C,UAAoD,IAAIhJ,KAAUU,GAAS,GAAGT,MAAM6P,EAAe,KAAO3P,WAAY,IAAtH,IAA4H2C,QAG9H,eAAC2M,GAAD,WACE,cAAC,IAAD,CAAMzJ,MAAO,CAAEwG,UAAW,OAAQxD,MAAO,MAAO/C,MAAO,WAAvD,SAAqEJ,EAAgB,MAAO,iBAC5F,eAAC,IAAD,CAAMG,MAAO,CAAEwG,UAAW,QAASxD,MAAO,OAA1C,UAAoD,IAAIhJ,KAAU,GAAGG,WAAY,IAAK2C,YCiBjFkN,GAlDmC,SAAC,GAAqE,IAAnEX,EAAkE,EAAlEA,IAAKY,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,UAAkD,IAAvCC,iBAAuC,MAA3B,GAA2B,MAAvBL,oBAAuB,MAAR,EAAQ,EACrH,EAAsB3M,mBAAS,IAA/B,mBAAOiN,EAAP,KAAYC,EAAZ,KACA,EAAkClN,oBAAS,GAA3C,mBAAOmN,EAAP,KAAkBC,EAAlB,KACM1K,EAAkBC,cAClB0K,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBrB,KAC5B,CAACA,IAEEsB,EAAelP,uBACnB,SAACmP,GACCP,EAAOO,EAAEC,cAAcnQ,SAEzB,CAAC2P,IAGGS,EAAkBrP,uBAAY,WAClC4O,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAO1R,MAAK,UAAKkH,EAAgB,IAAK,WAA1B,YAAwCsK,EAAxC,WAA4DD,UAAWA,EAAnF,UACE,cAAC,GAAD,CACExP,MAAO0P,EACPP,YAAaiB,EACb5B,SAAUyB,EACVtB,IAAKmB,EACL1N,OAAQqN,EACRL,aAAcA,IAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQlR,QAAQ,YAAYC,QAASqR,EAAWlK,MAAO,CAAEgD,MAAO,QAAhE,SACGnD,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEkL,SAAUT,EACVzR,QAAO,sBAAE,sBAAAK,EAAA,6DACPqR,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAMTlK,MAAO,CAAEgD,MAAO,QARlB,SAUGsH,EAAYzK,EAAgB,IAAK,WAAaA,EAAgB,IAAK,oBCK/DmL,GAjDqC,SAAC,GAAmD,IAAjDf,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWb,EAA0B,EAA1BA,IAA0B,IAArBc,iBAAqB,MAAT,GAAS,EACrG,EAAsBhN,mBAAS,IAA/B,mBAAOiN,EAAP,KAAYC,EAAZ,KACA,EAAkClN,oBAAS,GAA3C,mBAAOmN,EAAP,KAAkBC,EAAlB,KACM1K,EAAkBC,cAClB0K,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBrB,KAC5B,CAACA,IAEEsB,EAAelP,uBACnB,SAACmP,GACCP,EAAOO,EAAEC,cAAcnQ,SAEzB,CAAC2P,IAGGS,EAAkBrP,uBAAY,WAClC4O,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAO1R,MAAK,mBAAcwR,GAAaD,UAAWA,EAAlD,UACE,cAAC,GAAD,CACEL,YAAaiB,EACb5B,SAAUyB,EACVjQ,MAAO0P,EACPf,IAAKmB,EACL1N,OAAQqN,IAEV,eAAC,GAAD,WACE,cAAC,IAAD,CAAQvR,QAAQ,YAAYC,QAASqR,EAAWlK,MAAO,CAAEgD,MAAO,QAAhE,SACGnD,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEkL,SAAUT,EACVzR,QAAO,sBAAE,sBAAAK,EAAA,6DACPqR,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAMTlK,MAAO,CAAEgD,MAAO,QARlB,SAUGsH,EAAYzK,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCrCrFoL,GAAoB/L,IAAOC,IAAV,gFA8DR+L,GAvDqC,SAAC,GAO9C,IANLnG,EAMI,EANJA,cACAoG,EAKI,EALJA,aACAhB,EAII,EAJJA,UACAvQ,EAGI,EAHJA,IACAkQ,EAEI,EAFJA,aACArF,EACI,EADJA,oBAEM5E,EAAkBC,cAChBsH,EAAYN,GAASlN,GAArBwN,QACAG,EAAcF,GAAWzN,GAAzB2N,UAEF6D,EAAmBC,aAAiBtG,GACpCuG,EAAmBD,aAAiBtG,EAAc9K,MAAMwK,IACxD8G,EAAiBH,EAAiBzF,iBAExC,EAA2B6F,YACzB,cAAC,GAAD,CAAcnC,IAAK8B,EAAclB,UAAW7C,EAAS+C,UAAWA,EAAWL,aAAcA,KADpF2B,EAAP,oBAGA,EAA4BD,YAC1B,cAAC,GAAD,CAAenC,IAAKtE,EAAekF,UAAW1C,EAAW4C,UAAWA,KAD/DuB,EAAP,oBAqBA,OACE,eAAC,IAAD,CAAMlG,eAAe,gBAAgBE,WAAW,SAAS1F,MAAO,CAAEgD,MAAO,QAAzE,UACE,gCACE,cAAC,IAAD,CAAS/C,MAA4B,IAArBmL,EAAyB,eAAiB,OAA1D,SAAmEG,IAC7C,IAArBH,GACC,eAAC,IAAD,CAAMlL,SAAS,OAAOyL,GAAG,MAAM1L,MAAM,UAAUD,MAAO,CAAEwG,UAAW,QAAnE,eACK8E,EAAiB3F,uBAtBA,IAArByF,EACL,cAAC,IAAD,CAAQxS,QAAQ,SAASC,QAAS4S,EAAkBzL,MAAO,CAAE4L,SAAU,SAAvE,SACG/L,EAAgB,IAAK,WAGxB,eAACoL,GAAD,WACE,cAAC,IAAD,CAAYrS,QAAQ,WAAWC,QAAS6S,EAAmBG,GAAG,MAA9D,SACE,cAAC,IAAD,CAAW5L,MAAM,cAEnB,cAAC,IAAD,CAAYrH,QAAQ,WAAWC,QAAS4S,EAAxC,SACE,cAAC,IAAD,CAASxL,MAAM,qB,WC3CnB6L,GAAqB5M,IAAOC,IAAV,sIA6CT4M,GAtCuC,SAAC,GAA4D,IAA1D3G,EAAyD,EAAzDA,SAAUxL,EAA+C,EAA/CA,IAAKuL,EAA0C,EAA1CA,WAAYf,EAA8B,EAA9BA,UAA8B,IAAnB4H,gBAAmB,MAAR,EAAQ,EAC1GnM,EAAkBC,cACxB,EAAkC3C,oBAAS,GAA3C,mBAAOmN,EAAP,KAAkBC,EAAlB,KACQ/O,EAAaL,aAAWvB,GAAxB4B,SAEAvC,EAAYb,cAAZa,QACFgT,EAAqBZ,aAAiBjG,GACtC8G,EAAoBb,aAAiBjG,EAASnL,MAAMmK,IACpDmH,EAAiBU,EAAmBtG,iBAE1C,OACE,eAAC,IAAD,CAAMwG,GAAG,MAAM3G,eAAe,gBAAgBE,WAAW,SAAzD,UACgB,IAAbsG,GAAkB,gCACjB,cAAC,IAAD,CAAS/L,MAAOhH,GAAiC,IAAvBgT,EAA2B,eAA0B,OAA/E,SAAwFhT,EAAUsS,EAAiB,MAC3F,IAAvBU,GACC,eAAC,IAAD,CAAM/L,SAAS,OAAOyL,GAAG,MAAM1L,MAAM,UAAUD,MAAO,CAAEwG,UAAW,QAAnE,eACK0F,EAAkBvG,uBAI3B,cAACmG,GAAD,CAAoB9L,MAAO,CAAEgD,MAAOgJ,EAAW,OAAS,QAAxD,SACE,cAAC,IAAD,CACEjB,SAAiC,IAAvBkB,IAA6B9G,GAAcmF,EACrDzR,QAAO,sBAAE,sBAAAK,EAAA,6DACPqR,GAAa,GADN,SAED/O,IAFC,OAGP+O,GAAa,GAHN,2CAKTvK,MAAO,CAAE4L,SAAU,QAASQ,QAAS,MAAOnM,MAAO,QAAS+C,MAAO,QACnEpK,QAAQ,SARV,SAUGiH,EAAgB,IAAK,mB,iCCdjBwM,GA3BqD,SAAC,GAK9D,IAJLnC,EAII,EAJJA,UACAoC,EAGI,EAHJA,iBACA/H,EAEI,EAFJA,gBACAgI,EACI,EADJA,KAEM1M,EAAkBC,cAElB0M,EAAsBF,EADR5N,KAAKC,MAAMzB,eAAmB,KAE5CuP,EAAYxO,aAAeuO,EAAsB,EAAIA,EAAsB,GAEjF,OACE,eAAC,IAAD,CAAO7T,MAAOkH,EAAgB,MAAO,cAAeqK,UAAWA,EAA/D,UACE,cAAC,IAAD,CAAMwC,MAAI,EAACzM,MAAM,UAAUC,SAAS,OAAOF,MAAO,CAAEwG,UAAW,UAA/D,SACGzH,aAA0B0N,KAE7B,eAAC,IAAD,CAAMxM,MAAM,eAAe0L,GAAG,OAAO3L,MAAO,CAAEwG,UAAW,UAAzD,UACG+F,EAAKI,YAAc,OAAS,OAD/B,KACyCJ,EAAKK,YAE9C,eAAC,IAAD,CAAM3M,MAAM,eAAe0L,GAAG,MAAM3L,MAAO,CAAEwG,UAAW,UAAxD,UACG3G,EAAgB,MAAO,oBAD1B,MACkD0E,EAAkB,MAAMoB,iBAAkB,IACzF9F,EAAgB,MAAO,gBCpB1BgN,GAAS3N,IAAOC,IAAV,mDAIN2N,GAAmB5N,YAAO6N,IAAP7N,CAAH,uHAMV,qBAAGK,MAAkBC,OAAOwN,WAIlCC,GAAOC,YAAH,kaA4BJC,GAAgBjO,YAAOkO,IAAPlO,CAAH,4GACJ+N,IAkJAI,IA9IYnO,YAAOgF,IAAPhF,CAAH,iFAsB4B,SAAC,GAS9C,IARLqN,EAQI,EARJA,KACA9P,EAOI,EAPJA,SACAxD,EAMI,EANJA,QACAsL,EAKI,EALJA,gBACAE,EAII,EAJJA,oBACAL,EAGI,EAHJA,UACAI,EAEI,EAFJA,UACAI,EACI,EADJA,gBAEM/E,EAAkBC,cACxB,EAAkD3C,oBAAS,GAA3D,mBAAOmQ,EAAP,KAA0BC,EAA1B,KACA,EAAwEC,YAAejB,EAAK3S,KAApFA,EAAR,EAAQA,IAAK6T,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBf,EAA1C,EAA0CA,YAAa7C,EAAvD,EAAuDA,aACvD,EAA2FjF,YAAYjL,GAA/FkL,EAAR,EAAQA,UAAWqG,EAAnB,EAAmBA,aAAcpG,EAAjC,EAAiCA,cAAeuH,EAAhD,EAAgDA,iBAAkBnH,EAAlE,EAAkEA,WAAYC,EAA9E,EAA8EA,SAGxEuI,GAFmBtC,aAAiBtG,GACFY,iBACtB8H,EAAYG,KACxBxR,EAAesR,EAAeE,IAC9BC,EAAStB,EAAKK,SAASkB,cACvBC,EAAa9U,GAAW6L,GAAaA,EAAUE,cAAc,GAE7DjM,EAAa0R,mBAAQ,WACzB,OAAIkC,EACKqB,aAAYvR,EAAsBL,GAEpC4R,aAAYvR,EAAsBkR,KACxC,CAAClR,EAAUkR,EAAWvR,EAAcuQ,IAE/B9F,EAAcD,GAAW7N,GAAzB8N,UAEFoH,EAAgBxS,sBAAW,sBAAC,sBAAAvC,EAAA,sEAE9BqU,GAAqB,GAFS,SAGxB1G,IAHwB,OAI9B0G,GAAqB,GAJS,gDAM9BtG,QAAQiH,MAAR,MAN8B,yDAQ/B,CAACrH,IAEEsH,EAA8B,WAClC,OAAOJ,EAA0C,IAA5B5C,EAAaiD,YAAoB5J,EACpD,cAAC,IAAD,CAAMxE,MAAO,CAAEwF,eAAgB,gBAAiBE,WAAY,UAA5D,SACE,cAAC,IAAD,CAAQ9M,QAAQ,SAASyV,GAAG,IAAI5I,KAAMb,EAAiB5E,MAAO,CAAEgD,MAAO,QAAvE,SACGnD,EAAgB,IAAK,cAI1B,cAAC,GAAD,CACEkF,cAAeA,EACfoG,aAAcA,EACdhB,UAAW0D,EACXjU,IAAKA,EACLkQ,aAAcA,EACdrF,oBAAqBA,IAGvB,cAAC,IAAD,CAAMzE,MAAO,CAAEwF,eAAgB,gBAAiBE,WAAY,UAA5D,SACE,cAAC,IAAD,CAAQ9M,QAAQ,SAASmS,SAAUuC,EAAmBzU,QAASoV,EAAejO,MAAO,CAAEgD,MAAO,QAA9F,SACGnD,EAAgB,IAAK,eAM9B,EAAoC2L,YAClC,cAAC,GAAD,CAAuBc,iBAAkBA,EAAkB/H,gBAAiBA,EAAiBgI,KAAMA,KAD9F+B,EAAP,oBAIA,OACE,eAACzB,GAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM0B,cAAc,YAAYrO,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAhE,SACGJ,EAAgB,IAAK,YAExB,cAAC,IAAD,CAAM0O,cAAc,YAAYrO,SAAS,OAAOsO,GAAG,MAAMxO,MAAO,CAAEC,MAAO,WAAzE,sBAIE8E,EAAc0J,GAAG,IAAMrJ,EAASqJ,GAAG,KAAOnC,EAAmB,IAAMnH,EACnE,cAAC2H,GAAD,CAAkBjU,QAASyV,EAA2B1V,QAAQ,OAAO6O,KAAK,KAA1E,SACE,cAAC0F,GAAD,MAGF,MAGJ,cAAC,GAAD,CAAe/H,SAAUA,EAAUxL,IAAKA,EAAKuL,WAAYA,EAAYf,UAAWA,EAAW4H,SAAU,IACpGxH,EAAY,qCACX,cAAC,IAAD,UACE,cAAC,IAAD,CAAMtE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACGkL,EAAaiD,YAAc,EAAIvO,EAAgB,IAAK,gBAAkBA,EAAgB,IAAK,iBAGhG,eAAC,IAAD,CAAM2F,eAAe,gBAArB,UACG2F,EAAaiD,YAAc,EAC1B,sBAAKpO,MAAO,CAAEwG,UAAW,QAAzB,UACE,eAAC,IAAD,CAAMtG,SAAS,OAAf,UACGwK,aAAsBS,GADzB,SAGA,eAAC,IAAD,CAAMjL,SAAS,OAAf,cAAwBwO,OAAOhE,aAAsBS,IAAiB1G,EAAoB2J,iBAE5F,cAAC,IAAD,CAASpO,MAAO,CAAEqD,UAAW,GAAI+I,QAAS,KAE1CnT,EAA6BkV,IAAnB,cAACjW,GAAA,EAAD,UAGd,qCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMgI,SAAS,OAAOF,MAAO,CAAEC,MAAO,UAAWL,aAAc,GAA/D,UACGC,EAAgB,IAAK,UADxB,eAIA5G,EAAuCkV,IAA7B,cAACjW,GAAA,EAAD,CAAcyW,WAAS,YC5L9BC,GAPkB,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,mBAAoBC,EAAuC,EAAvCA,iBAAkBpB,EAAqB,EAArBA,eAElEqB,EAAiC,QAArBD,EAA6B,MAAQD,EADvCjB,IAEVoB,EAAatB,EAFHE,IAGhB,MAAM,GAAN,OAAUmB,EAAV,YAAuBC,ICHZC,GAAwC,SAAC,GAA+D,IAF/FpQ,EAEkCqQ,EAA4D,EAA5DA,aAAcC,EAA8C,EAA9CA,QAAS/K,EAAqC,EAArCA,UAAWgL,EAA0B,EAA1BA,oBAIlFC,EAAeF,EAAU,IACzBG,EAAsBJ,EAHJ,IAKlBK,EAAY,IAAOnL,EAKnBoL,EAHcD,EAAS,SAAI,EAAIF,EAPb,QAOmEC,GAGtDC,EAE/BE,EAAgD,OAAjB,OAAnBL,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBjV,YAAqB,IAAM,EAClE,OAjBoB0E,EAiBA2Q,EAAkBC,EAjBP/Q,KAAKgR,MAAe,IAAT7Q,GAAgB,KAoB/C8Q,GAAc,SAAC,GAE1B,OAF+D,EAAnCC,aAAmC,EAArBC,eACW,KACnCC,QAAQ,ICJtBC,GAAO7Q,IAAOC,IAAV,0JAOJ6Q,GAAW9Q,IAAOC,IAAV,8EAKR8Q,GAAc/Q,YAAOgR,IAAPhR,CAAH,8GAMXiR,GAAajR,YAAOkR,IAAPlR,CAAH,+CA4GDmR,GAxG+C,SAAC,GASxD,IARLnG,EAQI,EARJA,UACA7F,EAOI,EAPJA,QACAwK,EAMI,EANJA,mBACAO,EAKI,EALJA,oBACAN,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAtJ,EAEI,EAFJA,UACAkM,EACI,EADJA,IAEMzQ,EAAkBC,cAClByQ,EAAwB3B,GAAyB,CAAEC,qBAAoBC,mBAAkBpB,mBACzFyB,EAAUmB,EAAIrW,MAAM,IAAID,IAAU,MAAMoU,WACxCoC,EAAgC,IAAOpM,EAAUgK,WAEjDqC,EAA0BxB,GAAsC,CAAEC,aAAc,EAAGC,UAAS/K,YAAWgL,wBACvGsB,EAA0BzB,GAAsC,CAAEC,aAAc,EAAGC,UAAS/K,YAAWgL,wBACvGuB,EAA2B1B,GAAsC,CAAEC,aAAc,GAAIC,UAAS/K,YAAWgL,wBACzGwB,EAA4B3B,GAAsC,CAAEC,aAAc,IAAKC,UAAS/K,YAAWgL,wBAEjH,OACE,eAAC,IAAD,CAAOzW,MAAM,MAAMuR,UAAWA,EAA9B,UACE,eAAC6F,GAAD,WACE,cAACC,GAAD,CAAUhQ,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAACzM,MAAM,YAAYsO,cAAc,YAAYpC,GAAG,OAA1E,SACGtM,EAAgB,IAAK,iBAG1B,cAACmQ,GAAD,CAAUhQ,MAAO,CAAE6Q,aAAc,IAAjC,SACE,cAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAACzM,MAAM,YAAYsO,cAAc,YAAYpC,GAAG,OAA1E,SACGtM,EAAgB,IAAK,WAG1B,cAACmQ,GAAD,UACE,eAAC,IAAD,CAAM9P,SAAS,OAAOwM,MAAI,EAACzM,MAAM,YAAYsO,cAAc,YAAYpC,GAAG,OAA1E,UACGtM,EAAgB,IAAK,WADxB,cAKF,cAACmQ,GAAD,CAAUhQ,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,kBAEF,cAACsD,GAAD,CAAUhQ,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAca,EAAyBZ,eAAgBW,IADxE,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM9P,SAAS,OAAOwM,MAAI,EAA1B,SAA4B+D,MAG9B,cAACT,GAAD,CAAUhQ,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,kBAEF,cAACsD,GAAD,CAAUhQ,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAcc,EAAyBb,eAAgBW,IADxE,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM9P,SAAS,OAAOwM,MAAI,EAA1B,SAA4BgE,MAG9B,cAACV,GAAD,CAAUhQ,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,mBAEF,cAACsD,GAAD,CAAUhQ,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAce,EAA0Bd,eAAgBW,IADzE,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM9P,SAAS,OAAOwM,MAAI,EAA1B,SAA4BiE,MAG9B,cAACX,GAAD,CAAUhQ,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,yBAEF,cAACsD,GAAD,CAAUhQ,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAcgB,EAA2Bf,eAAgBW,IAD1E,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM9P,SAAS,OAAOwM,MAAI,EAA1B,SAA4BkE,SAGhC,cAACX,GAAD,CAAa/P,SAAS,OAAtB,SACGL,EACC,IACA,8IAGJ,cAAC,IAAD,CAAM2F,eAAe,SAArB,SACE,cAAC,IAAD,CAAQ5M,QAAQ,SAASoH,MAAO,CAAEgD,MAAO,QAAzC,SACE,eAACmN,GAAD,CAAYW,UAAQ,EAACrL,KAAI,+CAA0C8K,GAAyBvQ,MAAO,CAAE+Q,eAAgB,QAArH,UACGlR,EAAgB,IAAK,OADxB,IACiCwE,aC9F5B2M,GA5B6B,SAAC,GAQtC,IAPL3M,EAOI,EAPJA,QACAwK,EAMI,EANJA,mBACAO,EAKI,EALJA,oBACAN,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAtJ,EAEI,EAFJA,UACAkM,EACI,EADJA,IAEA,EAA4B9E,YAC1B,cAAC,GAAD,CACEnH,QAASA,EACTwK,mBAAoBA,EACpBO,oBAAqBA,EACrBN,iBAAkBA,EAClBpB,eAAgBA,EAChBtJ,UAAWA,EACXkM,IAAKA,KARFW,EAAP,oBAYA,OACE,cAAC,IAAD,CAAYpY,QAASoY,EAAmBrY,QAAQ,OAAO6O,KAAK,KAAKyJ,GAAG,MAApE,SACE,cAAC,IAAD,OCnBAC,GAAejE,YAAH,gLAYZkE,GAAmBlS,IAAOC,IAAV,2nBAgBPgS,IAWTE,GAAQnS,IAAOC,IAAV,yZAeLmS,GAAUpS,IAAOC,IAAV,kHAOPoS,GAAmBrS,IAAOC,IAAV,wLACV,SAAChH,GAAD,OAAYA,EAAMwH,SAAW,OAAS,SAQ5CqE,GAAQ9E,IAAOC,IAAV,+EAoMIqS,GApL2B,SAAC,GAAmF,IAAD,EAAhFjF,EAAgF,EAAhFA,KAAMkF,EAA0E,EAA1EA,QAASrN,EAAiE,EAAjEA,UAAWsN,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAAUlV,EAAkC,EAAlCA,SAAUxD,EAAwB,EAAxBA,QAASmG,EAAe,EAAfA,SACtGS,EAAkBC,cAExB,EAA0D3C,oBAAS,GAAnE,mBAAOyU,EAAP,KAA8BC,EAA9B,KAMIC,EAAevF,EAAKlQ,YACpB0V,EAAe,GAEdxF,EAAKI,cAAaoF,EAAexF,EAAKuC,kBAE3C,IAAMkD,EAAwBvH,mBAAQ,WACpC,OAAK8B,EAAK6C,oBAGN7C,EAAKuC,mBAAqBmD,IAAWC,IAChCR,EAASzX,MAAMsS,EAAK6C,qBAEzB7C,EAAKuC,mBAAqBmD,IAAWE,KAChC/N,EAAUnK,MAAMsS,EAAK6C,qBAE1B7C,EAAKuC,mBAAqBmD,IAAWG,IAChCT,EAAS1X,MAAMsS,EAAK6C,qBAEtB7C,EAAK6C,oBAXH,OAYR,CAACsC,EAAUtN,EAAWuN,EAAUpF,EAAK6C,oBAAqB7C,EAAKuC,mBAE5DuD,EAAqBL,IAAe,IAAIhY,IAAUgY,GAAYM,QAAzC,WACnB5D,OAAOsD,GAAYrM,oBAAe4M,EAAW,CAAEC,sBAAuB,KAC1E,IAGE5N,EAAkB2H,EAAKI,YACzB,GADoB,+CACyBJ,EAAKsC,mBAFtC,IACQ,YAC6DtC,EAAKmB,eAF1E,KAIVrJ,EAAUkI,EAAKI,YAAcJ,EAAKK,SAAxB,UAAsCL,EAAKK,UAErD6C,EAAsD,OAAzC,UAAAlD,EAAK6C,2BAAL,eAA0BjV,YACvCsY,EACJlG,EAAK+D,KACL/D,EAAK+D,IAAIrW,MAAM,IAAID,IAAUyV,EAAY,IAAQ,MAAMrB,WAAWzI,oBAAe4M,EAAW,CAC1FG,sBAAuB,EACvBF,sBAAuB,IAGnB3D,EAAyDtC,EAAzDsC,mBAAoBC,EAAqCvC,EAArCuC,iBAAkBpB,EAAmBnB,EAAnBmB,eAGxCjJ,EAAiCgG,mBAAQ,WAC7C,GAAI8B,EAAKI,YACP,OAAO,IAAI3S,IAAUuS,EAAKoG,mBAG5B,IAAMC,EAAsB,IAAI5Y,IAAUuS,EAAKsG,oBAAoB5Y,MAAM,GAAGkF,IAAIoN,EAAKuG,eACrF,OAAIvG,EAAKuC,mBAAqBmD,IAAWC,IAChCR,EAASzX,MAAM2Y,GAEpBrG,EAAKuC,mBAAqBmD,IAAWE,KAChC/N,EAAUnK,MAAM2Y,GAErBrG,EAAKuC,mBAAqBmD,IAAWG,IAChCT,EAAS1X,MAAM2Y,GAEjBA,IACN,CACDlB,EACAtN,EACAuN,EACApF,EAAKoG,kBACLpG,EAAKuC,iBACLvC,EAAKsG,mBACLtG,EAAKuG,cACLvG,EAAKI,cAGP,OACE,eAAC0E,GAAD,YACyB,QAArB9E,EAAKlQ,aAA8C,QAArBkQ,EAAKlQ,cAA0B,cAAC+U,GAAD,IAC/D,cAAC,GAAD,CACE/M,QAASA,EACTC,WAAYiI,EAAKzC,aACjBxD,aAAcwL,EACdvL,YAAawL,EACb1V,YAAakQ,EAAKlQ,YAClBqI,eACE6H,EAAKI,YAAL,oCACiCJ,EAAKmB,eAAeE,KADrD,oCAEiCrB,EAAKkB,YAAYG,KAEpDjJ,SACE4H,EAAKI,YAAL,wCACqCJ,EAAKmB,eAAeE,KADzD,uCAEoCrB,EAAKkB,YAAYG,QAGvD6D,GACA,eAAC,GAAD,WACE,eAAC,IAAD,CAAMvR,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,OAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOwM,MAAI,EAAC1M,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,SAAUzF,MAAO,UAAW8F,WAAY,KAAzG,SACGwG,EAAK+D,IACJ,qCACGmC,GAAoB,EADvB,IAEE,cAAC,GAAD,CACEpO,QAASA,EACTwK,mBAAoBA,EACpBO,oBAAqB7C,EAAK6C,oBAC1BN,iBAAkBA,EAClBpB,eAAgBA,EAChBtJ,UAAWA,EACXkM,IAAK/D,EAAK+D,SAId,cAAC,IAAD,CAAUlN,OAAQ,GAAIJ,MAAO,UAKrC,eAAC,GAAD,WACE,cAAC,IAAD,CAAM9C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACGoE,EAAQsC,QAAQ,MAAQ,EACvB9G,EAAgB,MAAO,aAAe,IACtCA,EAAgB,IAAK,kBAGzB,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAE+F,WAAY,QAA3C,SAAuD0L,EAA+B,EAArBY,OAGnE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMnS,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,cAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAE+F,WAAY,IAAK9F,MAAO,WAAvD,SAAqEsM,EAAKwG,gBAG5E,cAACC,GAAD,CACEzG,KAAMA,EACN9P,SAAUA,EACVxD,QAASA,EACTsL,gBAAiBgI,EAAKhI,gBACtBE,oBAAqBA,EACrBL,UAAWA,EACXI,UAAWH,EAAQsC,QAAQ,MAAQ,EACnC/B,gBAAiBA,IAEnB,cAAC,GAAD,IACA,cAAC,EAAD,CACE/L,QAAS,kBAAMgZ,GAA0BD,IACzCjS,SAAUiS,EACVtS,SAAU,EACVF,SAAUA,EACVQ,aAAa,SAEf,cAAC2R,GAAD,CAAkB5R,SAAUiS,EAA5B,SACE,cAAC,GAAD,CACExN,UAAWA,EACXC,QAASA,EACTC,WAAYiI,EAAKzC,aACjBvF,gBAAiBgI,EAAKhI,gBACtB3K,IAAK2S,EAAK3S,IACV6K,oBAAqBA,EACrBD,UAAWH,EAAQsC,QAAQ,MAAQ,EACnC1N,QAASA,EACTyL,eACE6H,EAAKI,YAAL,oCACiCJ,EAAKmB,eAAeE,KADrD,oCAEiCrB,EAAKkB,YAAYG,KAEpDjJ,SACE4H,EAAKI,YAAL,wCACqCJ,EAAKmB,eAAeE,KADzD,uCAEoCrB,EAAKkB,YAAYG,a,sBClQ3D3C,GAAoB/L,IAAOC,IAAV,gFAyER+L,GAlEqC,SAAC,GAO9C,IANLnG,EAMI,EANJA,cACAoG,EAKI,EALJA,aACAhB,EAII,EAJJA,UACAvQ,EAGI,EAHJA,IACAkQ,EAEI,EAFJA,aACArF,EACI,EADJA,oBAEM5E,EAAkBC,cAChBsH,EAAYN,GAASlN,GAArBwN,QACAG,EAAcF,GAAWzN,GAAzB2N,UAEF6D,EAAmBC,aAAiBtG,GACpCuG,EAAmBD,aAAiBtG,EAAc9K,MAAMwK,IAExDD,GADiB4G,EAAiBzF,iBACtBwE,EAAUJ,SAAS,MAErC,EAA2ByB,YACzB,cAAC,GAAD,CAAcnC,IAAK8B,EAAclB,UAAW7C,EAAS+C,UAAWA,EAAWL,aAAcA,KADpF2B,EAAP,oBAGA,EAA4BD,YAC1B,cAAC,GAAD,CAAenC,IAAKtE,EAAekF,UAAW1C,EAAW4C,UAAWA,KAD/DuB,EAAP,oBAqBA,OACE,eAAC,IAAD,CAAMlG,eAAe,gBAAgBE,WAAW,SAAhD,UAjB4B,IAArB0F,EACL,cAAC,IAAD,CAAQxS,QAAQ,SAASC,QAAS4S,EAAkBzL,MAAO,CAAE4L,SAAU,SAAvE,SACG/L,EAAgB,IAAK,WAGxB,eAAC,GAAD,WACE,cAAC,IAAD,CAAYjH,QAAQ,WAAWC,QAAS6S,EAAmBG,GAAG,MAA9D,SACE,cAAC,IAAD,CAAW5L,MAAM,cAEnB,cAAC,IAAD,CAAYrH,QAAQ,WAAWC,QAAS4S,EAAxC,SACE,cAAC,IAAD,CAASxL,MAAM,iBASnB,gCAKE,sBAAKD,MAAO,CAAEwG,UAAW,OAAQC,YAAa,IAA9C,UACE,cAAC,IAAD,CAAMvG,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACIuE,EAAoD3E,EAAgB,IAAK,aAA7DA,EAAgB,IAAK,mBAErC,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuB6E,EAAc5K,WAArC,IAAmDqK,EAAwB,KAAZ2F,KAC/D,eAAC,IAAD,CAAMjK,SAAS,OAAf,eAAyBuE,EAAoB2J,WAAarJ,EAAcqJ,YAAYzI,uBAEhE,IAArByF,GACC,eAAC,IAAD,CAAMlL,SAAS,OAAOyL,GAAG,MAAM1L,MAAM,UAAUD,MAAO,CAAEwG,UAAW,QAAnE,eACK8E,EAAiB3F,2BC5D1BmG,GAAqB5M,IAAOC,IAAV,sIAOlB8N,GAAOC,YAAH,kaA2BJC,GAAgBjO,YAAOkO,IAAPlO,CAAH,4GACJ+N,IAITH,GAAmB5N,YAAO6N,IAAP7N,CAAH,uHAMV,qBAAGK,MAAkBC,OAAOwN,WAqEzBjB,GAjEuC,SAAC,GAAsG,IAApG3G,EAAmG,EAAnGA,SAAUxL,EAAyF,EAAzFA,IAAKuL,EAAoF,EAApFA,WAAYf,EAAwE,EAAxEA,UAAWW,EAA6D,EAA7DA,cAAeuH,EAA8C,EAA9CA,iBAAkB/H,EAA4B,EAA5BA,gBAAiBgI,EAAW,EAAXA,KACzI1M,EAAkBC,cACxB,EAAkC3C,oBAAS,GAA3C,mBAAOmN,EAAP,KAAkBC,EAAlB,KACQ/O,EAAaL,aAAWvB,GAAxB4B,SAEFyQ,EAAqBZ,aAAiBjG,GACtC8G,EAAoBb,aAAiBjG,EAASnL,MAAMmK,IACpDmH,EAAiBU,EAAmBtG,iBAE1C,EAAoC6F,YAClC,cAAC,GAAD,CAAuBc,iBAAkBA,EAAkB/H,gBAAiBA,EAAiBgI,KAAMA,KAD9F+B,EAAP,oBAGA,OACE,eAAC,IAAD,CAAMnC,GAAG,MAAMzG,WAAW,SAA1B,UACE,cAAC,GAAD,UAgBE,cAAC,IAAD,CACEqF,SAAiC,IAAvBkB,IAA6B9G,GAAcmF,EACrDzR,QAAO,sBAAE,sBAAAK,EAAA,6DACPqR,GAAa,GADN,SAED/O,IAFC,OAGP+O,GAAa,GAHN,2CAKTvK,MAAO,CAAE4L,SAAU,QAAS3L,MAAO,QAASmM,QAAS,OACrDxT,QAAQ,SARV,SAUGiH,EAAgB,IAAK,eAG1B,sBAAKG,MAAO,CAAEyG,YAAa,IAA3B,UACE,cAAC,IAAD,CAAM8H,cAAc,YAAYrO,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAhE,SACGJ,EAAgB,IAAK,YAExB,cAAC,IAAD,CAASI,MAA8B,IAAvBgM,EAA2B,eAAiB,OAA5D,SAAqEV,IAC7C,IAAvBU,GACC,eAAC,IAAD,CAAM/L,SAAS,OAAOyL,GAAG,MAAM1L,MAAM,UAAUD,MAAO,CAAEwG,UAAW,QAAnE,eACK0F,EAAkBvG,wBAIzBZ,EAAc0J,GAAG,IAAMrJ,EAASqJ,GAAG,KAAOnC,EAAmB,IAAMnH,EACnE,cAAC,GAAD,CAAkBtM,QAASyV,EAA2B1V,QAAQ,OAAO6O,KAAK,KAA1E,SACE,cAAC,GAAD,MAGF,OCtHFoF,GAAS3N,IAAOC,IAAV,8HAsFGkO,GAjEqC,SAAC,GAQ9C,IAPLd,EAOI,EAPJA,KACA9P,EAMI,EANJA,SACAxD,EAKI,EALJA,QACAsL,EAII,EAJJA,gBACAE,EAGI,EAHJA,oBACAL,EAEI,EAFJA,UAGMvE,GADF,EADJ2E,UAEwB1E,eACxB,EAAkD3C,oBAAS,GAA3D,mBAAOmQ,EAAP,KAA0BC,EAA1B,KACA,EAAwEC,YAAejB,EAAK3S,KAApFA,EAAR,EAAQA,IAAK6T,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBf,EAA1C,EAA0CA,YAAa7C,EAAvD,EAAuDA,aACvD,EAA2FjF,YAAYjL,GAA/FkL,EAAR,EAAQA,UAAWqG,EAAnB,EAAmBA,aAAcpG,EAAjC,EAAiCA,cAAeuH,EAAhD,EAAgDA,iBAAkBnH,EAAlE,EAAkEA,WAAYC,EAA9E,EAA8EA,SACxEuI,EAAYF,EAAYG,IACxBxR,EAAesR,EAAeE,IAC9BC,EAAStB,EAAKK,SAASkB,cACvBC,EAAa9U,GAAW6L,GAAaA,EAAUE,cAAc,GAE7DjM,EAAa0R,mBAAQ,WACzB,OAAIkC,EACKqB,aAAYvR,EAAsBL,GAEpC4R,aAAYvR,EAAsBkR,KACxC,CAAClR,EAAUkR,EAAWvR,EAAcuQ,IAE/B9F,EAAcD,GAAW7N,GAAzB8N,UAEFoH,EAAgBxS,sBAAW,sBAAC,sBAAAvC,EAAA,sEAE9BqU,GAAqB,GAFS,SAGxB1G,IAHwB,OAI9B0G,GAAqB,GAJS,gDAM9BtG,QAAQiH,MAAR,MAN8B,yDAQ/B,CAACrH,IAqBJ,OACE,eAAC,GAAD,WACI5N,EApBG8U,EACL,cAAC,GAAD,CACEhJ,cAAeA,EACfoG,aAAcA,EACdhB,UAAW0D,EACXjU,IAAKA,EACLkQ,aAAcA,EACdrF,oBAAqBA,IAGvB,cAAC,IAAD,CAAMzE,MAAO,CAAE0F,WAAY,UAA3B,SACE,cAAC,IAAD,CAAQ9M,QAAQ,SAASmS,SAAUuC,EAAmBzU,QAASoV,EAA/D,SACGpO,EAAgB,IAAK,cAQd,cAAC3H,GAAA,EAAD,IACZ,cAAC,KAAD,CAAqB8H,MAAO,CAAEC,MAAO,aACrC,cAAC,GAAD,CAAemF,SAAUA,EAAUxL,IAAKA,EAAKuL,WAAYA,EAAYf,UAAWA,EAAWW,cAAeA,EAAeuH,iBAAkBA,EAAkB/H,gBAAiBA,EAAiBgI,KAAMA,QCtErMT,GAAqB5M,IAAOC,IAAV,sIAOlB8N,GAAOC,YAAH,kaA2BJC,GAAgBjO,YAAOkO,IAAPlO,CAAH,4GACJ+N,IAITH,GAAmB5N,YAAO6N,IAAP7N,CAAH,uHAMV,qBAAGK,MAAkBC,OAAOwN,WAuEzBjB,GAnEuC,SAAC,GAAsG,IAApG3G,EAAmG,EAAnGA,SAAUxL,EAAyF,EAAzFA,IAAKuL,EAAoF,EAApFA,WAAYf,EAAwE,EAAxEA,UAAWW,EAA6D,EAA7DA,cAAeuH,EAA8C,EAA9CA,iBAAkB/H,EAA4B,EAA5BA,gBAAiBgI,EAAW,EAAXA,KACzI1M,EAAkBC,cACxB,EAAkC3C,oBAAS,GAA3C,mBAAOmN,EAAP,KAAkBC,EAAlB,KACQ/O,EAAaL,aAAWvB,GAAxB4B,SACA4L,EAAYN,GAASlN,GAArBwN,QAEF6E,EAAqBZ,aAAiBjG,GACtC8G,EAAoBb,aAAiBjG,EAASnL,MAAMmK,IACpD6O,EAA6B5H,aAAiBjG,EAAS8N,MAAM9N,EAASnL,MAAM,KAAMkZ,iBAClF5H,EAAiBU,EAAmBtG,iBAE1C,EAAoC6F,YAClC,cAAC,GAAD,CAAuBc,iBAAkBA,EAAkB/H,gBAAiBA,EAAiBgI,KAAMA,KAD9F+B,EAAP,oBAGA,OACE,eAAC,IAAD,CAAMnC,GAAG,MAAMzG,WAAW,SAASF,eAAe,gBAAgBmG,GAAG,MAArE,UACE,sBAAK3L,MAAO,CAAEyG,YAAa,IAA3B,UACE,cAAC,IAAD,CAAM8H,cAAc,YAAYrO,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAhE,SACGJ,EAAgB,IAAK,YAExB,cAAC,IAAD,CAASI,MAA8B,IAAvBgM,EAA2B,eAAiB,OAA5D,SAAqEV,IAC7C,IAAvBU,GACC,eAAC,IAAD,CAAM/L,SAAS,OAAOyL,GAAG,MAAM1L,MAAM,UAAUD,MAAO,CAAEwG,UAAW,QAAnE,eACK0F,EAAkBvG,uBAI3B,eAAC,GAAD,WACW,IAAR/L,EACC,cAAC,IAAD,CACEmR,SAAiC,IAAvBkB,IAA6B9G,GAAcmF,EACrD7C,KAAK,KACL7O,QAAQ,YACRgH,aAAa,OACb/G,QAAO,sBAAE,sBAAAK,EAAA,6DACPqR,GAAa,GADN,SAEDnD,EAAQ6L,EAA2B9Y,YAFlC,OAGPoQ,GAAa,GAHN,2CALX,SAWG1K,EAAgB,IAAK,cAEtB,KACJ,cAAC,IAAD,CACEkL,SAAiC,IAAvBkB,IAA6B9G,GAAcmF,EACrDzR,QAAO,sBAAE,sBAAAK,EAAA,6DACPqR,GAAa,GADN,SAED/O,IAFC,OAGP+O,GAAa,GAHN,2CAKTvK,MAAO,CAAE4L,SAAU,QAASQ,QAAS,MAAOnM,MAAO,SACnDrH,QAAQ,SARV,SAUGiH,EAAgB,IAAK,iBAGxBkF,EAAc0J,GAAG,IAAMrJ,EAASqJ,GAAG,KAAOnC,EAAmB,IAAMnH,EACnE,cAAC,GAAD,CAAkBtM,QAASyV,EAA2B1V,QAAQ,OAAO6O,KAAK,KAA1E,SACE,cAAC,GAAD,MAGF,OC1HFoF,GAAS3N,IAAOC,IAAV,+FAyFGkO,GAtEqC,SAAC,GAO9C,IANLd,EAMI,EANJA,KACA9P,EAKI,EALJA,SACAxD,EAII,EAJJA,QACAsL,EAGI,EAHJA,gBACAE,EAEI,EAFJA,oBACAL,EACI,EADJA,UAEMvE,EAAkBC,cACxB,EAAkD3C,oBAAS,GAA3D,mBAAOmQ,EAAP,KAA0BC,EAA1B,KACA,EAAwEC,YAAejB,EAAK3S,KAApFA,EAAR,EAAQA,IAAK6T,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBf,EAA1C,EAA0CA,YAAa7C,EAAvD,EAAuDA,aACvD,EAA2FjF,YAAYjL,GAA/FkL,EAAR,EAAQA,UAAWqG,EAAnB,EAAmBA,aAAcpG,EAAjC,EAAiCA,cAAeuH,EAAhD,EAAgDA,iBAAkBnH,EAAlE,EAAkEA,WAAYC,EAA9E,EAA8EA,SACxEuI,EAAYF,EAAYG,IACxBxR,EAAesR,EAAeE,IAC9BC,EAAStB,EAAKK,SAASkB,cACvBC,EAAa9U,GAAW6L,GAAaA,EAAUE,cAAc,GAE7DjM,EAAa0R,mBAAQ,WACzB,OAAIkC,EACKqB,aAAYvR,EAAsBL,GAEpC4R,aAAYvR,EAAsBkR,KACxC,CAAClR,EAAUkR,EAAWvR,EAAcuQ,IAE/B9F,EAAcD,GAAW7N,GAAzB8N,UAEFoH,EAAgBxS,sBAAW,sBAAC,sBAAAvC,EAAA,sEAE9BqU,GAAqB,GAFS,SAGxB1G,IAHwB,OAI9B0G,GAAqB,GAJS,gDAM9BtG,QAAQiH,MAAR,MAN8B,yDAQ/B,CAACrH,IA4BJ,OACE,eAAC,GAAD,WACI5N,EA3BG8U,EACL,cAAC,GAAD,CACEhJ,cAAeA,EACfoG,aAAcA,EACdhB,UAAW0D,EACXjU,IAAKA,EACLkQ,aAAcA,EACdrF,oBAAqBA,IAGvB,eAAC,IAAD,CAAMzE,MAAO,CAAE0F,WAAY,UAAYF,eAAe,gBAAtD,UACE,sBAAKxF,MAAO,CAAEwG,UAAW,OAAQC,YAAa,IAA9C,UACE,cAAC,IAAD,CAAMvG,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACGJ,EAAgB,IAAK,mBAExB,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuB6N,EAAahJ,EAAgB,EAApD,UACA,eAAC,IAAD,CAAM7E,SAAS,OAAf,cAAwB6N,GAActJ,EAAoB2J,WAAarJ,EAAcqJ,YAAYzI,iBAAmB,QAEtH,cAAC,IAAD,CAAQ/M,QAAQ,SAASmS,SAAUuC,EAAmBzU,QAASoV,EAA/D,SACGpO,EAAgB,IAAK,oBAQd,cAAC3H,GAAA,EAAD,IACZ,cAACkb,GAAD,CAAqBhO,SAAUA,EAAUxL,IAAKA,EAAKuL,WAAYA,EAAYf,UAAWA,EAAWW,cAAeA,EAAeuH,iBAAkBA,EAAkB/H,gBAAiBA,EAAiBgI,KAAMA,QCzD3MlN,GAAUH,IAAOC,IAAV,sJAIO,qBAAGqF,UAA4B,OAAS,SAItD8M,GAAUpS,IAAOC,IAAV,kHAMP6E,GAAQ9E,IAAOC,IAAV,mDAILkU,GAAcnU,IAAOC,IAAV,yPAUX8E,GAAqB/E,YAAOgF,IAAPhF,CAAH,iFAkNTiF,GA3MiE,SAAC,GAc3E,EAbJE,QAaK,IAZLC,EAYI,EAZJA,WACAC,EAWI,EAXJA,gBACA3K,EAUI,EAVJA,IACA6K,EASI,EATJA,oBACA8H,EAQI,EARJA,KACA9P,EAOI,EAPJA,SACAxD,EAMI,EANJA,QACAmL,EAKI,EALJA,UACAhF,EAII,EAJJA,SACAqS,EAGI,EAHJA,QACAY,EAEI,EAFJA,mBACA7N,EACI,EADJA,UAEM3E,EAAkBC,cAChBqL,EAAiBtG,YAAYjL,GAA7BuR,aACFjG,EAAUG,IAAUC,QAEpBC,EAAsB9J,sBAAW,sBAAC,sBAAAvC,EAAA,+EAE9BiD,YAAcoQ,EAAKmB,eAHb,IAGsCnB,EAAKlQ,YAAa,GAAjD,6CAAgH,SAArBkQ,EAAKlQ,YAAyB,MAAQkQ,EAAKlQ,YAAtI,SAFiB,8GAMrC,CAACkQ,IAEE7H,EAAiB6H,EAAKI,YAAL,oCACUJ,EAAKmB,eAAeE,KAD9B,oCAEUrB,EAAKkB,YAAYG,KAE5CjJ,EAAW4H,EAAKI,YAAL,iDAC6BJ,EAAKmB,eAAeE,KADjD,gDAE4BrB,EAAKkB,YAAYG,KAExDhJ,EAAkB2H,EAAKI,YACzB,GADoB,+CACyBJ,EAAKsC,mBAlBtC,IAiBQ,YAC6DtC,EAAKmB,eAlB1E,KAoBhB,OACE,eAAC,GAAD,CAASlJ,UAAWA,EAApB,UACGpF,EACC,qCACE,eAAC,IAAD,CAAMoG,eAAe,gBAAgBE,WAAW,SAAS1F,MAAO,CAAEgG,QAAS,YAA3E,UACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAM9F,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,cAAzE,OACA,eAAC,IAAD,CAAM6F,WAAW,SAAjB,UACE,cAAC,IAAD,CAAMxF,SAAS,OAAOF,MAAO,CAAE+F,WAAY,OAAQ9F,MAAO,WAA1D,SAAwEsM,EAAKwG,aAC7E,cAACvP,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,wLAAyL4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,UAGhQ,eAAC,GAAD,WACE,eAAC,IAAD,CAAM5C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,gBAAzE,OACA,eAAC,IAAD,CAAM6F,WAAW,SAAjB,UACE,cAAC,IAAD,CAAMxF,SAAS,OAAOF,MAAO,CAAE+F,WAAY,QAA3C,SAAuD0L,EAA+B,EAArBY,IAChE7N,EACC,cAAChB,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,yCAA0C4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,IAC7G,cAACU,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,+DAA2D4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,aAKtI,eAACuQ,GAAD,WACE,eAAC,IAAD,CAAM3N,WAAW,SAASF,eAAe,gBAAzC,UACE,sBAAKxF,MAAO,CAAEG,WAAY,IAA1B,UACE,cAAC,IAAD,CAAMD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,kBACzE,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBwK,aAAsBS,GAA7C,SACA,eAAC,IAAD,CAAMjL,SAAS,OAAf,cAAwBwO,OAAOhE,aAAsBS,IAAiB1G,EAAoB2J,iBAE5F,cAAC,IAAD,CAAQxV,QAAQ,SAASyV,GAAG,IAAI5I,KAAMb,EAAtC,SACG/E,EAAgB,IAAK,eAG1B,cAACyT,GAAD,CACE/G,KAAMA,EACN9P,SAAUA,EACVxD,QAASA,EACTsL,gBAAiBA,EACjBE,oBAAqBA,EACrBL,UAAWA,UAIjB,eAAC,IAAD,CAAMsB,WAAW,SAASF,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAME,WAAW,SAAjB,WACIlB,GAAa,cAAC,IAAD,CAAQ5L,QAAQ,SAASyV,GAAG,IAAI5I,KAAMb,EAAiB5E,MAAO,CAAEmD,YAAa,IAA7E,SACZtD,EAAgB,IAAK,YAExB,8BACG2E,EACC,mCACE,eAAC,IAAD,CAAQ3L,QAAS0M,EAAqB7C,UAAWwC,EAAQU,eAAgB5F,MAAO,CAAEgD,MAAO,GAAII,OAAQ,GAAIyC,aAAc,GAAIC,OAAQ,oBAAqB7F,MAAO,UAAW8F,WAAY,IAAK7F,SAAU,GAAI8F,QAAS,WAAYC,WAAY,eAA1O,UACE,qBAAKjG,MAAO,CAAEmD,YAAa,GAAKH,MAAO,GAAIkD,IAAI,8BAA8BC,IAAI,kBADnF,UAIF,qCACE,cAAC,IAAD,CAAMjG,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,kBACzE,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBwK,aAAsBS,GAA7C,SACA,eAAC,IAAD,CAAMjL,SAAS,OAAf,cAAwBwO,OAAOhE,aAAsBS,IAAiB1G,EAAoB2J,sBAKjG5J,GAAa,qCACZ,eAAC,GAAD,WACE,eAAC,IAAD,CAAMtE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,SAAzE,OACA,cAAC,GAAD,CAAoB4F,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAMzE,SAAS,OAAf,uBAGJ,eAAC,GAAD,WACE,cAAC,IAAD,CAAMA,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,cACzE,cAAC,GAAD,CAAoB4F,KAAMf,EAA1B,SACE,cAAC,IAAD,CAAMxE,SAAS,OAAf,0BAILsE,GAAa,eAAC,GAAD,WACZ,eAAC,IAAD,CAAMtE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,OAA5D,WACInB,EAAkB,MAAMoB,iBAD5B,IAC+C9F,EAAgB,MAAO,SACpE,mCACE,cAAC2D,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,8CAA+C4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,aAItH0B,GAAa,cAAC,KAAD,CAAqBxE,MAAO,CAAEC,MAAO,aACpD,cAAC,GAAD,CACEsM,KAAMA,EACN9P,SAAUA,EACVxD,QAASA,EACTsL,gBAAiBA,EACjBE,oBAAqBA,EACrBL,UAAWA,EACXI,UAAWA,QAIfpF,IAAaoF,GAAa,cAAC,GAAD,CAASxE,MAAO,CAAEqD,UAAW,GAAIzD,aAAc,MAC1ER,EACC,cAAC,IAAD,CAAMoG,eAAe,gBAAgBxF,MAAO,CAAEgG,QAAS,YAAvD,UACIxB,GAAa,qCAAE,eAAC,GAAD,WACf,cAAC,IAAD,CAAMtE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,iBAC3E,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBoE,EAAa,IAApC,UAEA,eAAC,GAAD,WACE,cAAC,IAAD,CAAMpE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,aAE3E,cAAC,IAAD,CAAMK,SAAS,OAAf,wBAEF,eAAC,GAAD,WACE,eAAC,IAAD,CAAMA,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,OAA5D,WACInB,EAAkB,MAAMoB,iBAD5B,IAC+C9F,EAAgB,MAAO,SACpE,mCACE,cAAC2D,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,8CAA+C4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,iBAK5H,cAAC,IAAD,WACI0B,GAAa,qCACb,eAAC,GAAD,CAAOxE,MAAO,CAAE6Q,aAAc,GAAIjR,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,gBACzE,cAAC,GAAD,CAAoB4F,KAAMb,EAA1B,SACE,cAAC,IAAD,CAAM1E,SAAS,OAAOD,MAAM,UAA5B,yBAGJ,eAAC,GAAD,CAAOD,MAAO,CAAE6Q,aAAc,GAAIjR,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,cACzE,cAAC,GAAD,CAAoB4F,KAAMf,EAA1B,SACE,cAAC,IAAD,CAAMxE,SAAS,OAAOD,MAAM,UAA5B,uBAGJ,eAAC,GAAD,CAAOD,MAAO,CAAE6Q,aAAc,GAAIjR,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,eACzE,cAAC,GAAD,CAAoB4F,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAMzE,SAAS,OAAOD,MAAM,UAA5B,uBAGJ,eAAC,GAAD,CAAOD,MAAO,CAAE6Q,aAAc,GAAIjR,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,iBAC3E,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBoE,EAAa,IAApC,UAEF,eAAC,GAAD,CAAOtE,MAAO,CAAE6Q,aAAc,IAA9B,UACE,cAAC,IAAD,CAAM3Q,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,aAE3E,cAAC,IAAD,CAAMK,SAAS,OAAf,wBAEF,eAAC,GAAD,CAAOF,MAAO,CAAE6Q,aAAc,GAAIxN,WAAY,GAA9C,UACE,eAAC,IAAD,CAAMnD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,UAA5D,WACInB,EAAkB,MAAMoB,iBAD5B,IAC+C9F,EAAgB,MAAO,SACpE,mCACE,cAAC2D,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,8CAA+C4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,qBC5P9HzD,GAAUH,YAAOkH,IAAPlH,CAAH,8JAMA,qBAAGE,SAA0B,WAAa,aAgCxCiH,GA5BuC,SAAC,GAAyG,IAAvGhC,EAAsG,EAAtGA,QAASC,EAA6F,EAA7FA,WAAYgC,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,YAAalK,EAAsD,EAAtDA,YAAuC+C,GAAe,EAAzCsF,eAAyC,EAAzBC,SAAyB,EAAfvF,UACtHU,cAGxB,OACE,eAAC,GAAD,CAAS0F,eAAe,aAAapG,SAAUA,EAA/C,UACkB,IAAfkF,GAAoB,cAAC,IAAD,CAAO4B,IAJf,4BAIiCC,IAAK9J,EAAa2G,MAAO,GAAII,OAAQ,GAAID,YAAa,KACpG,sBAAKnD,MAAO,CAAEgD,MAAO,GAAII,OAAQhE,EAAW,GAAK,IAAjD,UACmB,KAAhBmH,GAAsB,cAAC,IAAD,CACrBL,IAAG,wBAAmC,SAAhBK,EAAyB,MAAQA,EAApD,QACHJ,IAAKI,EACLvD,MAAO,GACPI,OAAQ,KACV,cAAC,IAAD,CACE8C,IAAG,wBAAoC,SAAjBI,EAA0B,MAAQA,EAArD,QACHH,IAAKG,EACLtD,MAAuB,KAAhBuD,EAAqB,GAAK,GACjCnD,OAAwB,KAAhBmD,EAAqBnH,EAAW,GAAK,GAAK,GAClDe,WAAYoG,EAAc,MAAQ,MAClClD,UAAWkD,EAAc,QAAU,WAEvC,qBAAKvG,MAAO,CAAEwG,UAAW,OAAQC,YAAa,EAAGzD,MAAO,IAAKK,UAAW,IAAxE,SACE,cAAC,IAAD,CAAS8I,GAAG,MAAMnM,MAAO,CAAE+F,WAAY,KAAvC,SAA+C1B,EAAQY,QAAQ,KAAM,YC7BvE8K,GAAO7Q,IAAOC,IAAV,0JAOJ6Q,GAAW9Q,IAAOC,IAAV,8EAKR8Q,GAAc/Q,YAAOgR,IAAPhR,CAAH,8GAMXiR,GAAajR,YAAOkR,IAAPlR,CAAH,+CA4GDmR,GAxG+C,SAAC,GASxD,IARLnG,EAQI,EARJA,UACA7F,EAOI,EAPJA,QACAwK,EAMI,EANJA,mBACAO,EAKI,EALJA,oBACAN,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAtJ,EAEI,EAFJA,UACAkM,EACI,EADJA,IAEMzQ,EAAkBC,cAClByQ,EAAwB3B,GAAyB,CAAEC,qBAAoBC,mBAAkBpB,mBACzFyB,EAAUmB,EAAIrW,MAAM,IAAID,IAAU,MAAMoU,WACxCoC,EAAgC,IAAOpM,EAAUgK,WAEjDqC,EAA0BxB,GAAsC,CAAEC,aAAc,EAAGC,UAAS/K,YAAWgL,wBACvGsB,EAA0BzB,GAAsC,CAAEC,aAAc,EAAGC,UAAS/K,YAAWgL,wBACvGuB,EAA2B1B,GAAsC,CAAEC,aAAc,GAAIC,UAAS/K,YAAWgL,wBACzGwB,EAA4B3B,GAAsC,CAAEC,aAAc,IAAKC,UAAS/K,YAAWgL,wBAEjH,OACE,eAAC,IAAD,CAAOzW,MAAM,MAAMuR,UAAWA,EAA9B,UACE,cAAC,GAAD,CAAahK,SAAS,OAAtB,SACGL,EACC,IACA,8IAGJ,eAAC,GAAD,WACE,cAAC,GAAD,CAAUG,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAACzM,MAAM,YAAYsO,cAAc,YAAYpC,GAAG,OAA1E,SACGtM,EAAgB,IAAK,iBAG1B,cAAC,GAAD,CAAUG,MAAO,CAAE6Q,aAAc,IAAjC,SACE,cAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAACzM,MAAM,YAAYsO,cAAc,YAAYpC,GAAG,OAA1E,SACGtM,EAAgB,IAAK,WAG1B,cAAC,GAAD,UACE,eAAC,IAAD,CAAMK,SAAS,OAAOwM,MAAI,EAACzM,MAAM,YAAYsO,cAAc,YAAYpC,GAAG,OAA1E,UACGtM,EAAgB,IAAK,WADxB,cAKF,cAAC,GAAD,CAAUG,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,kBAEF,cAAC,GAAD,CAAU1M,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAca,EAAyBZ,eAAgBW,IADxE,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMtQ,SAAS,OAAOwM,MAAI,EAA1B,SAA4B+D,MAG9B,cAAC,GAAD,CAAUzQ,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,kBAEF,cAAC,GAAD,CAAU1M,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAcc,EAAyBb,eAAgBW,IADxE,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMtQ,SAAS,OAAOwM,MAAI,EAA1B,SAA4BgE,MAG9B,cAAC,GAAD,CAAU1Q,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,mBAEF,cAAC,GAAD,CAAU1M,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAce,EAA0Bd,eAAgBW,IADzE,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMtQ,SAAS,OAAOwM,MAAI,EAA1B,SAA4BiE,MAG9B,cAAC,GAAD,CAAU3Q,MAAO,CAAEwG,UAAW,QAA9B,SACE,cAAC,IAAD,CAAMtG,SAAS,OAAOwM,MAAI,EAA1B,yBAEF,cAAC,GAAD,CAAU1M,MAAO,CAAE6Q,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM3Q,SAAS,OAAOwM,MAAI,EAA1B,UACGiD,GAAY,CAAEC,aAAcgB,EAA2Bf,eAAgBW,IAD1E,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMtQ,SAAS,OAAOwM,MAAI,EAA1B,SAA4BkE,SAGhC,cAAC,IAAD,CAAMpL,eAAe,SAArB,SACE,cAAC,IAAD,CAAQ5M,QAAQ,SAASoH,MAAO,CAAEgD,MAAO,QAAzC,SACE,eAAC,GAAD,CAAY8N,UAAQ,EAACrL,KAAI,+CAA0C8K,GAAyBvQ,MAAO,CAAE+Q,eAAgB,QAArH,UACGlR,EAAgB,IAAK,OADxB,IACiCwE,aC9F5B2M,GA5B6B,SAAC,GAQtC,IAPL3M,EAOI,EAPJA,QACAwK,EAMI,EANJA,mBACAO,EAKI,EALJA,oBACAN,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAtJ,EAEI,EAFJA,UACAkM,EACI,EADJA,IAEA,EAA4B9E,YAC1B,cAAC,GAAD,CACEnH,QAASA,EACTwK,mBAAoBA,EACpBO,oBAAqBA,EACrBN,iBAAkBA,EAClBpB,eAAgBA,EAChBtJ,UAAWA,EACXkM,IAAKA,KARFW,EAAP,oBAYA,OACE,cAAC,IAAD,CAAYpY,QAASoY,EAAmBrY,QAAQ,OAAO6O,KAAK,KAAKyJ,GAAG,MAApE,SACE,cAAC,IAAD,OCnBAC,GAAejE,YAAH,gLAYZkE,GAAmBlS,IAAOC,IAAV,2nBAgBPgS,IAWToC,GAAQrU,IAAOC,IAAV,kZASE,qBAAGC,SAA0B,MAAQ,cAO5CmS,GAAmBrS,IAAOC,IAAV,mMACV,SAAChH,GAAD,OAAYA,EAAMwH,SAAW,OAAS,SAQ5CqE,GAAQ9E,IAAOC,IAAV,+EAiQIqU,GAhP2B,SAAC,GAA8F,IAAD,MAA3FjH,EAA2F,EAA3FA,KAAMkF,EAAqF,EAArFA,QAASrN,EAA4E,EAA5EA,UAAWsN,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,SAAUlV,EAA6C,EAA7CA,SAAUxD,EAAmC,EAAnCA,QAASmG,EAA0B,EAA1BA,SAAUoF,EAAgB,EAAhBA,UAChH3E,EAAkBC,cAExB,EAA0D3C,oBAAS,GAAnE,mBAAOyU,EAAP,KAA8BC,EAA9B,KACQzM,EAAaP,YAAY0H,EAAK3S,KAA9BwL,SAIJ0M,EAAevF,EAAKlQ,YACpB0V,EAAe,GAEdxF,EAAKI,cAAaoF,EAAexF,EAAKuC,kBAE3C,IAAMkD,EAAwBvH,mBAAQ,WACpC,OAAK8B,EAAK6C,oBAGN7C,EAAKuC,mBAAqBmD,IAAWC,IAChCR,EAASzX,MAAMsS,EAAK6C,qBAEzB7C,EAAKuC,mBAAqBmD,IAAWE,KAChC/N,EAAUnK,MAAMsS,EAAK6C,qBAE1B7C,EAAKuC,mBAAqBmD,IAAWG,IAChCT,EAAS1X,MAAMsS,EAAK6C,qBAEtB7C,EAAK6C,oBAXH,OAYR,CAACsC,EAAUtN,EAAWuN,EAAUpF,EAAK6C,oBAAqB7C,EAAKuC,mBAE5DuD,EACJL,IAAe,IAAIhY,IAAUgY,GAAYM,QAAzC,WACQ5D,OAAOsD,GAAYrM,oBAAe4M,EAAW,CAAEC,sBAAuB,KAC1E,IAEA/C,EAAsD,OAAzC,UAAAlD,EAAK6C,2BAAL,eAA0BjV,YAEvCkK,EAAUkI,EAAKI,YAAcJ,EAAKK,SAAxB,UAAsCL,EAAKK,UAErD6F,EACJlG,EAAK+D,KACL/D,EAAK+D,IAAIrW,MAAM,IAAID,IAAUyV,EAAY,IAAQ,MAAMrB,WAAWzI,oBAAe4M,EAAW,CAC1FG,sBAAuB,EACvBF,sBAAuB,IAGnB3D,EAAyDtC,EAAzDsC,mBAAoBC,EAAqCvC,EAArCuC,iBAAkBpB,EAAmBnB,EAAnBmB,eAGxCjJ,EAAiCgG,mBAAQ,WAC7C,GAAI8B,EAAKI,YACP,OAAO,IAAI3S,IAAUuS,EAAKoG,mBAG5B,IAAMC,EAAsB,IAAI5Y,IAAUuS,EAAKsG,oBAAoB5Y,MAAM,GAAGkF,IAAIoN,EAAKuG,eACrF,OAAIvG,EAAKuC,mBAAqBmD,IAAWC,IAChCR,EAASzX,MAAM2Y,GAEpBrG,EAAKuC,mBAAqBmD,IAAWE,KAChC/N,EAAUnK,MAAM2Y,GAErBrG,EAAKuC,mBAAqBmD,IAAWG,IAChCT,EAAS1X,MAAM2Y,GAEjBA,IACN,CACDlB,EACAtN,EACAuN,EACApF,EAAKoG,kBACLpG,EAAKuC,iBACLvC,EAAKsG,mBACLtG,EAAKuG,cACLvG,EAAKI,cAIDpB,EADqBF,aAAiBjG,GACFO,iBAC1C,EAAsBxI,mBAASX,OAAOiX,YAAtC,mBAAOhQ,EAAP,KAAYiQ,EAAZ,KACA,EAAwBvW,mBAAQ,UAACwW,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwB5W,mBAAQ,UAACwW,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOG,EAAP,KAAaC,EAAb,KASA,OARAzW,qBAAU,WAAO,IAAD,QACVsW,KAAI,UAAKH,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACnEE,EAAO,UAACJ,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aACzDG,KAAI,UAAKL,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACxEI,EAAO,UAACN,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAEhEH,EAAOlX,OAAOiX,YAAcK,GAAc,IAAME,GAAc,GAAK,OACpE,CAACF,EAAME,EAAMvQ,EAAKrE,IAEnB,eAACmU,GAAD,CAAOnU,SAAUA,EAAUY,MAAO,CAAEkU,gBAAiB,UAAWlR,MAA+B,IAAxBtE,KAAKC,MAAM8E,EAAM,KAAY0Q,SAAU,IAAKvI,SAAU,KAA7H,WACyB,QAArBW,EAAKlQ,aAA8C,QAArBkQ,EAAKlQ,cAA0B,cAAC,GAAD,IAC9D+C,EACC,qCACE,cAAC,GAAD,CACEiF,QAASA,EACTC,WAAYiI,EAAKzC,aACjBxD,aAAcwL,EACdvL,YAAawL,EACb1V,YAAakQ,EAAKlQ,YAClBqI,eACE6H,EAAKI,YAAL,oCACiCJ,EAAKmB,eAAeE,KADrD,oCAEiCrB,EAAKkB,YAAYG,KAEpDjJ,SACE4H,EAAKI,YAAL,wCACqCJ,EAAKmB,eAAeE,KADzD,uCAEoCrB,EAAKkB,YAAYG,KAEvDxO,SAAUA,IAEZ,eAAC,IAAD,CAAMoG,eAAe,gBAAgBE,WAAW,SAAS1F,MAAO,CAAEgG,QAAS,YAA3E,WACIyL,GACA,eAAC,GAAD,WACE,eAAC,IAAD,CAAMvR,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,OAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOwM,MAAI,EAAC1M,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,SAAUzF,MAAO,WAAlF,SACGsM,EAAK+D,IACJ,qCACGmC,EADH,IAEE,cAAC,GAAD,CACEpO,QAASA,EACTwK,mBAAoBA,EACpBC,iBAAkBA,EAClBpB,eAAgBA,EAChBtJ,UAAWA,EACXkM,IAAK/D,EAAK+D,SAId,cAAC,IAAD,CAAUlN,OAAQ,GAAIJ,MAAO,UAKrC,eAAC,GAAD,WACE,eAAC,IAAD,CAAM9C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,iBAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAE+F,WAAY,OAAQS,UAAW,UAA9D,SAA8F,MAAnB+E,EAAyBA,EAAiB,SAEvH,cAAC,EAAD,CACE1S,QAAS,kBAAMgZ,GAA0BD,IACzCjS,SAAUiS,EACVtS,SAAU,EACVF,SAAUA,UAIhB,eAAC,IAAD,CAAMoG,eAAe,gBAAgBE,WAAW,SAAS1F,MAAO,CAAEoD,OAAQ,IAA1E,UACE,cAAC,GAAD,CACEiB,QAASA,EACTC,WAAYiI,EAAKzC,aACjBxD,aAAcwL,EACdvL,YAAawL,EACb1V,YAAakQ,EAAKlQ,YAClBqI,eACE6H,EAAKI,YAAL,oCACiCJ,EAAKmB,eAAeE,KADrD,oCAEiCrB,EAAKkB,YAAYG,KAEpDjJ,SACE4H,EAAKI,YAAL,wCACqCJ,EAAKmB,eAAeE,KADzD,uCAEoCrB,EAAKkB,YAAYG,KAEvDxO,SAAUA,KAEVqS,GACA,eAAC,GAAD,CAAOzR,MAAO,CAAEJ,aAAc,OAAQyD,UAAW,QAAjD,UACE,eAAC,IAAD,CAAMnD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,OAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOwM,MAAI,EAAC1M,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,SAAUzF,MAAO,UAAW8F,WAAY,KAAzG,SACGwG,EAAK+D,IACJ,qCACGmC,EADH,IAEE,cAAC,GAAD,CACEpO,QAASA,EACTwK,mBAAoBA,EACpBO,oBAAqB7C,EAAK6C,oBAC1BN,iBAAkBA,EAClBpB,eAAgBA,EAChBtJ,UAAWA,EACXkM,IAAK/D,EAAK+D,SAId,cAAC,IAAD,CAAUlN,OAAQ,GAAIJ,MAAO,UAKrC,eAAC,GAAD,WACE,eAAC,IAAD,CAAM9C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UACGJ,EAAgB,IAAK,gBADxB,OAGA,eAAC,IAAD,CAAM6F,WAAW,SAAjB,UACE,cAAC,IAAD,CAAMxF,SAAS,OAAOF,MAAO,CAAE+F,WAAY,KAA3C,SAAoD0L,EAA+B,EAArBY,IAC7D7N,EACC,cAAChB,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,yCAA0C4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,IAC7G,cAACU,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,+DAA2D4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,UAIpI,eAAC,GAAD,WACE,eAAC,IAAD,CAAM5C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,cAAzE,OACA,eAAC,IAAD,CAAM6F,WAAW,SAAjB,UACE,cAAC,IAAD,CAAMxF,SAAS,OAAOF,MAAO,CAAE+F,WAAY,IAAK9F,MAAO,WAAvD,SAAqEsM,EAAKwG,aAC1E,cAACvP,GAAD,CAAgB9K,KAAMmH,EAAgB,IAAK,4KAA6K4D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,UAGpP,eAAC,GAAD,WACE,eAAC,IAAD,CAAM5C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,UAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAE+F,WAAY,OAAQS,UAAW,UAA9D,SAA8F,MAAnB+E,EAAyBA,EAAiB,SAEvH,cAAC,EAAD,CACE1S,QAAS,kBAAMgZ,GAA0BD,IACzCjS,SAAUiS,EACVtS,SAAU,EACVF,SAAUA,OAIhB,cAAC,GAAD,CAAkBO,SAAUiS,EAA5B,SACE,cAAC,GAAD,CACEvN,QAASA,EACTC,WAAYiI,EAAKzC,aACjBvF,gBAAiBgI,EAAKhI,gBACtB3K,IAAK2S,EAAK3S,IACV6K,oBAAqBA,EACrB8H,KAAMA,EACN9P,SAAUA,EACVxD,QAASA,EACTmL,UAAWA,EACXhF,SAAUA,EACVqS,QAASA,EACTY,mBAAoBA,EACpB7N,UAAWA,U,sDCjON4P,GAlGQ,SAAC,GAAsG,IAAD,IAAnGC,EAAmG,EAAnGA,WAAYC,EAAuF,EAAvFA,cAAehV,EAAwE,EAAxEA,SAAUiV,EAA8D,EAA9DA,YAAaC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASvV,EAAe,EAAfA,SAC5G,EAAyBwV,cAAjBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,QACPjV,EAAkBC,cACxB,EAAsB3C,mBAASX,OAAOiX,YAAtC,mBAAOhQ,EAAP,KAAYiQ,EAAZ,KACA,EAAwBvW,mBAAQ,UAACwW,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwB5W,mBAAQ,UAACwW,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOG,EAAP,KAAaC,EAAb,KACAzW,qBAAU,WAAO,IAAD,QACVsW,KAAI,UAAKH,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACnEE,EAAO,UAACJ,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aACzDG,KAAI,UAAKL,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACxEI,EAAO,UAACN,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAEhEH,EAAOlX,OAAOiX,YAAcK,GAAc,IAAME,GAAc,GAAK,OACpE,CAACF,EAAME,EAAMvQ,EAAKrE,IAKrB,OACE,eAAC,GAAD,CAASA,SAAUA,EAAUY,MAAO,CAAEgD,MAA+B,IAAxBtE,KAAKC,MAAM8E,EAAM,KAAY0Q,SAAU,IAAKvI,SAAU,KAAnG,UACE,eAAC,GAAD,CAAM5L,MAAO,CAAE+U,cAAe3V,EAAW,OAAS,GAAlD,WACIA,GACA,qCACE,cAAC4V,GAAD,CAAcnc,QAAS,WACrB0b,GAAY,GACZU,IAAQC,IAAI,YAAY,IAF1B,SAIG5V,EACC,qBAAK4G,IAAI,wBAAwBC,IAAI,YAAYnD,MAAM,OAAOI,OAAO,SACrE,qBAAK8C,IAAI,+BAA+BC,IAAI,YAAYnD,MAAM,OAAOI,OAAO,WAGhF,cAAC4R,GAAD,CAAcnc,QAAS,WACrB0b,GAAY,GACZU,IAAQC,IAAI,YAAY,IACvBlV,MAAO,CAAEmD,YAAa,IAHzB,SAIG7D,EACC,qBAAK4G,IAAI,+BAA+BC,IAAI,YAAYnD,MAAM,OAAOI,OAAO,SAC5E,qBAAK8C,IAAI,wBAAwBC,IAAI,YAAYnD,MAAM,OAAOI,OAAO,cAI7E,eAAC,IAAD,CAAY+R,YAAaL,EAAU,EAAI,EAAGrN,KAAK,KAAK7O,QAAQ,SAA5D,UACE,cAAC,IAAD,CAAgByV,GAAI+B,KAAMgF,GAAE,UAAKP,GAAO7U,MAAO,CAAE6F,aAAc,EAAG7C,MAAO,IAAzE,SACGnD,EAAgB,IAAK,UAExB,cAAC,IAAD,CAAgBwO,GAAI+B,KAAMgF,GAAE,UAAKP,EAAL,YAAoB7U,MAAO,CAAE6F,aAAc,EAAG7C,MAAO,KAAjF,SACGnD,EAAgB,IAAK,iBAG1B,eAACwV,GAAD,WACE,cAAC,IAAD,CAAQC,MAAM,KAAKC,QAASlB,EAAYnL,SAAU,kBAAMoL,GAAeD,MACvE,eAAC,IAAD,CAAMrU,MAAO,CAAEC,MAAO,UAAWC,SAAUd,EAAW,OAAS,QAA/D,cAA2ES,EAAgB,IAAK,wBAGpG,eAAC,GAAD,WACE,cAAC,IAAD,CACEyC,GAAG,SACHb,KAAK,cACL5E,KAAK,OACLsM,YAAatJ,EAAgB,MAAO,UACpCG,MAAO,CAAEmU,SAAU,IAAKhR,YAAa,GACrCzI,MAAO8Z,EACPtL,SAAU,SAAC0B,GAAD,OAAO6J,EAAU7J,EAAEC,cAAcnQ,UAI7C,eAAC8a,GAAA,EAAD,CACE9a,MAAOga,EACPxL,SAtDmB,SAACuM,GAC1Bd,EAAQc,EAAMC,OAAOhb,QAsDfsF,MAAO,CACL6F,aAAc,EACdI,WAAY,sBACZQ,YAAa,OACbzD,MAAO,OAEPI,OAAQ,GACRnD,MAAO,UACPC,SAAU,GACV6F,WAAY,IACZmO,gBAAiB,WAEnByB,cACE,kBAAO,cAAC,KAAD,CAAmB3V,MAAO,CAAEC,MAAO,cAE5C2V,kBAAgB,EAlBlB,UAoBE,cAACC,GAAD,CAAgBnb,MAAO,EAAvB,SAA2BmF,EAAgB,IAAK,SAChD,cAACgW,GAAD,CAAgBnb,MAAO,EAAvB,SAA2BmF,EAAgB,IAAK,gBAChD,cAACgW,GAAD,CAAgBnb,MAAO,EAAvB,SAA2BmF,EAAgB,IAAK,SAChD,cAACgW,GAAD,CAAgBnb,MAAO,EAAvB,SAA2BmF,EAAgB,IAAK,eAChD,cAACgW,GAAD,CAAgBnb,MAAO,EAAvB,SAA2BmF,EAAgB,IAAK,sBASpDR,GAAUH,IAAOC,IAAV,gMACA,qBAAGC,SAA0B,QAAU,UAMvC,qBAAGA,SAA0B,UAAY,aAGhDiW,GAAgBnW,IAAOC,IAAV,+JAKf+Q,KAKE8E,GAAe9V,YAAO4W,IAAP5W,CAAH,uIAOZkH,GAAOlH,IAAOC,IAAV,wEAKJ0W,GAAiB3W,YAAO6W,KAAP7W,CAAH,iDCrHd8W,GAAO9W,IAAOC,IAAV,6OACY,gBAAGqF,EAAH,EAAGA,UAAWpF,EAAd,EAAcA,SAAd,OAA8BoF,EAE/CpF,EAAW,kDAAoD,2CAD/DA,EAAW,kDAAoD,8CAKpD,qBAAGA,SAA0B,QAAU,SAC3C,qBAAGA,SAA0B,QAAU,WAE/C,qBAAGG,MAAkB0W,aAAaC,MAKhCC,GAAgBjX,YAAOkX,IAAPlX,CAAH,qLAMF,qBAAGE,SAA0B,OAAS,UAGjDiX,GAAWnX,YAAOgR,IAAPhR,CAAH,oMAMC,qBAAGE,SAA0B,QAAU,WACrC,qBAAGA,SAA0B,OAAS,UAGjDkX,GAAWpX,YAAOgR,IAAPhR,CAAH,gHAMRqX,GAAWrX,YAAOgR,IAAPhR,CAAH,sIAORsX,GAAatX,IAAOC,IAAV,+OACM,cAAGC,SAAH,MAA6B,8CAS7CqX,GAAcvX,IAAOC,IAAV,+OACK,cAAGC,SAAH,MAA6B,8CAS7CsX,GAAaxX,IAAOxG,KAAV,oHAwNDie,GAjNqB,SAACC,GACnC,IAAQC,EAASjC,cAATiC,KACFzX,EAAW0X,YAAS,sBACpBjX,EAAkBC,cACpBiX,EAAUC,cACd,EAA4B7Z,mBAAS,IAArC,mBAAOqX,EAAP,KAAeC,EAAf,KACA,EAAwBtX,mBAAS,GAAjC,mBAAOuX,EAAP,KAAaC,EAAb,KACQlY,EAAsDrE,cAAtDqE,SACAxD,EAAYb,cAAZa,QACFmL,EAAY6S,cACZvF,EAAWwF,cACXvF,EAAWwF,cACXC,EAAWC,cAAkBvH,QAAQ,GACnCtL,EAAcoS,EAAdpS,UAEFnJ,EAAWC,cACTgc,EAAgBC,cAAhBD,YACR9Z,qBAAU,WACJvE,GACFoC,EAASM,YAAuB1C,MAEjC,CAACA,EAASoC,EAAUic,IAEvB,MAAoCna,oBAAS,GAA7C,mBAAOkX,EAAP,KAAmBC,EAAnB,KACA,EAAgCnX,mBAAS8X,IAAQuC,IAAI,YAA0C,SAA5BvC,IAAQuC,IAAI,aAA0BpY,GAAzG,mBAAOE,EAAP,KAAiBiV,EAAjB,KAEMkD,EAAmB,SAACC,EAAOC,GAC/B,OAAOA,EAAM5E,WAAW9N,QAAQ,IAAK,IAAMyS,EAAM3E,WAAW9N,QAAQ,IAAK,KAErE2S,EAAY,SAACF,EAAOC,GACxB,OAAOA,EAAMrH,IAAMoH,EAAMpH,KAErBuH,EAAkB,SAACH,EAAOC,GAC9B,OAAOA,EAAMvI,oBAAsBsI,EAAMtI,qBAErC0I,EAAe,SAACJ,EAAOC,GAC3B,OAAOA,EAAMI,SAAS3S,SAAWsS,EAAMK,SAAS3S,UAG9C4S,EAAcjB,EAAQvC,QAAO,SAACjI,GAAD,QAAYA,EAAKI,gBAAkBnI,GAAiC,OAApB+H,EAAKwG,cACvE,KAAXyB,IACFwD,EAAcA,EAAYxD,QAAO,SAACjI,GAAD,OAA2D,IAAjDA,EAAKK,SAASjG,QAAQ6N,EAAO1G,mBAE1E,IAAImK,EAAgBlB,EAAQvC,QAAO,SAACjI,GAAD,QAAYA,EAAKI,gBAAkBnI,GAAiC,OAApB+H,EAAKwG,cACzE,KAAXyB,IACFyD,EAAgBA,EAAczD,QAAO,SAACjI,GAAD,OAA2D,IAAjDA,EAAKK,SAASjG,QAAQ6N,EAAO1G,mBAE9E,IAAIoK,GAAkBF,EAAYxD,QAChC,SAACjI,GAAD,OAAUA,EAAKwL,UAAY,IAAI/d,IAAUuS,EAAKwL,SAAShT,eAAeC,cAAc,MAEvE,KAAXwP,IACF0D,GAAkBA,GAAgB1D,QAAO,SAACjI,GAAD,OAA2D,IAAjDA,EAAKK,SAASjG,QAAQ6N,EAAO1G,mBAMlF,IAAMqK,GAAY1c,uBAChB,SAAC2c,EAAgB3G,GAEf,IAAM4G,EAA+CD,EAAe5P,KAAI,SAAC+D,GAIvE,IAIM+L,EAJqB,IAAIte,IAAUuS,EAAKgM,aAAe,GAC1Dte,MAAM,IAAID,IAAUuS,EAAKiM,aACzBrZ,IAAI,IAAInF,IAAU,IAAIE,IAAI,KAEgBD,MAAMwe,KAC/CnI,EAAMlM,EAAUnK,MAAMqe,GACtBtG,EAAa,IAAIhY,IAAUuS,EAAK6C,qBAAuB,GAc3D,OAZI7C,EAAKuC,mBAAqBmD,IAAWC,MACvCF,EAAaA,EAAW/X,MAAMyX,IAG5BnF,EAAKuC,mBAAqBmD,IAAWG,MACvCJ,EAAaA,EAAW/X,MAAM0X,IAI9BrB,EADE0B,EAAW0G,WAAW,GAAK,EACvBpI,EAAInR,IAAI6S,GAEL1B,EAAInR,IAAI,KACZ,2BAAKoN,GAAZ,IAAkB+D,WAcpB,OAXa,IAAToE,IAEgB,IAATA,EACT2D,EAAsB3D,KAAK+C,GACT,IAAT/C,EACT2D,EAAsB3D,KAAKkD,GACT,IAATlD,EACT2D,EAAsB3D,KAAKmD,GACT,IAATnD,GACT2D,EAAsB3D,KAAKoD,IAEzBxY,EACK+Y,EAAsB7P,KAAI,SAAC+D,GAAD,OAC/B,cAAC,GAAD,CAEEA,KAAMA,EACNkF,QAASA,EACTC,SAAUA,EACVtN,UAAWA,EACXuN,SAAUA,EACVlV,SAAUA,EACVxD,QAASA,EACTmG,UAAU,GARLmN,EAAK3S,QAYPye,EAAsB7P,KAAI,SAAC+D,GAAD,OAC/B,cAAC,GAAD,CAEEA,KAAMA,EACNkF,QAASA,EACTC,SAAUA,EACVtN,UAAWA,EACXuN,SAAUA,EACVlV,SAAUA,EACVxD,QAASA,EACTmG,SAAUA,EACVoF,UAAWA,GATN+H,EAAK3S,UAclB,CAAC8X,EAAUzY,EAASmL,EAAWuN,EAAUlV,EAAUiY,EAAMpV,EAAUF,EAAUoF,IAE/E,OACE,qCACE,eAACwR,GAAD,CAAM5W,SAAUA,EAAUoF,UAAWA,EAArC,WACIpF,GAAY,sBAAKY,MAAO,CAAEkD,QAAS,OAAQwC,WAAY,SAAUM,QAAS,uBAA9D,UACZ,gCACE,cAACsQ,GAAD,kBAGA,eAACC,GAAD,eACInS,EAAU0L,QAAQ,SAGxB,qBAAK9P,MAAO,CAAEoD,OAAQ,OAAQuV,YAAa,oBAAqBzV,QAAS,WAEzE,sBAAKlD,MAAO,CAAEG,WAAY,IAA1B,UACE,cAACmW,GAAD,kBAGA,eAACC,GAAD,eACIa,WAIR,sBAAKpX,MAAO,CAAEkD,QAAS,OAAQsC,eAAgB,iBAA/C,UACE,sBAAKxF,MAAO,CAAEkD,QAAS,SAAvB,UACE,cAACiT,GAAD,CAAe/W,SAAUA,EAAzB,SACGoF,EACG3E,EAAgB,IAAK,SACrBA,EAAgB,IAAK,WAE3B,cAACwW,GAAD,CAAUjX,SAAUA,EAApB,SACGoF,EACC3E,EAAgB,IAAK,mJACrBA,EAAgB,IAAK,gIAIzBT,GAAY,8BACXoF,EACC,mCACE,eAACiS,GAAD,CAAarX,SAAUA,EAAvB,UACE,qBAAKY,MAAO,CAAEkD,QAAS,QAAvB,SACE,cAACwT,GAAD,UAAa7W,EAAgB,IAAK,iBAEpC,cAAC6W,GAAD,UAAa7W,EAAgB,IAAK,4BAItC,mCACE,eAAC2W,GAAD,CAAYpX,SAAUA,EAAtB,UACE,sBAAKY,MAAO,CAAEkD,QAAS,QAAvB,UACE,cAACwT,GAAD,UAAa7W,EAAgB,IAAK,WADpC,OAEE,cAAC6W,GAAD,CAAY1W,MAAO,CAAEC,MAAO,WAA5B,SAA0CJ,EAAgB,IAAK,aAEjE,cAAC6W,GAAD,UAAa7W,EAAgB,IAAK,mDAO9C,eAAC+Y,EAAA,EAAD,WACE,cAAC,GAAD,CAAgBvE,WAAYA,EAAYC,cAAeA,EAAehV,SAAUA,EAAUiV,YAAaA,EAAaC,OAAQA,EAAQC,UAAWA,EAAWC,KAAMA,EAAMC,QAASA,EAASvV,SAAUA,IAClM,8BACE,eAACgH,EAAD,CAAYhH,SAAUA,EAAtB,UACE,cAAC,IAAD,CAAOyZ,OAAK,EAAChC,KAAI,UAAKA,GAAtB,SACgBsB,GAAb9D,EAAuB6D,GAAoCF,GAAnB,KAE3C,cAAC,IAAD,CAAOa,OAAK,EAAChC,KAAI,UAAKA,EAAL,YAAjB,SACGsB,GAAUF,GAAe","file":"static/js/13.9d8c17c7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div<{ isMobile: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  max-width: 980px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: ${({ isMobile }) => isMobile ? \"40px\" : \"32px\"};\r\n  & > * {\r\n    min-width: 310px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n  viewMode?: number\r\n  isMobile?: boolean\r\n  marginBottom?: string\r\n}\r\n\r\nconst Wrapper = styled.div<{ viewMode: number }>`\r\n  display: ${({ viewMode }) => viewMode === 1 ? 'flex' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, viewMode, isMobile, marginBottom }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()} viewMode={viewMode} style={{ marginBottom: marginBottom }}>\r\n      {!isMobile && <Text style={{ color: '#A5A5A5', fontSize: 12, marginLeft: 12 }}>\r\n        {expanded ? TranslateString(725, 'Hide') : TranslateString(658, 'Details')}\r\n      </Text>}\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background: #151745;\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, OpenNewIcon } from '@robustswap-libs/uikit'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 300;\r\n  box-shadow: 5px 4px 8px 3px rgba(14, 14, 14, 0.2);\r\n  border: 1px solid #293D71;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n  mode: number\r\n}\r\n\r\nexport default function Tooltip({ text, mode, ...rest }: TooltipProps) {\r\n  if (mode === 0)\r\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n  else if (mode === 1) {\r\n    return (\r\n      <Popover placement=\"top\" content={\r\n        <TooltipContainer style={{ width: 'auto' }}>\r\n          <DropDownList />\r\n        </TooltipContainer>} {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport function DropDownList() {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>RBS-BNB</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>View Contract</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>Pair Info</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MouseoverTooltip({ children, mode, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip mode={mode} {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { InfoIcon } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: transparent;\r\n  //color: ${({ theme }) => theme.colors.text};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text, mode, wth, hgh }: { text: string, mode: number, wth: number, hgh: number }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4, marginTop: 'auto', marginBottom: 'auto' }}>\r\n      <Tooltip text={text} show={show} mode={mode}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <InfoIcon style={{ width: wth, height: hgh }} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { LinkExternal, Text, Flex, OpenNewIcon, Button } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport HarvestAction from './HarvestAction'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface ExpandableSectionProps {\r\n  cakePrice?: BigNumber\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  tokenMode: boolean\r\n  account?: string\r\n  stakedBalance?: BigNumber\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  cakePrice,\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  tokenMode,\r\n  account,\r\n  bscScanAddress,\r\n  pairinfo,\r\n  addLiquidityUrl\r\n}) => {\r\n\r\n  const { stakedBalance, allowance } = useFarmUser(pid)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const tokenAddress = bscScanAddress.replace('https://bscscan.com/token/', '')\r\n  const TranslateString = useI18n()\r\n  const { canHarvest, earnings } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(tokenAddress, lpLabel, 18, `https://robustswap.fi/images/farms/${lpLabel === 'WBNB' ? 'BNB' : lpLabel}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [lpLabel, tokenAddress])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tokenMode ? <>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n            <StyledLinkExternal href={addLiquidityUrl}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n            <StyledLinkExternal href={bscScanAddress}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n            <StyledLinkExternal href={pairinfo}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" style={{ marginTop: 16 }}>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n            {/* <Text fontSize=\"16px\">{lpLabel.split('-', 1)}-LP</Text> */}\r\n            <Text fontSize=\"16px\">Cake-LP</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>\r\n        </Flex> </> :\r\n        <>\r\n          <Flex justifyContent=\"center\">\r\n            <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, marginBottom: 16, width: '100%', height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n              <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n            </Button>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}:</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text> {/* {depositFee / 100} */}\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block>\r\n          </Flex>\r\n        </>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\n// import useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image, Text } from '@robustswap-libs/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { auto } from '@popperjs/core'\r\n// import { NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  margin-top:auto;\r\n  margin-bottom:auto;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo }) => {\r\n  // const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" style={{ marginBottom: 24 }}>\r\n      <div style={{ width: 40, height: 40 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? 40 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: '100%' }}>\r\n        <Heading>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ width: 170, marginTop: auto, marginBottom: auto }}>\r\n              {lpLabel.replace('LP', '')}\r\n              {lpLabel.indexOf('-') === -1 && <Text style={{ fontSize: 12 }}>Earn RBS</Text>}{/* {lpLabel.replace('LP', '')} */}\r\n            </div>\r\n            {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} />}\r\n          </div>\r\n        </Heading>\r\n        {/* <Flex justifyContent=\"flex-start\">\r\n          <StyledLinkExternal\r\n            href={bscScanAddress}\r\n          >\r\n            {TranslateString(356, 'View Contract')}\r\n          </StyledLinkExternal>\r\n          <StyledLinkExternal\r\n            href={pairinfo}\r\n          >\r\n            {TranslateString(355, 'Pair Info')}\r\n          </StyledLinkExternal>\r\n        </Flex> */}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport { useReferrerAddressFromCookie } from '../state/hooks'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, referrer)\r\n      console.log(\"txHash:\", txHash)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, referrer)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [99999]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n  max?: number | string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, max }) => {\r\n  return (\r\n    <>\r\n      <StyledInputWrapper style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 400, fontSize: 12, lineHeight: '14px', textAlign: 'right' }}>\r\n          Balance: {max.toLocaleString()}\r\n        </Text>\r\n        <div style={{ display: \"flex\", width: '100%' }}>\r\n          {!!startAdornment && startAdornment}\r\n          <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n          {!!endAdornment && endAdornment}\r\n        </div>\r\n      </StyledInputWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #151745;\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  width: auto;\r\n  height: 86px;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width:195px !important;\r\n  background: none;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const image = `/images/farms/${symbol === 'WBNB' ? 'BNB' : symbol}.svg`;\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <div>\r\n              <Button variant=\"text\" size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'MAX')}\r\n              </Button>\r\n            </div>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Flex>\r\n                {!(symbol.includes('LP')) && <img src={image} alt={symbol} width={24} height={24} />}\r\n                <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n              </Flex>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n        max={max}\r\n      />\r\n      {depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '} {symbol}</Text>\r\n        </StyledMaxText>\r\n      ) : (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(0).toString()}{' '}{symbol}</Text>\r\n        </StyledMaxText>\r\n      )}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n  margin-bottom:16px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-left: 4px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, IconButton, Heading, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ width: '100%' }}>\r\n      <div>\r\n        <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawStakedBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${stakedBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useStake from '../../../../hooks/useStake'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  cardMode?: number\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, cardMode = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      {cardMode === 1 && <div>\r\n        <Heading color={account ? rawEarningsBalance === 0 ? 'textDisabled' : 'text' : 'text'}>{account ? displayBalance : '-'}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>}\r\n      <BalanceAndCompound style={{ width: cardMode ? 'auto' : '100%' }}>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', opacity: '0.4', color: 'white', width: '100%' }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(999, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport { Modal, Text } from '@robustswap-libs/uikit'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { Farm } from '../../../state/types'\r\n\r\ninterface HarvestCountdownModalProps {\r\n  farm: Farm\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst HarvestCountdownModal: React.FC<HarvestCountdownModalProps> = ({\r\n  onDismiss,\r\n  nextHarvestUntil,\r\n  harvestInterval,\r\n  farm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const secondsUntilHarvest = nextHarvestUntil - currentTime\r\n  const timeUntil = getTimePeriods(secondsUntilHarvest > 0 ? secondsUntilHarvest : 0)\r\n\r\n  return (\r\n    <Modal title={TranslateString(10029, 'Harvest In')} onDismiss={onDismiss}>\r\n      <Text bold color=\"primary\" fontSize=\"36px\" style={{ textAlign: 'center' }}>\r\n        {formatTimePeriodCountdown(timeUntil)}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"10px\" style={{ textAlign: 'center' }}>\r\n        {farm.isTokenOnly ? 'Pool' : 'Farm'}: {farm.lpSymbol}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"5px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10027, 'Harvest Interval')}: {(harvestInterval / 3600).toLocaleString()}{' '}\r\n        {TranslateString(10028, 'Hours')}\r\n      </Text>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestCountdownModal\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\r\nimport { Button, Flex, Heading, Text, LinkExternal, IconButton, AlarmIcon, useModal } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 4px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  tokenMode: boolean\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n  tokenMode,\r\n  addLiquidityUrl\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (tokenBalance.toNumber() === 0 && tokenMode) ? (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'GET LP')}\r\n        </Button>\r\n      </Flex>\r\n    ) : (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" pr=\"3px\" style={{ color: '#A5A5A5' }}>\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          &nbsp;RBS\r\n        </Text>\r\n        {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n          <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n            <TadaAlarmIcon />\r\n          </StyledIconButton>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} cardMode={1} />\r\n      {tokenMode ? <>\r\n        <Flex>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {tokenBalance.toNumber() <= 0 ? TranslateString(453, 'Available LP') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          {tokenBalance.toNumber() <= 0 ?\r\n            <div style={{ textAlign: 'left' }}>\r\n              <Text fontSize=\"16px\">\r\n                {getFullDisplayBalance(tokenBalance)} LP\r\n              </Text>\r\n              <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n            </div> :\r\n            <Heading style={{ marginTop: 15, opacity: 0 }} />\r\n          }\r\n          {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n        </Flex>\r\n      </> :\r\n        <>\r\n          <Flex>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 8 }}>\r\n              {TranslateString(329, 'Staked')} Tokens\r\n            </Text>\r\n          </Flex>\r\n          {!account ? <UnlockButton fullWidth /> : renderApprovalOrStakeButton()}\r\n        </>\r\n      }\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import BigNumber from \"bignumber.js\"\r\n\r\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice, lpTotalInQuoteToken }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  // return roundToTwoDp(interestEarned)\r\n  const exception = lpTotalInQuoteToken?.toString() === '0' ? 100 : 1;\r\n  return roundToTwoDp(interestEarned * (exception)) // exception when staking is 0\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Calculated based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.fi/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Skeleton, Text } from '@robustswap-libs/uikit'\r\n// import { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: #1E215C;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 16px 16px 0px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 320px !important;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n  background: #151745;\r\n  margin: 0px -16px;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n  isMobile?: boolean\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue && !new BigNumber(totalValue).isNaN()\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const chainId = 56\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.fi/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  const earnLabel = 'ROBUST'\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    if (farm.isTokenOnly) {\r\n      return new BigNumber(farm.tokenPriceVsQuote)\r\n    }\r\n\r\n    const lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    ethPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n  ])\r\n\r\n  return (\r\n    <FCard>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        depositFee={farm.depositFeeBP}\r\n        primaryToken={earningToken}\r\n        secondToken={stakingToken}\r\n        tokenSymbol={farm.tokenSymbol}\r\n        bscScanAddress={\r\n          farm.isTokenOnly\r\n            ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n        pairinfo={\r\n          farm.isTokenOnly\r\n            ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n      />\r\n      {!removed && (\r\n        <Block>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n          <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n            {farm.apy ? (\r\n              <>\r\n                {farmAPY ? farmAPY : 0}%\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Block>\r\n      )}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n          {lpLabel.indexOf('-') >= 0 ?\r\n            TranslateString(10035, 'Liquidity') + ':' :\r\n            TranslateString(408, 'Total Staked')\r\n          }\r\n        </Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n      </Block>\r\n      {/* {lpLabel.indexOf('-') >= 0 &&  */}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n      </Block>\r\n      {/* } */}\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        ethereum={ethereum}\r\n        account={account}\r\n        harvestInterval={farm.harvestInterval}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n        cakePrice={cakePrice}\r\n        tokenMode={lpLabel.indexOf('-') >= 0}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n        viewMode={1}\r\n        isMobile={isMobile}\r\n        marginBottom=\"16px\"\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          cakePrice={cakePrice}\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          tokenMode={lpLabel.indexOf('-') >= 0}\r\n          account={account}\r\n          bscScanAddress={\r\n            farm.isTokenOnly\r\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          pairinfo={\r\n            farm.isTokenOnly\r\n              ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const tokenMode = tokenName.includes('-')\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {renderStakingButtons()}\r\n      <div>\r\n        {/* <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'} style={{ marginRight: 20 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 5 }}>Staked {tokenName.includes('-') ? 'LP' : 'Tokens'}</Text>\r\n          {displayBalance}\r\n        </Heading> */}\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {!tokenMode ? TranslateString(333, 'Staked Tokens') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n          <Text fontSize=\"16px\">{stakedBalance.toString()} {!tokenMode ? tokenName : 'LP'}</Text>\r\n          <Text fontSize=\"12px\">${(stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString()}</Text>\r\n        </div>\r\n        {rawStakedBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${stakedBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n    </Flex >\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\">\r\n      <BalanceAndCompound>\r\n        {/* {pid === 9 ? (\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            marginBottom=\"15px\"\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(compoundRawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n        ) : null} */}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', color: 'white', opacity: \"0.4\" }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  tokenMode: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport useStake from '../../../../hooks/useStake'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const compoundRawEarningsBalance = getBalanceNumber(earnings.minus(earnings.times(0.05).integerValue()))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      <BalanceAndCompound>\r\n        {pid === 9 ? (\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            marginBottom=\"15px\"\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(compoundRawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n        ) : null}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', opacity: '0.4', color: 'white' }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport MobileHarvestAction from './MobileHarvestAction'\r\n\r\nconst Action = styled.div`\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n  text-align: right;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }} justifyContent=\"space-between\">\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {TranslateString(333, 'Staked Tokens')}\r\n          </Text>\r\n          <Text fontSize=\"14px\">{isApproved ? stakedBalance : 0} RBS</Text>\r\n          <Text fontSize=\"12px\">${isApproved ? (stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString() : 0}</Text>\r\n        </div>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(495, 'Enable Farm')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <MobileHarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { LinkExternal, OpenNewIcon, Text, Flex, Button } from '@robustswap-libs/uikit'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport MobileCardActionsContainer from './MobileCardActionsContainer'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  isMobile: boolean\r\n  removed: boolean\r\n  totalValueFormated?: string\r\n  tokenMode: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<{ tokenMode: boolean }>`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  padding: 24px 0px 0px 0px;\r\n  padding-bottom: ${({ tokenMode }) => tokenMode ? \"24px\" : \"0px\"};\r\n  text-align: left;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledBlock = styled.div`\r\n  background-color: #293D71;\r\n  padding-bottom: 8px;\r\n  margin: 12px 0px;\r\n  padding: 8px 24px;\r\n  background-image: url('/images/farm-step.svg');\r\n  background-position: 16px, center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps & FarmCardActionsProps> = ({\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  cakePrice,\r\n  isMobile,\r\n  removed,\r\n  totalValueFormated,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { tokenBalance } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const chainId = 56\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(farm.tokenAddresses[chainId], farm.tokenSymbol, 18, `https://robustswap.fi/images/farms/${farm.tokenSymbol === 'WBNB' ? 'BNB' : farm.tokenSymbol}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [farm])\r\n\r\n  const bscScanAddress = farm.isTokenOnly\r\n    ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const pairinfo = farm.isTokenOnly\r\n    ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.fi/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  return (\r\n    <Wrapper tokenMode={tokenMode}>\r\n      {isMobile ?\r\n        <>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold', color: '#FF6B2A' }}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of PANTHER rewards each farm gets. For example, if a 1x farm was getting 1 PANTHER per block, a 40x farm would be getting 40 PANTHER per block.')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(408, 'Total Staked')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n                {tokenMode ?\r\n                  <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                  <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n                }\r\n              </Flex>\r\n            </Block>\r\n          </Flex>\r\n          <StyledBlock>\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              <div style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                <Text fontSize=\"14px\">{getFullDisplayBalance(tokenBalance)} LP</Text>\r\n                <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n              </div>\r\n              <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl}>\r\n                {TranslateString(507, 'GET LP')}\r\n              </Button>\r\n            </Flex>\r\n            <MobileCardActionsContainer\r\n              farm={farm}\r\n              ethereum={ethereum}\r\n              account={account}\r\n              harvestInterval={harvestInterval}\r\n              stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n              cakePrice={cakePrice}\r\n            />\r\n          </StyledBlock>\r\n        </> :\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Flex alignItems=\"center\">\r\n            {!tokenMode && <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ marginRight: 16 }}>\r\n              {TranslateString(507, 'GET LP')}\r\n            </Button>}\r\n            <div>\r\n              {tokenMode ?\r\n                <>\r\n                  <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ width: 89, height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n                    <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n                  </Button>\r\n                </> :\r\n                <>\r\n                  <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                  <Text fontSize=\"16px\">{getFullDisplayBalance(tokenBalance)} LP</Text>\r\n                  <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n                </>\r\n              }\r\n            </div>\r\n          </Flex>\r\n          {tokenMode && <>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n          </>}\r\n          {tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>}\r\n          {!tokenMode && <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />}\r\n          <CardActionsContainer\r\n            farm={farm}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            harvestInterval={harvestInterval}\r\n            stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n            cakePrice={cakePrice}\r\n            tokenMode={tokenMode}\r\n          />\r\n        </Flex>\r\n      }\r\n      {!isMobile && !tokenMode && <Divider style={{ marginTop: 16, marginBottom: 16 }} />}\r\n      {isMobile ?\r\n        <Flex justifyContent=\"space-between\" style={{ padding: '0px 24px' }}>\r\n          {!tokenMode && <><Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"12px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"12px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"12px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex> :\r\n        <Flex>\r\n          {!tokenMode && <>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n              <StyledLinkExternal href={addLiquidityUrl}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n              <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"16px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginTop: -1 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex>\r\n      }\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image } from '@robustswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex) <{ isMobile: boolean }>`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  flex-grow: 0.2;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 24px' : '0px 0px'}\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" isMobile={isMobile}>\r\n      {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} marginRight={16} />}\r\n      <div style={{ width: 40, height: isMobile ? 40 : 44 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? isMobile ? 40 : 44 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: 165, marginTop: 10 }}>\r\n        <Heading mb=\"8px\" style={{ fontWeight: 800 }}>{lpLabel.replace('LP', '')}</Heading>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Calculated based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.fi/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Text, Skeleton, Flex } from '@robustswap-libs/uikit'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FList = styled.div<{ isMobile: boolean }>`\r\n  align-self: baseline;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: ${({ isMobile }) => isMobile ? '0px' : '0px 24px'};\r\n  position: relative;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  background-color: #151745;\r\n  margin: 0px -24px 0px -24px;\r\n  border-radius: 0px 0px 8px 8px;\r\n  padding: 0px 24px 0px 24px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string,\r\n  isMobile: boolean,\r\n  tokenMode: boolean\r\n}\r\n\r\nconst FarmList: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account, isMobile, tokenMode }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const { earnings } = useFarmUser(farm.pid)\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated =\r\n    totalValue && !new BigNumber(totalValue).isNaN()\r\n      ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : '-'\r\n\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  // const earnLabel = 'ROBUST'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    if (farm.isTokenOnly) {\r\n      return new BigNumber(farm.tokenPriceVsQuote)\r\n    }\r\n\r\n    const lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    ethPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n  ])\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n  return (\r\n    <FList isMobile={isMobile} style={{ backgroundColor: '#1E215C', width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      {isMobile ?\r\n        <>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            {!removed && (\r\n              <Block>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n                <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#FF6B2A' }}>\r\n                  {farm.apy ? (\r\n                    <>\r\n                      {farmAPY}%\r\n                      <ApyButton\r\n                        lpLabel={lpLabel}\r\n                        quoteTokenAdresses={quoteTokenAdresses}\r\n                        quoteTokenSymbol={quoteTokenSymbol}\r\n                        tokenAddresses={tokenAddresses}\r\n                        cakePrice={cakePrice}\r\n                        apy={farm.apy}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <Skeleton height={24} width={80} />\r\n                  )}\r\n                </Text>\r\n              </Block>\r\n            )}\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'ROBUST Earned')}:</Text>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n            </Block>\r\n            <ExpandableSectionButton\r\n              onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n              expanded={showExpandableSection}\r\n              viewMode={0}\r\n              isMobile={isMobile}\r\n            />\r\n          </Flex>\r\n        </> :\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ height: 88 }}>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          {!removed && (\r\n            <Block style={{ marginBottom: 'auto', marginTop: 'auto' }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n              <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n                {farm.apy ? (\r\n                  <>\r\n                    {farmAPY}%\r\n                    <ApyButton\r\n                      lpLabel={lpLabel}\r\n                      quoteTokenAdresses={quoteTokenAdresses}\r\n                      lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                      quoteTokenSymbol={quoteTokenSymbol}\r\n                      tokenAddresses={tokenAddresses}\r\n                      cakePrice={cakePrice}\r\n                      apy={farm.apy}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Skeleton height={24} width={80} />\r\n                )}\r\n              </Text>\r\n            </Block>\r\n          )}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n              {TranslateString(408, 'Total Staked')}:\r\n            </Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800 }}>{!removed ? totalValueFormated : 0}</Text>\r\n              {tokenMode ?\r\n                <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n              }\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n              <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'Earned')}:</Text>\r\n            <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n          </Block>\r\n          <ExpandableSectionButton\r\n            onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n            expanded={showExpandableSection}\r\n            viewMode={0}\r\n            isMobile={isMobile}\r\n          />\r\n        </Flex>\r\n      }\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          farm={farm}\r\n          ethereum={ethereum}\r\n          account={account}\r\n          cakePrice={cakePrice}\r\n          isMobile={isMobile}\r\n          removed={removed}\r\n          totalValueFormated={totalValueFormated}\r\n          tokenMode={tokenMode}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FList>\r\n  )\r\n}\r\n\r\nexport default FarmList\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle, Button, Input } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { setWith } from 'lodash';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly, viewMode, setViewMode, filter, setFilter, sort, setSort, isMobile }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSort(event.target.value as number);\r\n  };\r\n  return (\r\n    <Wrapper isMobile={isMobile} style={{ width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      <Flex style={{ paddingBottom: isMobile ? '16px' : 0 }}>\r\n        {!isMobile &&\r\n          <>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(false)\r\n              Cookies.set('viewMode', false)\r\n            }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-list.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-list-active.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(true)\r\n              Cookies.set('viewMode', true)\r\n            }} style={{ marginRight: 28 }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-card-active.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-card.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n          </>}\r\n        <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: 0, width: 67 }}>\r\n            {TranslateString(601, 'Live')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: 0, width: 108 }}>\r\n            {TranslateString(599, 'Finished')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <ToggleWrapper>\r\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n          <Text style={{ color: '#7381FC', fontSize: isMobile ? '14px' : '16px' }}> {TranslateString(699, 'Staked only')}</Text>\r\n        </ToggleWrapper>\r\n      </Flex>\r\n      <Flex>\r\n        <Input\r\n          id=\"search\"\r\n          name=\"search-card\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(10011, 'Search')}\r\n          style={{ maxWidth: 170, marginRight: 8 }}\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.currentTarget.value)}\r\n        // isWarning={error}\r\n        // disabled={isloading}\r\n        />\r\n        <Select\r\n          value={sort}\r\n          onChange={handleChangeSelect}\r\n          style={{\r\n            borderRadius: 8,\r\n            background: \"rgba(30, 33, 92, 1)\",\r\n            paddingLeft: \"16px\",\r\n            width: '100%',\r\n            // border: '1px solid rgba(107, 161, 255, 0.2)',\r\n            height: 40,\r\n            color: '#7381FC',\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            backgroundColor: '#1E215C'\r\n          }}\r\n          IconComponent={\r\n            () => (<ArrowDropDownIcon style={{ color: \"#7381FC\" }} />)\r\n          }\r\n          disableUnderline\r\n        >\r\n          <StyledMenuItem value={1}>{TranslateString(395, 'HOT')}</StyledMenuItem>\r\n          <StyledMenuItem value={2}>{TranslateString(457, 'Multiplier')}</StyledMenuItem>\r\n          <StyledMenuItem value={3}>{TranslateString(352, 'APR')}</StyledMenuItem>\r\n          <StyledMenuItem value={4}>{TranslateString(686, 'Liquidity')}</StyledMenuItem>\r\n          <StyledMenuItem value={5}>{TranslateString(331, 'Earned')}</StyledMenuItem>\r\n        </Select>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div<{ isMobile: boolean }>`\r\n  display: ${({ isMobile }) => isMobile ? 'block' : 'flex'};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 0px' : '0px 8px'};\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 16px;\r\n  ${Text} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 0px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 16px;\r\n  background: transparent;\r\n`\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMenuItem = styled(MenuItem)`\r\n  color: #7381FC;\r\n`","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport Cookies from 'js-cookie'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmList from './components/FarmList/FarmList'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Hero = styled.div<{ isMobile: boolean, tokenMode: boolean }>`\r\n  background-image: ${({ tokenMode, isMobile }) => !tokenMode ?\r\n    (isMobile ? \"url('/images/farms/farms-header-bg-mobile.png')\" : \"url('/images/farms/farms-header-bg.png')\") :\r\n    (isMobile ? \"url('/images/farms/pools-header-bg-mobile.png')\" : \"url('/images/farms/pools-header-bg.png')\")};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 44px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n  height: ${({ isMobile }) => isMobile ? \"240px\" : \"320px\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 34px;\r\n  line-height: 40px;\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 36px;\r\n`\r\nconst PubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  max-width: ${({ isMobile }) => isMobile ? \"327px\" : \"538px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300; \r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst FarmBanner = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/farms-banner-bg.png')\" : \"url('/images/farms/farms-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 34px 86px 34px 25px;\r\n`\r\nconst FarmBanner1 = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/pools-banner-bg.png')\" : \"url('/images/farms/pools-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 48px 96px 48px 25px;\r\n`\r\nconst BannerText = styled.text`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n`\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const isMobile = useMedia('(max-width: 768px)')\r\n  const TranslateString = useI18n()\r\n  let farmsLP = useFarms()\r\n  const [filter, setFilter] = useState('')\r\n  const [sort, setSort] = useState(1);\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n  const { tokenMode } = farmsProps\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n  const [viewMode, setViewMode] = useState(Cookies.get('viewMode') ? Cookies.get('viewMode') === 'true' : !isMobile)\r\n\r\n  const sortByMultiplier = (item1, item2) => {\r\n    return item2.multiplier.replace('X', '') - item1.multiplier.replace('X', '');\r\n  }\r\n  const sortByAPR = (item1, item2) => {\r\n    return item2.apy - item1.apy\r\n  }\r\n  const sortByLiquidity = (item1, item2) => {\r\n    return item2.lpTotalInQuoteToken - item1.lpTotalInQuoteToken\r\n  }\r\n  const sortByEarned = (item1, item2) => {\r\n    return item2.userData.earnings - item1.userData.earnings\r\n  }\r\n  // activeFarms.sort(sortByMultiplier);\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  if (filter !== '') {\r\n    activeFarms = activeFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  if (filter !== '') {\r\n    inactiveFarms = inactiveFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  if (filter !== '') {\r\n    stakedOnlyFarms = stakedOnlyFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n          .times(new BigNumber(farm.poolWeight))\r\n          .div(new BigNumber(10).pow(18))\r\n\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        let apy = cakePrice.times(cakeRewardPerYear)\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          totalValue = totalValue.times(ethPrice)\r\n        }\r\n\r\n        if (totalValue.comparedTo(0) > 0) {\r\n          apy = apy.div(totalValue)\r\n        }\r\n        else apy = apy.div(100000)  // exception when staking is 0\r\n        return { ...farm, apy }\r\n      })\r\n\r\n      if (sort === 1) {\r\n        // farmsToDisplayWithAPY.sort()\r\n      } else if (sort === 2) {\r\n        farmsToDisplayWithAPY.sort(sortByMultiplier)\r\n      } else if (sort === 3) {\r\n        farmsToDisplayWithAPY.sort(sortByAPR)\r\n      } else if (sort === 4) {\r\n        farmsToDisplayWithAPY.sort(sortByLiquidity)\r\n      } else if (sort === 5) {\r\n        farmsToDisplayWithAPY.sort(sortByEarned)\r\n      }\r\n      if (viewMode) {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmCard\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={false}\r\n          />\r\n        ))\r\n      } else {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmList\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={isMobile}\r\n            tokenMode={tokenMode}\r\n          />\r\n        ))\r\n      }\r\n    },\r\n    [bnbPrice, account, cakePrice, ethPrice, ethereum, sort, viewMode, isMobile, tokenMode],\r\n  )\r\n  return (\r\n    <>\r\n      <Hero isMobile={isMobile} tokenMode={tokenMode}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${cakePrice.toFixed(2)}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '15px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ display: 'block' }}>\r\n            <StyledHeading isMobile={isMobile}>\r\n              {tokenMode\r\n                ? TranslateString(676, 'Pools')\r\n                : TranslateString(674, 'Farms')}\r\n            </StyledHeading>\r\n            <PubTitle isMobile={isMobile}>\r\n              {tokenMode ?\r\n                TranslateString(730, 'Looking for competitive rewards, low-risk, and no impermanent-loss farming alternative? Stake your RBS and other tokens below to earn more RBS.') :\r\n                TranslateString(729, 'ROBUSTSWAP Farms offer multiple farming opportunities and high rewards to you. Get rewarded by staking your LP tokens.')\r\n              }\r\n            </PubTitle>\r\n          </div>\r\n          {!isMobile && <div>\r\n            {tokenMode ?\r\n              <>\r\n                <FarmBanner1 isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(737, 'High APR,')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(738, 'low risk earning.')}</BannerText>\r\n                </FarmBanner1>\r\n              </>\r\n              :\r\n              <>\r\n                <FarmBanner isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(734, 'Enjoy')}</BannerText>&nbsp;\r\n                    <BannerText style={{ color: '#D6EE47' }}>{TranslateString(735, 'FREE')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(736, 'deposit with our featured farms.')}</BannerText>\r\n                </FarmBanner>\r\n              </>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </Hero>\r\n      <Page>\r\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} viewMode={viewMode} setViewMode={setViewMode} filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} isMobile={isMobile} />\r\n        <div>\r\n          <FlexLayout isMobile={isMobile}>\r\n            <Route exact path={`${path}`}>\r\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n            </Route>\r\n            <Route exact path={`${path}/history`}>\r\n              {farmsList(inactiveFarms, true)}\r\n            </Route>\r\n          </FlexLayout>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}