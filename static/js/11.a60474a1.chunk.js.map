{"version":3,"sources":["components/UnlockButton.tsx","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","utils/callHelpers.ts","hooks/useHarvest.ts","config/index.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/HarvestCountdownModal.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/getLiquidityUrlPathParts.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmList/StakeAction.tsx","views/Farms/components/FarmList/HarvestAction.tsx","views/Farms/components/FarmList/CardActionsContainer.tsx","views/Farms/components/FarmList/MobileHarvestAction.tsx","views/Farms/components/FarmList/MobileCardActionsContainer.tsx","views/Farms/components/FarmList/DetailsSection.tsx","views/Farms/components/FarmList/CardHeading.tsx","views/Farms/components/FarmList/ApyCalculatorModal.tsx","views/Farms/components/FarmList/ApyButton.tsx","views/Farms/components/FarmList/FarmList.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","self","text","title","variant","onClick","getContract","provider","address","account","contract","ethers","Contract","erc20","library","getSigner","connectUnchecked","getProviderOrSigner","getTokenBalance","tokenAddress","userAddress","a","balanceOf","balance","useStyles","makeStyles","theme","createStyles","mainContainer","padding","spacing","background","palette","default","height","breakpoints","down","cardWrapper","width","marginRight","hegiht","paper","border","borderRadius","textAlign","alignItems","cardWrapper1","pageTitle","fontSize","fontWeight","color","fontFamily","subPageTitle","paddingBottom","bgWrapper","marginBottom","bodyWrapper","display","flexDirection","walletButton","statsValue","justifyContent","switchButton","flex","activeSwitcher","base","root","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","chart","chartHeader","paddingTop","activeStatus","deactiveStatus","changePercent","paddingRight","chartTitle","currentChartValue","tabList","minWidth","backgroundColor","secondary","light","select","detailChartTabs","paddingLeft","metamaskButton","marginTop","mobileMenuItem","approve","lpContract","masterChefContract","getMasterChefAddress","constants","MaxUint256","stake","pid","amount","referrer","deposit","BigNumber","times","pow","toString","tx","wait","res","hash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","options","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useHarvest","farmPid","dispatch","useDispatch","useActiveWeb3React","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","formatTimePeriodCountdown","periods","FlexLayout","styled","div","isMobile","Wrapper","viewMode","colors","primary","ExpandableSectionButton","expanded","TranslateString","useI18n","role","style","defaultProps","PopoverContainer","show","card","transparentize","textSubtle","ReferenceElement","Arrow","Popover","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","current","tick","id","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","mode","rest","DropDownList","QuestionWrapper","invertedContrast","QuestionHelper","wth","hgh","setShow","open","close","onMouseEnter","onMouseLeave","Block","StyledLinkExternal","LinkExternal","DetailsSection","rbsPrice","lpLabel","depositFee","harvestInterval","tokenMode","stakedTokenPriceUSD","bscScanAddress","pairinfo","addLiquidityUrl","useFarmUser","allowance","stakedBalance","isGreaterThan","replace","classes","canHarvest","earnings","registerNativeToken","registerToken","href","toLocaleString","src","alt","Flex","CardHeading","primaryToken","secondToken","tokenSymbol","console","log","auto","indexOf","useApprove","onApprove","useStake","useReferrerAddressFromCookie","handleStake","info","onStake","useUnstake","handleUnstake","onUnstake","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","radii","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","max","lineHeight","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","symbol","onSelectMax","depositFeeBP","image","includes","toFixed","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","disabled","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","getBalanceNumber","stakedBalanceUSD","displayBalance","useModal","onPresentDeposit","onPresentWithdraw","mt","boxShadow","mr","BalanceAndCompound","StyledIconButton","IconButton","warning","tada","keyframes","TadaAlarmIcon","AlarmIcon","HarvestAction","nextHarvest","cardMode","harvestCount","rawEarningsBalance","earningBalanceUSD","mb","opacity","gt","HarvestCountdownModal","nextHarvestUntil","farm","secondsUntilHarvest","timeUntil","bold","isTokenOnly","lpSymbol","Action","CardActions","ethereum","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","tokenAddresses","lpAddress","process","lpName","toUpperCase","isApproved","handleApprove","error","renderApprovalOrStakeButton","as","onPresentHarvestCountdown","textTransform","pr","Number","toNumber","fullWidth","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","firstPart","secondPart","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","principal","lpTotalInQuoteToken","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","Link","apy","liquidityUrlPathParts","swapUrlPathParts","oneThousandDollarsWorthOfCake","getUrl","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","ml","RainbowLight","StyledCardAccent","FCard","Divider","ExpandingWrapper","FarmCard","removed","bnbPrice","ethPrice","usdcPrice","usdtPrice","showExpandableSection","setShowExpandableSection","earningToken","stakingToken","totalValue","QuoteToken","BNB","ETH","USDC","USDT","totalValueFormated","isNaN","undefined","maximumFractionDigits","exception","farmAPY","minimumFractionDigits","lpTokenPriceVsQuote","tokenPriceVsQuote","quoteTokenBlanceLP","lpTotalSupply","multiplier","CardActionsContainer","minus","integerValue","MobileHarvestAction","StyledBlock","MobileCardActionsContainer","StyledLink","external","textDecoration","FList","FarmList","window","innerWidth","setWth","document","getElementsByClassName","clientWidth","min1","setMin1","min2","setMin2","maxWidth","FarmTabButtons","stakedOnly","setStakedOnly","setViewMode","filter","setFilter","sort","setSort","useRouteMatch","url","isExact","StyledButton","Cookies","set","activeIndex","to","ToggleWrapper","scale","checked","type","Select","event","target","IconComponent","disableUnderline","StyledMenuItem","Button","MenuItem","Hero","mediaQueries","lg","StyledHeading","Heading","PubTitle","LogTitle","LogPrice","FarmBanner","FarmBanner1","BannerText","Farms","farmsProps","path","useMedia","farmsLP","useFarms","usePriceRbsBusd","usePriceBnbBusd","usePriceEthBusd","usePriceUsdcBusd","usePriceUsdtBusd","rbtPrice","usePriceRbtBusd","useGetDocumentTitlePrice","fastRefresh","useRefresh","get","sortByMultiplier","item1","item2","sortByAPR","sortByLiquidity","sortByEarned","userData","activeFarms","inactiveFarms","stakedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","rbsRewardPerYear","rbsPerBlock","poolWeight","comparedTo","borderRight","Page","exact"],"mappings":"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","file":"static/js/11.a60474a1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, \"0px\", logout)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { ethers } from 'ethers'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\nexport const getContract = (provider: Web3Provider, address: string, account: string) => {\r\n  const contract = new ethers.Contract(address, erc20, getProviderOrSigner(provider, account) as any)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.allowance(account, masterChefContract.options.address)\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: Web3Provider,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress, userAddress)\r\n  try {\r\n    const balance: string = await contract.balanceOf(userAddress)\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { getMasterChefAddress } from './addressHelpers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract\r\n    .approve(getMasterChefAddress(), ethers.constants.MaxUint256)\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  const tx = await masterChefContract\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  const tx = await sousChefContract\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  const tx = await sousChefContract\r\n    .deposit()\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  const tx = await masterChefContract\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  const res = await tx.wait()\r\n\r\n  return res.hash\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    const tx = await sousChefContract\r\n      .emergencyWithdraw()\r\n    const res = await tx.wait()\r\n    return res.hash\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    const tx = await sousChefContract\r\n      .emergencyWithdraw()\r\n    const res = await tx.wait()\r\n    return res.hash\r\n  }\r\n  const tx = await sousChefContract\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  const tx = await sousChefContract\r\n    .emergencyWithdraw()\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  const tx = await masterChefContract\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  const tx = await sousChefContract\r\n    .deposit('0')\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  const tx = sousChefContract\r\n    .deposit()\r\n  const res = await tx.wait()\r\n  return res.hash\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.com'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div<{ isMobile: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  max-width: 980px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: ${({ isMobile }) => isMobile ? \"40px\" : \"32px\"};\r\n  & > * {\r\n    min-width: 310px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n  viewMode?: number\r\n  isMobile?: boolean\r\n  marginBottom?: string\r\n}\r\n\r\nconst Wrapper = styled.div<{ viewMode: number }>`\r\n  display: ${({ viewMode }) => viewMode === 1 ? 'flex' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, viewMode, isMobile, marginBottom }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()} viewMode={viewMode} style={{ marginBottom: marginBottom }}>\r\n      {!isMobile && <Text style={{ color: '#A5A5A5', fontSize: 12, marginLeft: 12 }}>\r\n        {expanded ? TranslateString(725, 'Hide') : TranslateString(658, 'Details')}\r\n      </Text>}\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background: #151745;\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, OpenNewIcon } from '@robustswap-libs/uikit'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 300;\r\n  box-shadow: 5px 4px 8px 3px rgba(14, 14, 14, 0.2);\r\n  border: 1px solid #293D71;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n  mode: number\r\n}\r\n\r\nexport default function Tooltip({ text, mode, ...rest }: TooltipProps) {\r\n  if (mode === 0)\r\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n  else if (mode === 1) {\r\n    return (\r\n      <Popover placement=\"top\" content={\r\n        <TooltipContainer style={{ width: 'auto' }}>\r\n          <DropDownList />\r\n        </TooltipContainer>} {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport function DropDownList() {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>RBS-BNB</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>View Contract</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>Pair Info</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MouseoverTooltip({ children, mode, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip mode={mode} {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { InfoIcon } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: transparent;\r\n  //color: ${({ theme }) => theme.colors.text};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text, mode, wth, hgh }: { text: string, mode: number, wth: number, hgh: number }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4, marginTop: 'auto', marginBottom: 'auto' }}>\r\n      <Tooltip text={text} show={show} mode={mode}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <InfoIcon style={{ width: wth, height: hgh }} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { LinkExternal, Text, Flex, OpenNewIcon, Button } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport HarvestAction from './HarvestAction'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface ExpandableSectionProps {\r\n  rbsPrice?: BigNumber\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  tokenMode: boolean\r\n  account?: string\r\n  stakedBalance?: BigNumber\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  rbsPrice,\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  tokenMode,\r\n  account,\r\n  bscScanAddress,\r\n  pairinfo,\r\n  addLiquidityUrl\r\n}) => {\r\n  const { stakedBalance, allowance } = useFarmUser(pid)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const tokenAddress = bscScanAddress.replace('https://bscscan.com/token/', '')\r\n  const TranslateString = useI18n()\r\n  const { canHarvest, earnings } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(tokenAddress, lpLabel, 18, `https://robustswap.com/images/farms/${lpLabel === 'WBNB' ? 'BNB' : lpLabel}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [lpLabel, tokenAddress])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tokenMode ? <>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{lpLabel}</Text>\r\n            <StyledLinkExternal href={addLiquidityUrl}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n            <StyledLinkExternal href={bscScanAddress}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n            <StyledLinkExternal href={pairinfo}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" style={{ marginTop: 16 }}>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n            <Text fontSize=\"16px\">Cake-LP</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>\r\n        </Flex> </> :\r\n        <>\r\n          <Flex justifyContent=\"center\">\r\n            <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, marginBottom: 16, width: '100%', height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n              <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n            </Button>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}:</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text> {/* {depositFee / 100} */}\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block>\r\n          </Flex>\r\n        </>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image, Text } from '@robustswap-libs/uikit'\r\nimport { auto } from '@popperjs/core'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  margin-top:auto;\r\n  margin-bottom:auto;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n  console.log(\"symbol:\", tokenSymbol)\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" style={{ marginBottom: 24 }}>\r\n      <div style={{ width: 40, height: 40 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? 40 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: '100%' }}>\r\n        <Heading>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ width: 170, marginTop: auto, marginBottom: auto }}>\r\n              {lpLabel.replace('LP', '')}\r\n              {lpLabel.indexOf('-') === -1 && <Text style={{ fontSize: 12 }}>{TranslateString(509, \"Earn RBS\")}</Text>}\r\n            </div>\r\n            {(tokenSymbol === 'RBS' || tokenSymbol==='RBT') && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} />}\r\n          </div>\r\n        </Heading>\r\n        {/* <Flex justifyContent=\"flex-start\">\r\n          <StyledLinkExternal\r\n            href={bscScanAddress}\r\n          >\r\n            {TranslateString(356, 'View Contract')}\r\n          </StyledLinkExternal>\r\n          <StyledLinkExternal\r\n            href={pairinfo}\r\n          >\r\n            {TranslateString(355, 'Pair Info')}\r\n          </StyledLinkExternal>\r\n        </Flex> */}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      console.log(\"error:\", e)\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport { useReferrerAddressFromCookie } from '../state/hooks'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, referrer)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, referrer)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport useActiveWeb3React from './useActiveWeb3React'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [99999]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useActiveWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n  max?: number | string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, max }) => {\r\n  return (\r\n    <>\r\n      <StyledInputWrapper style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 400, fontSize: 12, lineHeight: '14px', textAlign: 'right' }}>\r\n          Balance: {max.toLocaleString()}\r\n        </Text>\r\n        <div style={{ display: \"flex\", width: '100%' }}>\r\n          {!!startAdornment && startAdornment}\r\n          <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n          {!!endAdornment && endAdornment}\r\n        </div>\r\n      </StyledInputWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #151745;\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  width: auto;\r\n  height: 86px;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width:100%;\r\n  background: none;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n  mode?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0, mode }) => {\r\n  const TranslateString = useI18n()\r\n  const image = `/images/farms/${symbol === 'WBNB' ? 'BNB' : symbol}.svg`;\r\n\r\n  return (\r\n    <StyledTokenInput style={{ marginBottom: mode === 0 ? 0 : 20 }}>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <div>\r\n              <Button variant=\"text\" size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'MAX')}\r\n              </Button>\r\n            </div>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Flex>\r\n                {!(symbol.includes('LP')) && <img src={image} alt={symbol} width={24} height={24} />}\r\n                <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n              </Flex>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n        max={max}\r\n      />\r\n      {mode === 0 && (depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>\r\n            {symbol === 'RBT' ? TranslateString(10000, 'Burn Amount'):TranslateString(10001, 'Deposit Fee')}\r\n          </Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>\r\n            {new BigNumber(value || 0).times(depositFeeBP / 10000).toFixed(8)}{' '} {symbol}\r\n          </Text>\r\n        </StyledMaxText>\r\n      ) : (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>\r\n              {TranslateString(10001, 'Deposit Fee')}\r\n            </Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(0).toFixed(8)}{' '}{symbol}</Text>\r\n        </StyledMaxText>\r\n      ))}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div`\r\n  max-width: 430px;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n  margin-bottom:16px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-left: 4px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n        mode={0}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', depositFeeBP }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        mode={tokenName==='RBT'?0:1}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, IconButton, Heading, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  background-color: transparent;\r\n  svg {\r\n    width: 52px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(321, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentWithdraw} mr=\"10px\">\r\n          <MinusIcon />\r\n        </IconButton>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentDeposit}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ width: rawStakedBalance === 0 ? 'auto' : '100%' }}>\r\n      <div>\r\n        {(rawStakedBalance !== 0 || !tokenName.includes('-')) && (\r\n          <>\r\n            <Heading color='text'>{displayBalance} {tokenName.includes('-') && 'LP'}</Heading>\r\n            <Text fontSize=\"13px\" mt=\"4px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n              ${stakedBalanceUSD.toLocaleString()}\r\n            </Text>\r\n          </>\r\n        )}\r\n      </div>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { AlarmIcon, Button, Flex, Heading, IconButton, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvest?: number\r\n  cardMode?: number\r\n  harvestCount?: () => void\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvest, cardMode = 0, harvestCount }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { account } = useActiveWeb3React()\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      {cardMode === 1 && <div>\r\n        <Heading color={account ? rawEarningsBalance === 0 ? 'textDisabled' : 'text' : 'text'} style={{ textAlign: 'left' }}>\r\n          {account ? displayBalance : '-'}\r\n        </Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n            ${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>}\r\n      <BalanceAndCompound style={{ width: cardMode ? 'auto' : '100%', marginLeft: 'auto' }}>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvest > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={harvestCount} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport { Modal, Text } from '@robustswap-libs/uikit'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { Farm } from '../../../state/types'\r\n\r\ninterface HarvestCountdownModalProps {\r\n  farm: Farm\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst HarvestCountdownModal: React.FC<HarvestCountdownModalProps> = ({\r\n  onDismiss,\r\n  nextHarvestUntil,\r\n  harvestInterval,\r\n  farm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const secondsUntilHarvest = nextHarvestUntil - currentTime\r\n  const timeUntil = getTimePeriods(secondsUntilHarvest > 0 ? secondsUntilHarvest : 0)\r\n\r\n  return (\r\n    <Modal title={TranslateString(10029, 'Harvest In')} onDismiss={onDismiss}>\r\n      <Text bold color=\"primary\" fontSize=\"36px\" style={{ textAlign: 'center' }}>\r\n        {formatTimePeriodCountdown(timeUntil)}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"10px\" style={{ textAlign: 'center' }}>\r\n        {farm.isTokenOnly ? 'Pool' : 'Farm'}: {farm.lpSymbol}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"5px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10027, 'Harvest Interval')}: {(harvestInterval / 3600).toLocaleString()}{' '}\r\n        {TranslateString(10028, 'Hours')}\r\n      </Text>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestCountdownModal\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\r\nimport { Button, Flex, Heading, Text, IconButton, AlarmIcon, useModal } from '@robustswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 4px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  tokenMode: boolean\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n  tokenMode,\r\n  addLiquidityUrl\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum, tokenAddress, account)\r\n    }\r\n    return getContract(ethereum, lpAddress, account)\r\n  }, [ethereum, lpAddress, tokenAddress, account, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (rawStakedBalance === 0 && tokenBalance.toString() === '0' && tokenMode) ? (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ width: '100%' }}>\r\n          {TranslateString(507, 'GET LP')}\r\n        </Button>\r\n      </Flex>\r\n    ) : (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove} style={{ width: '100%', marginTop: !tokenMode ? 25 : 0 }}>\r\n          {TranslateString(326, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" pr=\"3px\" style={{ color: '#A5A5A5' }}>\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          &nbsp;RBS\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvest={nextHarvestUntil} cardMode={1} harvestCount={onPresentHarvestCountdown} />\r\n      {tokenMode ? <>\r\n        <Flex>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {rawStakedBalance === 0 ? TranslateString(453, 'Available LP') : TranslateString(329, 'Staked') + \" LP\"}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          {rawStakedBalance === 0 ?\r\n            <div style={{ textAlign: 'left' }}>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 600 }}>\r\n                {Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP\r\n              </Text>\r\n              <Text fontSize=\"13px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n            </div> :\r\n            <Heading style={{ marginTop: 15, opacity: 0 }} />\r\n          }\r\n          {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n        </Flex>\r\n      </> :\r\n        <>\r\n          <Flex>\r\n            {isApproved && <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 8 }}>\r\n              {TranslateString(329, 'Staked')} {lpName}\r\n            </Text>}\r\n          </Flex>\r\n          {!account ? <UnlockButton fullWidth /> : renderApprovalOrStakeButton()}\r\n        </>\r\n      }\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import BigNumber from \"bignumber.js\"\r\n\r\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, rbsPrice, lpTotalInQuoteToken }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / rbsPrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + (apyAsDecimal / timesCompounded) * (timesCompounded * daysAsDecimalOfYear))\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n  // const exception = lpTotalInQuoteToken?.toString() === '0' ? 100 : 1;\r\n  // return roundToTwoDp(interestEarned * (exception)) // exception when staking is 0\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const swapUrlPathParts = `?outputCurrency=${tokenAddresses[chainId]}`\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / rbsPrice.toNumber()\r\n  const getUrl = lpLabel.includes('-') ?\r\n    `https://exchange.robustswap.com/#/add/${liquidityUrlPathParts}` :\r\n    `https://exchange.robustswap.com/#/swap${swapUrlPathParts}`\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" as=\"a\" href={getUrl} style={{ width: '100%' }}>\r\n          {TranslateString(505, 'Get')} {lpLabel}\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      rbsPrice={rbsPrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Skeleton, Text } from '@robustswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n// import { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: #1E215C;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 16px 16px 0px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 320px !important;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n  background: #151745;\r\n  margin: 0px -16px;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  rbsPrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  usdcPrice?: BigNumber\r\n  usdtPrice?: BigNumber\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  isMobile?: boolean\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice, ethereum, account, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, ethPrice, usdcPrice, usdtPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue && !new BigNumber(totalValue).isNaN()\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const chainId = 56\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.com/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    let lpTokenPriceVsQuote\r\n    if (farm.isTokenOnly) {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.tokenPriceVsQuote)\r\n    } else {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    ethPrice,\r\n    usdcPrice,\r\n    usdtPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n    // farm.tokenSymbol\r\n  ])\r\n\r\n  return (\r\n    <FCard>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        depositFee={farm.depositFeeBP}\r\n        primaryToken={earningToken}\r\n        secondToken={stakingToken}\r\n        tokenSymbol={farm.tokenSymbol}\r\n        bscScanAddress={\r\n          farm.isTokenOnly\r\n            ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n        pairinfo={\r\n          farm.isTokenOnly\r\n            ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n      />\r\n      {!removed && (\r\n        <Block>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n          <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n            {farm.apy ? (\r\n              <>\r\n                {farmAPY ? farmAPY : 0}%\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  rbsPrice={rbsPrice}\r\n                  apy={farm.apy}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Block>\r\n      )}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(408, 'Total Staked')}:\r\n        </Text>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n          {lpLabel.indexOf('-') >= 0 ?\r\n            <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} /> :\r\n            <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} />\r\n          }\r\n        </Flex>\r\n      </Block>\r\n      {/* {lpLabel.indexOf('-') >= 0 &&  */}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n          <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n        </Flex>\r\n      </Block>\r\n      {/* } */}\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        ethereum={ethereum}\r\n        account={account}\r\n        harvestInterval={farm.harvestInterval}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n        rbsPrice={rbsPrice}\r\n        tokenMode={lpLabel.indexOf('-') >= 0}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n        viewMode={1}\r\n        isMobile={isMobile}\r\n        marginBottom=\"16px\"\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          rbsPrice={rbsPrice}\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          tokenMode={lpLabel.indexOf('-') >= 0}\r\n          account={account}\r\n          bscScanAddress={\r\n            farm.isTokenOnly\r\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          pairinfo={\r\n            farm.isTokenOnly\r\n              ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  background-color: transparent;\r\n  svg {\r\n    width: 52px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString(undefined, {\r\n    minimumFractionDigits: 3,\r\n    maximumFractionDigits: 3,\r\n  })\r\n  const tokenMode = tokenName.includes('-')\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(321, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentWithdraw} mr=\"10px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentDeposit}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {renderStakingButtons()}\r\n      <div>\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {!tokenMode ? `${TranslateString(329, 'Staked')} ${tokenName}` : TranslateString(329, 'Staked') + \" LP\"}\r\n          </Text>\r\n          <Text fontSize=\"16px\">{displayBalance} {tokenMode && 'LP'}</Text>\r\n          <Text fontSize=\"12px\">${stakedBalanceUSD.toFixed(3)}</Text>\r\n        </div>\r\n      </div>\r\n    </Flex >\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex alignItems=\"center\">\r\n      <BalanceAndCompound>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading\r\n          color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}\r\n          style={{ fontSize: 16, fontWeight: 400, lineHeight: 1.5 }}>\r\n          {displayBalance}\r\n        </Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"12px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n            ${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  tokenMode: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n  tokenMode\r\n}) => {\r\n\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum, tokenAddress, account)\r\n    }\r\n    return getContract(ethereum, lpAddress, account)\r\n  }, [ethereum, lpAddress, tokenAddress, account, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(326, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport useStake from '../../../../hooks/useStake'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const compoundRawEarningsBalance = getBalanceNumber(earnings.minus(earnings.times(0.05).integerValue()))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      <BalanceAndCompound>\r\n        {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n          <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n            <TadaAlarmIcon />\r\n          </StyledIconButton>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport MobileHarvestAction from './MobileHarvestAction'\r\n\r\nconst Action = styled.div`\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n  text-align: right;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum, tokenAddress, account)\r\n    }\r\n    return getContract(ethereum, lpAddress, account)\r\n  }, [ethereum, lpAddress, tokenAddress, account, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }} justifyContent=\"space-between\">\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {TranslateString(333, 'Staked Tokens')}\r\n          </Text>\r\n          <Text fontSize=\"14px\">{isApproved ? stakedBalance : 0}</Text>\r\n          <Text fontSize=\"12px\">${isApproved ? (stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString() : 0}</Text>\r\n        </div>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(495, 'Enable Farm')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <MobileHarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { LinkExternal, OpenNewIcon, Text, Flex, Button } from '@robustswap-libs/uikit'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport MobileCardActionsContainer from './MobileCardActionsContainer'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: Web3Provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  isMobile: boolean\r\n  removed: boolean\r\n  totalValueFormated?: string\r\n  tokenMode: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<{ tokenMode: boolean }>`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  padding: 24px 0px 0px 0px;\r\n  padding-bottom: ${({ tokenMode }) => tokenMode ? \"24px\" : \"0px\"};\r\n  text-align: left;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledBlock = styled.div`\r\n  background-color: #293D71;\r\n  padding-bottom: 8px;\r\n  margin: 12px 0px;\r\n  padding: 8px 24px;\r\n  background-image: url('/images/farm-step.svg');\r\n  background-position: 16px, center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps & FarmCardActionsProps> = ({\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  rbsPrice,\r\n  isMobile,\r\n  removed,\r\n  totalValueFormated,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { tokenBalance } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const chainId = 56\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(farm.tokenAddresses[chainId], farm.tokenSymbol, 18, `https://robustswap.com/images/farms/${farm.tokenSymbol === 'WBNB' ? 'BNB' : farm.tokenSymbol}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [farm])\r\n\r\n  const bscScanAddress = farm.isTokenOnly\r\n    ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const pairinfo = farm.isTokenOnly\r\n    ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.com/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  return (\r\n    <Wrapper tokenMode={tokenMode}>\r\n      {isMobile ?\r\n        <>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold', color: '#FF6B2A' }}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of PANTHER rewards each farm gets. For example, if a 1x farm was getting 1 PANTHER per block, a 40x farm would be getting 40 PANTHER per block.')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(408, 'Total Staked')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n                {tokenMode ?\r\n                  <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                  <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n                }\r\n              </Flex>\r\n            </Block>\r\n          </Flex>\r\n          <StyledBlock>\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              <div style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                <Text fontSize=\"14px\">{Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP</Text>\r\n                <Text fontSize=\"12px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n              </div>\r\n              <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl}>\r\n                {TranslateString(507, 'GET LP')}\r\n              </Button>\r\n            </Flex>\r\n            <MobileCardActionsContainer\r\n              farm={farm}\r\n              ethereum={ethereum}\r\n              account={account}\r\n              harvestInterval={harvestInterval}\r\n              stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n              rbsPrice={rbsPrice}\r\n            />\r\n          </StyledBlock>\r\n        </> :\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Flex alignItems=\"center\">\r\n            {!tokenMode && <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ marginRight: 16 }}>\r\n              {TranslateString(507, 'GET LP')}\r\n            </Button>}\r\n            <div>\r\n              {tokenMode ?\r\n                <>\r\n                  <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ width: 89, height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n                    <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n                  </Button>\r\n                </> :\r\n                <>\r\n                  <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                  <Text fontSize=\"16px\">{Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP</Text>\r\n                  <Text fontSize=\"12px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n                </>\r\n              }\r\n            </div>\r\n          </Flex>\r\n          {tokenMode && <>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n          </>}\r\n          {tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>}\r\n          {!tokenMode && <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />}\r\n          <CardActionsContainer\r\n            farm={farm}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            harvestInterval={harvestInterval}\r\n            stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n            rbsPrice={rbsPrice}\r\n            tokenMode={tokenMode}\r\n          />\r\n        </Flex>\r\n      }\r\n      {!isMobile && !tokenMode && <Divider style={{ marginTop: 16, marginBottom: 16 }} />}\r\n      {isMobile ?\r\n        <Flex justifyContent=\"space-between\" style={{ padding: '0px 24px' }}>\r\n          {!tokenMode && <><Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"12px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"12px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"12px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex> :\r\n        <Flex>\r\n          {!tokenMode && <>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n              <StyledLinkExternal href={addLiquidityUrl}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n              <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"16px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginTop: -1 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex>\r\n      }\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image } from '@robustswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex) <{ isMobile: boolean }>`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  flex-grow: 0.2;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 24px' : '0px 0px'}\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" isMobile={isMobile}>\r\n      {(tokenSymbol === 'RBS' || tokenSymbol === 'RBT') && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} marginRight={16} />}\r\n      <div style={{ width: 40, height: isMobile ? 40 : 44 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? isMobile ? 40 : 44 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: 165, marginTop: 10 }}>\r\n        <Heading mb=\"8px\" style={{ fontWeight: 800 }}>{lpLabel.replace('LP', '')}</Heading>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / rbsPrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.com/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      rbsPrice={rbsPrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Text, Skeleton, Flex } from '@robustswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FList = styled.div<{ isMobile: boolean }>`\r\n  align-self: baseline;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: ${({ isMobile }) => isMobile ? '0px' : '0px 24px'};\r\n  position: relative;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  background-color: #151745;\r\n  margin: 0px -24px 0px -24px;\r\n  border-radius: 0px 0px 8px 8px;\r\n  padding: 0px 24px 0px 24px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  rbsPrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  usdcPrice?: BigNumber\r\n  usdtPrice?: BigNumber\r\n  ethereum?: Web3Provider\r\n  account?: string,\r\n  isMobile: boolean,\r\n  tokenMode: boolean\r\n}\r\n\r\nconst FarmList: React.FC<FarmCardProps> = ({ farm, removed, rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice, ethereum, account, isMobile, tokenMode }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const { earnings } = useFarmUser(farm.pid)\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, ethPrice, usdcPrice, usdtPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated =\r\n    totalValue && !new BigNumber(totalValue).isNaN()\r\n      ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : '-'\r\n\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  // const earnLabel = 'ROBUST'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    let lpTokenPriceVsQuote\r\n    if (farm.isTokenOnly) {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.tokenPriceVsQuote)\r\n    } else {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    ethPrice,\r\n    usdcPrice,\r\n    usdtPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly\r\n  ])\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n  return (\r\n    <FList isMobile={isMobile} style={{ backgroundColor: '#1E215C', width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      {isMobile ?\r\n        <>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            {!removed && (\r\n              <Block>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n                <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#FF6B2A' }}>\r\n                  {farm.apy ? (\r\n                    <>\r\n                      {farmAPY}%\r\n                      <ApyButton\r\n                        lpLabel={lpLabel}\r\n                        quoteTokenAdresses={quoteTokenAdresses}\r\n                        quoteTokenSymbol={quoteTokenSymbol}\r\n                        tokenAddresses={tokenAddresses}\r\n                        rbsPrice={rbsPrice}\r\n                        apy={farm.apy}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <Skeleton height={24} width={80} />\r\n                  )}\r\n                </Text>\r\n              </Block>\r\n            )}\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'ROBUST Earned')}:</Text>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n            </Block>\r\n            <ExpandableSectionButton\r\n              onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n              expanded={showExpandableSection}\r\n              viewMode={0}\r\n              isMobile={isMobile}\r\n            />\r\n          </Flex>\r\n        </> :\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ height: 88 }}>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          {!removed && (\r\n            <Block style={{ marginBottom: 'auto', marginTop: 'auto' }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n              <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n                {farm.apy ? (\r\n                  <>\r\n                    {farmAPY}%\r\n                    <ApyButton\r\n                      lpLabel={lpLabel}\r\n                      quoteTokenAdresses={quoteTokenAdresses}\r\n                      lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                      quoteTokenSymbol={quoteTokenSymbol}\r\n                      tokenAddresses={tokenAddresses}\r\n                      rbsPrice={rbsPrice}\r\n                      apy={farm.apy}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Skeleton height={24} width={80} />\r\n                )}\r\n              </Text>\r\n            </Block>\r\n          )}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n              {TranslateString(408, 'Total Staked')}:\r\n            </Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800 }}>{!removed ? totalValueFormated : 0}</Text>\r\n              {tokenMode ?\r\n                <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n              }\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n              <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'Earned')}:</Text>\r\n            <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n          </Block>\r\n          <ExpandableSectionButton\r\n            onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n            expanded={showExpandableSection}\r\n            viewMode={0}\r\n            isMobile={isMobile}\r\n          />\r\n        </Flex>\r\n      }\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          farm={farm}\r\n          ethereum={ethereum}\r\n          account={account}\r\n          rbsPrice={rbsPrice}\r\n          isMobile={isMobile}\r\n          removed={removed}\r\n          totalValueFormated={totalValueFormated}\r\n          tokenMode={tokenMode}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FList>\r\n  )\r\n}\r\n\r\nexport default FarmList\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle, Button, Input } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { setWith } from 'lodash';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly, viewMode, setViewMode, filter, setFilter, sort, setSort, isMobile }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSort(event.target.value as number);\r\n  };\r\n  return (\r\n    <Wrapper isMobile={isMobile} style={{ width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      <Flex style={{ paddingBottom: isMobile ? '16px' : 0 }}>\r\n        {!isMobile &&\r\n          <>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(false)\r\n              Cookies.set('viewMode', false)\r\n            }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-list.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-list-active.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(true)\r\n              Cookies.set('viewMode', true)\r\n            }} style={{ marginRight: 28 }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-card-active.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-card.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n          </>}\r\n        <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: 0, width: 67 }}>\r\n            {TranslateString(601, 'Live')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: 0, width: 108 }}>\r\n            {TranslateString(599, 'Finished')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <ToggleWrapper>\r\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n          <Text style={{ color: '#7381FC', fontSize: isMobile ? '14px' : '16px' }}> {TranslateString(699, 'Staked only')}</Text>\r\n        </ToggleWrapper>\r\n      </Flex>\r\n      <Flex>\r\n        <Input\r\n          id=\"search\"\r\n          name=\"search-card\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(10011, 'Search')}\r\n          style={{ maxWidth: 170, marginRight: 8 }}\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.currentTarget.value)}\r\n        // isWarning={error}\r\n        // disabled={isloading}\r\n        />\r\n        <Select\r\n          value={sort}\r\n          onChange={handleChangeSelect}\r\n          style={{\r\n            borderRadius: 8,\r\n            background: \"rgba(30, 33, 92, 1)\",\r\n            paddingLeft: \"16px\",\r\n            width: '100%',\r\n            // border: '1px solid rgba(107, 161, 255, 0.2)',\r\n            height: 40,\r\n            color: '#7381FC',\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            backgroundColor: '#1E215C'\r\n          }}\r\n          IconComponent={\r\n            () => (<ArrowDropDownIcon style={{ color: \"#7381FC\" }} />)\r\n          }\r\n          disableUnderline\r\n        >\r\n          <StyledMenuItem value={1}>{TranslateString(395, 'HOT')}</StyledMenuItem>\r\n          <StyledMenuItem value={2}>{TranslateString(457, 'Multiplier')}</StyledMenuItem>\r\n          <StyledMenuItem value={3}>{TranslateString(352, 'APR')}</StyledMenuItem>\r\n          <StyledMenuItem value={4}>{TranslateString(686, 'Liquidity')}</StyledMenuItem>\r\n          <StyledMenuItem value={5}>{TranslateString(331, 'Earned')}</StyledMenuItem>\r\n        </Select>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div<{ isMobile: boolean }>`\r\n  display: ${({ isMobile }) => isMobile ? 'block' : 'flex'};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 0px' : '0px 8px'};\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 16px;\r\n  ${Text} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 0px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 16px;\r\n  background: transparent;\r\n`\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMenuItem = styled(MenuItem)`\r\n  color: #7381FC;\r\n`","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport Cookies from 'js-cookie'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceRbsBusd, usePriceEthBusd, usePriceRbtBusd, usePriceUsdcBusd, usePriceUsdtBusd } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from 'hooks/useGetDocumentTitlePrice'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmList from './components/FarmList/FarmList'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Hero = styled.div<{ isMobile: boolean, tokenMode: boolean }>`\r\n  background-image: ${({ tokenMode, isMobile }) => !tokenMode ?\r\n    (isMobile ? \"url('/images/farms/farms-header-bg-mobile.png')\" : \"url('/images/farms/farms-header-bg.png')\") :\r\n    (isMobile ? \"url('/images/farms/pools-header-bg-mobile.png')\" : \"url('/images/farms/pools-header-bg.png')\")};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 44px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n  height: ${({ isMobile }) => isMobile ? \"240px\" : \"320px\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 34px;\r\n  line-height: 40px;\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 36px;\r\n`\r\nconst PubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  max-width: ${({ isMobile }) => isMobile ? \"327px\" : \"538px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300; \r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst FarmBanner = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/farms-banner-bg.png')\" : \"url('/images/farms/farms-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 34px 86px 34px 25px;\r\n`\r\nconst FarmBanner1 = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/pools-banner-bg.png')\" : \"url('/images/farms/pools-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 48px 96px 48px 25px;\r\n`\r\nconst BannerText = styled.text`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n`\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const isMobile = useMedia('(max-width: 768px)')\r\n  const TranslateString = useI18n()\r\n  let farmsLP = useFarms()\r\n  const [filter, setFilter] = useState('')\r\n  const [sort, setSort] = useState(1);\r\n  const { account, library } = useActiveWeb3React()\r\n  const rbsPrice = usePriceRbsBusd()\r\n  let bnbPrice = usePriceBnbBusd()\r\n  bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  const ethPrice = usePriceEthBusd()\r\n  const usdcPrice = usePriceUsdcBusd()\r\n  const usdtPrice = usePriceUsdtBusd()\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n  const { tokenMode } = farmsProps\r\n  useGetDocumentTitlePrice(!tokenMode ? 'Farms' : 'Pools')\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n  const [viewMode, setViewMode] = useState(isMobile ? isMobile : Cookies.get('viewMode') ? Cookies.get('viewMode') === 'true' : !isMobile)\r\n\r\n  const sortByMultiplier = (item1, item2) => {\r\n    return item2.multiplier.replace('X', '') - item1.multiplier.replace('X', '');\r\n  }\r\n  const sortByAPR = (item1, item2) => {\r\n    return item2.apy - item1.apy\r\n  }\r\n  const sortByLiquidity = (item1, item2) => {\r\n    return item2.lpTotalInQuoteToken - item1.lpTotalInQuoteToken\r\n  }\r\n  const sortByEarned = (item1, item2) => {\r\n    return item2.userData.earnings - item1.userData.earnings\r\n  }\r\n  // activeFarms.sort(sortByMultiplier);\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  if (filter !== '') {\r\n    activeFarms = activeFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  if (filter !== '') {\r\n    inactiveFarms = inactiveFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  if (filter !== '') {\r\n    stakedOnlyFarms = stakedOnlyFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const rbsRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n          .times(new BigNumber(farm.poolWeight))\r\n          .div(new BigNumber(10).pow(18))\r\n\r\n        const rbsRewardPerYear = rbsRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        let apy = rbsPrice.times(rbsRewardPerYear)\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          totalValue = totalValue.times(ethPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n          totalValue = totalValue.times(usdcPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n          totalValue = totalValue.times(usdtPrice)\r\n        }\r\n\r\n        if (totalValue.comparedTo(0) > 0) {\r\n          apy = apy.div(totalValue)\r\n        }\r\n        else apy = apy.div(100000000)  // exception when staking is 0\r\n        return { ...farm, apy }\r\n      })\r\n\r\n      if (sort === 1) {\r\n        // farmsToDisplayWithAPY.sort()\r\n      } else if (sort === 2) {\r\n        farmsToDisplayWithAPY.sort(sortByMultiplier)\r\n      } else if (sort === 3) {\r\n        farmsToDisplayWithAPY.sort(sortByAPR)\r\n      } else if (sort === 4) {\r\n        farmsToDisplayWithAPY.sort(sortByLiquidity)\r\n      } else if (sort === 5) {\r\n        farmsToDisplayWithAPY.sort(sortByEarned)\r\n      }\r\n      if (viewMode) {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmCard\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            rbsPrice={rbsPrice}\r\n            usdcPrice={usdcPrice}\r\n            usdtPrice={usdtPrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={library}\r\n            account={account}\r\n            isMobile={false}\r\n          />\r\n        ))\r\n      } else {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmList\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            rbsPrice={rbsPrice}\r\n            ethPrice={ethPrice}\r\n            usdcPrice={usdcPrice}\r\n            usdtPrice={usdtPrice}\r\n            ethereum={library}\r\n            account={account}\r\n            isMobile={isMobile}\r\n            tokenMode={tokenMode}\r\n          />\r\n        ))\r\n      }\r\n    },\r\n    [bnbPrice, account, rbsPrice, ethPrice, usdcPrice, usdtPrice, library, sort, viewMode, isMobile, tokenMode],\r\n  )\r\n  return (\r\n    <>\r\n      <Hero isMobile={isMobile} tokenMode={tokenMode}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbsPrice.toFixed(2)}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '38px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ display: 'block' }}>\r\n            <StyledHeading isMobile={isMobile}>\r\n              {tokenMode\r\n                ? TranslateString(676, 'Pools')\r\n                : TranslateString(674, 'Farms')}\r\n            </StyledHeading>\r\n            <PubTitle isMobile={isMobile}>\r\n              {tokenMode ?\r\n                TranslateString(730, 'Looking for competitive rewards, low-risk, and no impermanent-loss farming alternative? Stake your RBS and other tokens below to earn more RBS.') :\r\n                TranslateString(729, 'ROBUSTSWAP Farms offer multiple farming opportunities and high rewards to you. Get rewarded by staking your LP tokens.')\r\n              }\r\n            </PubTitle>\r\n          </div>\r\n          {!isMobile && <div>\r\n            {tokenMode ?\r\n              <>\r\n                <FarmBanner1 isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(737, 'High APR,')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(738, 'low risk earning.')}</BannerText>\r\n                </FarmBanner1>\r\n              </>\r\n              :\r\n              <>\r\n                <FarmBanner isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(734, 'Enjoy')}</BannerText>&nbsp;\r\n                    <BannerText style={{ color: '#D6EE47' }}>{TranslateString(735, 'FREE')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(736, 'deposit with our featured farms.')}</BannerText>\r\n                </FarmBanner>\r\n              </>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </Hero>\r\n      <Page>\r\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} viewMode={viewMode} setViewMode={setViewMode} filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} isMobile={isMobile} />\r\n        <div>\r\n          <FlexLayout isMobile={isMobile}>\r\n            <Route exact path={`${path}`}>\r\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n            </Route>\r\n            <Route exact path={`${path}/history`}>\r\n              {farmsList(inactiveFarms, true)}\r\n            </Route>\r\n          </FlexLayout>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}