{"version":3,"sources":["config/index.ts","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","views/Account/Account.tsx"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","useTotalLockedUpRewards","useState","totalLockedUpRewards","setTotalLockedUpRewards","slowRefresh","useRefresh","masterChefContract","useMasterchef","useEffect","a","methods","call","locked","fetchTotalLockedUpRewards","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","account","useWallet","fastRefresh","fetchBalances","callsBalance","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","callsHarvest","multicall","masterChefABI","rawResultsBalance","rawResultsHarvest","results","index","balance","nextHarvestUntil","toNumber","useAllEarnings","balances","setBalance","fetchAllBalances","calls","res","Divider","React","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","Card","_props$raised","raised","Paper","elevation","overflow","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","concat","capitalize","typography","caption","button","overline","srOnly","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","Account","useStyles","TranslateString","useI18n","isMobile","useMedia","connect","reset","onPresentConnectModal","useWalletModal","activeSwitcher","setActiveSwitcher","earnings","setEarnings","totalValue","useTotalValue","totalSupply","useTotalSupply","burnedBalance","useBurnedBalance","getCakeAddress","masterChefBalance","useMasterChefBalance","totalLockedIncludeMasterChef","plus","circSupply","minus","cakeSupply","getBalanceNumber","earningsSum","reduce","accum","earning","div","pow","cakePriceUsd","usePriceCakeBusd","bnbPrice","usePriceBnbBusd","ethPrice","usePriceEthBusd","changeSwitcher","event","val","target","value","earningVal","pantherWithAPY","useFarms","filter","isTokenOnly","multiplier","cakeRewardPerYear","rbsPerBlock","times","poolWeight","apy","totalValue1","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","ETH","comparedTo","farmAPY","toLocaleString","minimumFractionDigits","maximumFractionDigits","Box","mainContainer","pageTitle","subPageTitle","bodyWrapper","cardWrapper1","statsValue","style","fontSize","fontWeight","fontFamily","background","borderRadius","padding","marginTop","Select","onChange","IconComponent","paddingLeft","paddingRight","disableUnderline","MenuProps","getContentAnchorEl","anchorOrigin","horizontal","MenuItem","justifyContent","alignItems","paddingTop","Button","switchButton","onClick","paddingBottom","src","alt","toFixed","cardWrapper","walletButton","bgWrapper"],"mappings":"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","file":"static/js/19.be24f7bc.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.fi'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\nimport { useMasterchef } from './useContract'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n  nextHarvestUntil: number\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const callsBalance = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const callsHarvest = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'userInfo',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResultsBalance = await multicall(masterChefABI, callsBalance)\r\n      const rawResultsHarvest = await multicall(masterChefABI, callsHarvest)\r\n      const results = farmsConfig.map((farm, index) => ({\r\n        ...farm,\r\n        balance: new BigNumber(rawResultsBalance[index]),\r\n        nextHarvestUntil: rawResultsHarvest[index].nextHarvestUntil.toNumber(),\r\n      }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport const useTotalLockedUpRewards = () => {\r\n  const [totalLockedUpRewards, setTotalLockedUpRewards] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalLockedUpRewards() {\r\n      const locked = await masterChefContract.methods.totalLockedUpRewards().call()\r\n      setTotalLockedUpRewards(new BigNumber(locked))\r\n    }\r\n\r\n    fetchTotalLockedUpRewards()\r\n  }, [slowRefresh, masterChefContract])\r\n\r\n  return totalLockedUpRewards\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const res = await multicall(masterChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { useMedia } from 'react-use'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport Card from '@material-ui/core/Card'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport { useWalletModal } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useFarms, useTotalValue, usePriceCakeBusd, usePriceBnbBusd, usePriceEthBusd } from 'state/hooks'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useTotalSupply, useBurnedBalance, useMasterChefBalance } from 'hooks/useTokenBalance'\r\nimport useAllEarnings from '../../hooks/useAllEarnings'\r\nimport useStyles from '../../assets/styles'\r\nimport { useTotalLockedUpRewards } from '../../hooks/useFarmsWithBalance'\r\n\r\nconst Account = () => {\r\n  const classes = useStyles.account()\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 800px)')\r\n  const { connect, reset } = useWallet()\r\n  const { account } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const [activeSwitcher, setActiveSwitcher] = useState(0)\r\n  const [earnings, setEarnings] = useState(0)\r\n  const totalValue = useTotalValue()\r\n\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const masterChefBalance = useMasterChefBalance(getCakeAddress())\r\n  const totalLocked = useTotalLockedUpRewards()\r\n  const totalLockedIncludeMasterChef = totalLocked.plus(masterChefBalance)\r\n  const circSupply = totalSupply\r\n    ? totalSupply.minus(burnedBalance.plus(totalLockedIncludeMasterChef))\r\n    : new BigNumber(0)\r\n  const cakeSupply = getBalanceNumber(circSupply)\r\n  const allEarnings = useAllEarnings()\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const changeSwitcher = (event: any) => {\r\n    let val = event;\r\n    if (typeof val !== 'number') {\r\n      val = val.target.value;\r\n    }\r\n    setActiveSwitcher(val);\r\n    let earningVal = earningsSum / 365\r\n    if (val === 0) {\r\n      earningVal = earningsSum / 365\r\n    } else if (val === 1) {\r\n      earningVal = earningsSum / 52\r\n    } else if (val === 2) {\r\n      earningVal = earningsSum / 12\r\n    } else if (val === 3) {\r\n      earningVal = earningsSum\r\n    }\r\n    setEarnings(earningVal)\r\n  }\r\n  const farmsLP = useFarms()\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === true && farm.multiplier !== '0X')\r\n  const pantherWithAPY: any[] = activeFarms.map((farm) => {\r\n    const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n      .times(new BigNumber(farm.poolWeight))\r\n      .div(new BigNumber(10).pow(18))\r\n    const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n    let apy = cakePriceUsd.times(cakeRewardPerYear)\r\n\r\n    let totalValue1 = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      totalValue1 = totalValue1.times(bnbPrice)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      totalValue1 = totalValue1.times(ethPrice)\r\n    }\r\n\r\n    if (totalValue1.comparedTo(0) > 0) {\r\n      apy = apy.div(totalValue1)\r\n    }\r\n    return { ...farm, apy }\r\n  })\r\n  const farmAPY =\r\n    pantherWithAPY[0].apy &&\r\n    pantherWithAPY[0].apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n  return (\r\n    <Box className={classes.mainContainer}>\r\n      <Typography className={classes.pageTitle}>Your PANTHER Stats</Typography>\r\n      <Typography className={classes.subPageTitle}>Keep track of your pool & farms.</Typography>\r\n      <Box className={classes.bodyWrapper}>\r\n        {account ? (\r\n          <Card className={classes.cardWrapper1}>\r\n            <Box className={classes.statsValue}>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#7381FC' }}>\r\n                TVL All Pools\r\n              </Typography>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#F0EFEF' }}>\r\n                ${totalValue ? totalValue.toNumber().toLocaleString() : 0}\r\n              </Typography>\r\n            </Box>\r\n            <Box className={classes.statsValue}>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#7381FC' }}>\r\n                PANTHER Holdings\r\n              </Typography>\r\n              <Typography style={{ fontSize: 24, fontWeight: 600, fontFamily: 'Poppin', color: '#F0EFEF' }}>\r\n                {cakeSupply ? cakeSupply.toLocaleString() : 0}\r\n              </Typography>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                background: '#6BA1FF',\r\n                color: '#FCFCFC',\r\n                borderRadius: 8,\r\n                fontFamily: 'Poppin',\r\n                fontSize: 20,\r\n                fontWeight: 'bold',\r\n                padding: '9px 32px',\r\n                textAlign: 'left',\r\n                marginTop: 8,\r\n              }}\r\n            >\r\n              Earnings\r\n            </Box>\r\n            {!isMobile ? (\r\n              <Box style={{ width: '100%', display: 'flex', justifyContent: 'space-between', paddingTop: 24 }}>\r\n                <Button\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 0,\r\n                  })}\r\n                  // className={activeSwitcher !== 0 ? classes.switchButton : classes.activeSwitcher}\r\n                  onClick={() => changeSwitcher(0)}\r\n                >\r\n                  Daily\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 1,\r\n                  })}\r\n                  onClick={() => changeSwitcher(1)}\r\n                >\r\n                  Weekly\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 2,\r\n                  })}\r\n                  onClick={() => changeSwitcher(2)}\r\n                >\r\n                  Monthly\r\n                </Button>\r\n                <Button\r\n                  style={{ marginRight: 0 }}\r\n                  className={clsx(classes.switchButton, {\r\n                    [classes.activeSwitcher]: activeSwitcher === 3,\r\n                  })}\r\n                  onClick={() => changeSwitcher(3)}\r\n                >\r\n                  Yearly\r\n                </Button>\r\n              </Box>\r\n            ) : (\r\n              <Box>\r\n                <Select\r\n                  value={activeSwitcher}\r\n                  onChange={changeSwitcher}\r\n                  IconComponent={() => <ArrowDropDownIcon />}\r\n                  style={{\r\n                    width: '100%',\r\n                    paddingLeft: '16px',\r\n                    paddingRight: '16px',\r\n                    background: 'rgba(107, 161, 255, 0.2)',\r\n                    marginTop: '24px',\r\n                    borderRadius: 8,\r\n                    fontFamily: 'Poppin',\r\n                  }}\r\n                  disableUnderline\r\n                  MenuProps={{\r\n                    getContentAnchorEl: null,\r\n                    anchorOrigin: {\r\n                      vertical: 'bottom',\r\n                      horizontal: 'left',\r\n                    },\r\n                  }}\r\n                >\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={0}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Daily</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={1}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Weekly</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={2}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Monthly</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }} value={3}>\r\n                    <Typography style={{ fontSize: '20px', fontWeight: 500, padding: '0px 16px', fontFamily: 'Poppin' }}>Yearly</Typography>\r\n                  </MenuItem>\r\n                </Select>\r\n              </Box>\r\n            )}\r\n            <Box\r\n              style={{ textAlign: 'left', alignItems: 'center', display: 'flex', paddingTop: 16, paddingBottom: 24 }}\r\n            >\r\n              <img src=\"\" alt=\"\" style={{ width: 60, height: 60 }} />\r\n              <Box>\r\n                <Typography style={{ paddingLeft: 16, fontSize: 34, fontWeight: 500, fontFamily: 'Poppin' }}>\r\n                  {earnings ? earnings.toFixed(3) : (earningsSum / 365).toFixed(3)}\r\n                </Typography>\r\n                <Typography style={{ paddingLeft: 16, fontSize: 20, fontWeight: 'bold', fontFamily: 'Poppin' }}>\r\n                  $ {earnings ? (cakePriceUsd.toNumber() * earnings).toFixed(2) : ((cakePriceUsd.toNumber() * earningsSum) / 365).toFixed(2)}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Divider />\r\n            <Box style={{ textAlign: 'left', paddingTop: 24 }}>\r\n              <Typography style={{ fontSize: 20, fontWeight: 'bold', fontFamily: 'Poppin', paddingBottom: 0 }}>\r\n                {TranslateString(352, 'APR')}\r\n              </Typography>\r\n              <Typography style={{ fontSize: 34, fontWeight: 500, fontFamily: 'Poppin', paddingTop: 0 }}>\r\n                {farmAPY} %\r\n              </Typography>\r\n            </Box>\r\n          </Card>\r\n        ) : (\r\n          <Card className={classes.cardWrapper}>\r\n            <Typography style={{ fontSize: 16, fontFamily: 'Poppin', paddingBottom: 24 }}>\r\n              Please unlock your wallet to see your stats\r\n            </Typography>\r\n            <Button className={classes.walletButton} onClick={onPresentConnectModal}>\r\n              UNLOCK WALLET\r\n            </Button>\r\n          </Card>\r\n        )}\r\n        {account ? (\r\n          <Box className={classes.bgWrapper}>\r\n            <img src=\"/images/stats-bg-active.svg\" alt=\"bg_image\" />\r\n          </Box>\r\n        ) : (\r\n          <Box className={classes.bgWrapper}>\r\n            <img src=\"/images/stats-bg.svg\" alt=\"bg_image\" />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Account\r\n"],"sourceRoot":""}