{"version":3,"sources":["utils/wallet.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/HarvestCountdownModal.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/getLiquidityUrlPathParts.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmList/StakeAction.tsx","views/Farms/components/FarmList/HarvestAction.tsx","views/Farms/components/FarmList/CardActionsContainer.tsx","views/Farms/components/FarmList/MobileHarvestAction.tsx","views/Farms/components/FarmList/MobileCardActionsContainer.tsx","views/Farms/components/FarmList/DetailsSection.tsx","views/Farms/components/FarmList/CardHeading.tsx","views/Farms/components/FarmList/ApyCalculatorModal.tsx","views/Farms/components/FarmList/ApyButton.tsx","views/Farms/components/FarmList/FarmList.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx","utils/formatBalance.ts","components/UnlockButton.tsx","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","utils/callHelpers.ts","hooks/useHarvest.ts","config/index.ts"],"names":["registerToken","tokenAddress","tokenSymbol","tokenDecimals","tokenImage","a","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","tokenAdded","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","toString","formatTimePeriodCountdown","periods","FlexLayout","styled","div","isMobile","Wrapper","viewMode","theme","colors","primary","ExpandableSectionButton","onClick","expanded","marginBottom","TranslateString","useI18n","role","style","color","fontSize","marginLeft","defaultProps","PopoverContainer","props","show","card","transparentize","textSubtle","ReferenceElement","Arrow","Popover","content","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","current","tick","id","useInterval","useCallback","ref","popper","className","arrow","TooltipContainer","Tooltip","text","mode","rest","width","DropDownList","display","marginRight","height","marginTop","QuestionWrapper","invertedContrast","QuestionHelper","wth","hgh","setShow","open","close","onMouseEnter","onMouseLeave","Block","StyledLinkExternal","LinkExternal","DetailsSection","rbsPrice","lpLabel","depositFee","harvestInterval","pid","tokenMode","stakedTokenPriceUSD","account","bscScanAddress","pairinfo","addLiquidityUrl","useFarmUser","allowance","stakedBalance","isGreaterThan","replace","classes","canHarvest","earnings","useStyles","chart","registerNativeToken","justifyContent","href","alignItems","toLocaleString","metamaskButton","borderRadius","border","fontWeight","padding","background","src","alt","Flex","CardHeading","primaryToken","secondToken","textAlign","paddingLeft","auto","indexOf","useApprove","lpContract","dispatch","useDispatch","useWallet","masterChefContract","useMasterchef","onApprove","approve","tx","fetchFarmUserDataAsync","useStake","referrer","useReferrerAddressFromCookie","handleStake","amount","stake","txHash","console","log","info","onStake","useUnstake","handleUnstake","unstake","onUnstake","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","radii","default","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","max","lineHeight","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","onSelectMax","depositFeeBP","variant","includes","BigNumber","times","toFixed","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","getBalanceNumber","stakedBalanceUSD","displayBalance","useModal","onPresentDeposit","onPresentWithdraw","mt","minWidth","backgroundColor","boxShadow","mr","BalanceAndCompound","StyledIconButton","IconButton","warning","tada","keyframes","TadaAlarmIcon","AlarmIcon","HarvestAction","nextHarvest","cardMode","harvestCount","onReward","useHarvest","rawEarningsBalance","earningBalanceUSD","mb","opacity","gt","HarvestCountdownModal","nextHarvestUntil","farm","secondsUntilHarvest","timeUntil","bold","isTokenOnly","lpSymbol","Action","CardActions","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","tokenAddresses","lpAddress","process","lpName","toUpperCase","isApproved","getContract","handleApprove","error","renderApprovalOrStakeButton","as","onPresentHarvestCountdown","textTransform","pr","Number","toNumber","UnlockButton","fullWidth","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","firstPart","secondPart","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","apyAsDecimal","lpTotalInQuoteToken","daysAsDecimalOfYear","principal","finalAmount","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","Link","apy","liquidityUrlPathParts","swapUrlPathParts","oneThousandDollarsWorthOfCake","getUrl","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","paddingRight","ApyButton","onPresentApyModal","ml","RainbowLight","StyledCardAccent","FCard","Divider","ExpandingWrapper","FarmCard","removed","bnbPrice","ethPrice","usdcPrice","usdtPrice","showExpandableSection","setShowExpandableSection","earningToken","stakingToken","totalValue","QuoteToken","BNB","ETH","USDC","USDT","totalValueFormated","isNaN","undefined","maximumFractionDigits","exception","farmAPY","minimumFractionDigits","lpTokenPriceVsQuote","tokenPriceVsQuote","quoteTokenBlanceLP","lpTotalSupply","multiplier","CardActionsContainer","minus","integerValue","MobileHarvestAction","StyledBlock","MobileCardActionsContainer","StyledLink","external","textDecoration","FList","FarmList","innerWidth","setWth","document","getElementsByClassName","clientWidth","min1","setMin1","min2","setMin2","maxWidth","FarmTabButtons","stakedOnly","setStakedOnly","setViewMode","filter","setFilter","sort","setSort","useRouteMatch","url","isExact","paddingBottom","StyledButton","Cookies","set","activeIndex","to","ToggleWrapper","scale","checked","Select","event","target","IconComponent","disableUnderline","StyledMenuItem","Button","MenuItem","Hero","mediaQueries","lg","StyledHeading","Heading","PubTitle","LogTitle","LogPrice","FarmBanner","FarmBanner1","BannerText","Farms","farmsProps","path","useMedia","farmsLP","useFarms","usePriceRbsBusd","usePriceBnbBusd","usePriceEthBusd","usePriceUsdcBusd","usePriceUsdtBusd","rbtPrice","usePriceRbtBusd","useGetDocumentTitlePrice","fastRefresh","useRefresh","get","sortByMultiplier","item1","item2","sortByAPR","sortByLiquidity","sortByEarned","userData","activeFarms","inactiveFarms","stakedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","rbsRewardPerYear","rbsPerBlock","poolWeight","pow","BLOCKS_PER_YEAR","comparedTo","borderRight","Page","exact","balance","dividedBy","connect","reset","onPresentConnectModal","useWalletModal","self","provider","Web3","eth","Contract","erc20","getTokenBalance","userAddress","contract","methods","balanceOf","call","makeStyles","createStyles","mainContainer","palette","breakpoints","down","cardWrapper","hegiht","paper","cardWrapper1","pageTitle","fontFamily","subPageTitle","bgWrapper","bodyWrapper","flexDirection","walletButton","statsValue","switchButton","flex","activeSwitcher","base","root","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","chartHeader","paddingTop","activeStatus","deactiveStatus","changePercent","chartTitle","currentChartValue","tabList","secondary","light","select","detailChartTabs","mobileMenuItem","ethers","constants","MaxUint256","send","from","deposit","on","transactionHash","sousStake","sousChefContract","sousStakeBnb","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","farmPid","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL"],"mappings":"4MAgDaA,G,OAAa,uCAAG,WAC3BC,EACAC,EACAC,EACAC,GAJ2B,eAAAC,EAAA,sEAMDC,OAAuBC,SAASC,QAAQ,CAChEC,OAAQ,oBACRC,OAAQ,CACNC,KAAM,QACNC,QAAS,CACPC,QAASZ,EACTa,OAAQZ,EACRa,SAAUZ,EACVa,MAAOZ,MAdc,cAMrBa,EANqB,yBAmBpBA,GAnBoB,2CAAH,8D,uFC9CbC,EAAiB,WAC5B,MAA0CC,oBAAS,IAAIC,MAAOC,WAA9D,mBAAOC,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,qBAAU,WACR,IAIMC,EAAUC,aAAY,WAH1BH,GAAiB,SAACI,GAAD,OAAgBA,EAAa,SAGN,KAE1C,OAAO,kBAAMC,cAAcH,MAC1B,IAEIH,I,kCCfT,IACMO,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQD,EACNE,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTP,QAAS,GA8BX,OA3BIC,GAASH,IACXI,EAASC,MAAQK,KAAKC,MAAMR,EAAQH,GACpCG,GAASC,EAASC,MAAQL,GAGxBG,GAASJ,IACXK,EAASE,OAASI,KAAKC,MAAMR,EAAQJ,GACrCI,GAASC,EAASE,OAASP,GAGzBI,GAASL,IACXM,EAASG,KAAOG,KAAKC,MAAMR,EAAQL,GACnCK,GAASC,EAASG,KAAOT,GAGvBK,GAASN,IACXO,EAASI,MAAQE,KAAKC,MAAMR,EAAQN,GACpCM,GAASC,EAASI,MAAQX,GAGxBM,GA1CoB,KA2CtBC,EAASK,QAAUC,KAAKC,MAAMR,EA3CR,IA4CtBA,GA5CsB,GA4CbC,EAASK,SAGpBL,EAASF,QAAUC,EAEZC,I,kCC/CT,kCAIA,IAgBaQ,EAAU,SAACC,GACtB,IAAIC,EAAYD,EAAOE,WAQvB,OANe,IAAXF,EACFC,EAAY,KACHD,EAAS,KAClBC,EAAS,WAAOD,IAGXC,GAOIE,EAA4B,SAACC,GACxC,IAAMT,EAAQS,EAAQT,MAAuB,GAAfS,EAAQV,KACtC,MAAM,GAAN,OAAUK,EAAQJ,GAAlB,YAA4BI,EAAQK,EAAQR,SAA5C,YAAwDG,EAAQK,EAAQf,Y,8NCpB3DgB,EAlBIC,IAAOC,IAAV,oUAQG,qBAAGC,SAA0B,OAAS,U,qECGnDC,EAAUH,IAAOC,IAAV,qJACA,cAAGG,SAAH,MAAmC,UAMpC,qBAAGC,MAAkBC,OAAOC,WAIlCC,EAAkE,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,SAAUN,EAAuC,EAAvCA,SAAUF,EAA6B,EAA7BA,SAAUS,EAAmB,EAAnBA,aAC1GC,EAAkBC,cACxB,OACE,eAACV,EAAD,CAAS,aAAW,kCAAkCW,KAAK,SAASL,QAAS,kBAAMA,KAAWL,SAAUA,EAAUW,MAAO,CAAEJ,aAAcA,GAAzI,WACIT,GAAY,cAAC,IAAD,CAAMa,MAAO,CAAEC,MAAO,UAAWC,SAAU,GAAIC,WAAY,IAA3D,SACXR,EAAWE,EAAgB,IAAK,QAAUA,EAAgB,IAAK,aAEjEF,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCF,EAAwBW,aAAe,CACrCT,UAAU,GAGGF,I,MAAAA,I,mFChCf,IAAMY,EAAmBpB,IAAOC,IAAV,6OAEN,SAACoB,GAAD,OAAYA,EAAMC,KAAO,UAAY,YACxC,SAACD,GAAD,OAAYA,EAAMC,KAAO,EAAI,KAG1B,qBAAGjB,MAAkBC,OAAOiB,OAChBC,YAAe,GAAK,YACrC,qBAAGnB,MAAkBC,OAAOmB,cAIjCC,EAAmB1B,IAAOC,IAAV,sDAIhB0B,EAAQ3B,IAAOC,IAAV,6tBAyDI,SAAS2B,EAAT,GAAiF,IAAD,IAA7DC,EAA6D,EAA7DA,QAASP,EAAoD,EAApDA,KAAMQ,EAA8C,EAA9CA,SAA8C,IAApCC,iBAAoC,MAAxB,OAAwB,EAC7F,EAAgD/D,mBAAgC,MAAhF,mBAAOgE,EAAP,KAAyBC,EAAzB,KACA,EAA0CjE,mBAAgC,MAA1E,mBAAOkE,EAAP,KAAsBC,EAAtB,KACA,EAAwCnE,mBAAgC,MAAxE,mBAAOoE,EAAP,KAAqBC,EAArB,KACA,EAAuCC,YAAUN,EAAkBE,EAAe,CAChFH,YACAQ,SAAU,QACVC,UAAW,CACT,CAAEC,KAAM,SAAUhF,QAAS,CAAEiF,OAAQ,CAAC,EAAG,KACzC,CAAED,KAAM,QAAShF,QAAS,CAAEkF,QAASP,OALjCQ,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,WAexB,OClGa,SAAqBC,EAAsBC,GAAuC,IAAjBC,IAAgB,yDACxFC,EAAgBC,mBAGtB9E,qBAAU,WACR6E,EAAcE,QAAUL,IACvB,CAACA,IAGJ1E,qBAAU,WACR,SAASgF,IACP,IAAQD,EAAYF,EAAZE,QACJA,GACFA,IAIJ,GAAc,OAAVJ,EAAgB,CACdC,GAASI,IACb,IAAMC,EAAK/E,YAAY8E,EAAML,GAC7B,OAAO,kBAAMvE,cAAc6E,OAG5B,CAACN,EAAOC,IDyEXM,CALuBC,uBAAY,WAC7BX,GACFA,MAED,CAACA,IACwBvB,EAAO,IAAM,MAGvC,qCACE,cAACI,EAAD,CAAkB+B,IAAKxB,EAAvB,SAAoDH,IACpD,cAAC,IAAD,UACE,eAACV,EAAD,yBAAkBE,KAAMA,EAAMmC,IAAKtB,EAAyBpB,MAAO6B,EAAOc,QAAYZ,EAAWY,QAAjG,cACG7B,EACD,cAACF,EAAD,aACEgC,UAAS,oCAAWb,EAAWY,cAAtB,aAAW,EAAoB,gCAA/B,QAA2D,IACpED,IAAKpB,EACLtB,MAAO6B,EAAOgB,OACVd,EAAWc,iB,0BEzGrBC,EAAmB7D,IAAOC,IAAV,2RAkBP,SAAS6D,EAAT,GAAyD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,KAASC,EAAsB,iBACrE,OAAa,IAATD,EACK,cAACpC,EAAD,aAASC,QAAS,cAACgC,EAAD,UAAmBE,KAA8BE,IAC1D,IAATD,EAEL,cAACpC,EAAD,aAASG,UAAU,MAAMF,QACvB,cAACgC,EAAD,CAAkB9C,MAAO,CAAEmD,MAAO,QAAlC,SACE,cAACC,GAAD,OACuBF,SAL1B,EAWA,SAASE,KACd,OACE,qCACE,sBAAKpD,MAAO,CAAEqD,QAAS,QAAvB,UACE,cAAC,IAAD,CAAMrD,MAAO,CAAEE,SAAU,GAAIoD,YAAa,GAA1C,qBACA,cAAC,IAAD,CAAatD,MAAO,CAAEmD,MAAO,GAAII,OAAQ,GAAIC,UAAW,OAAQ5D,aAAc,aAEhF,sBAAKI,MAAO,CAAEqD,QAAS,QAAvB,UACE,cAAC,IAAD,CAAMrD,MAAO,CAAEE,SAAU,GAAIoD,YAAa,GAA1C,2BACA,cAAC,IAAD,CAAatD,MAAO,CAAEmD,MAAO,GAAII,OAAQ,GAAIC,UAAW,OAAQ5D,aAAc,aAEhF,sBAAKI,MAAO,CAAEqD,QAAS,QAAvB,UACE,cAAC,IAAD,CAAMrD,MAAO,CAAEE,SAAU,GAAIoD,YAAa,GAA1C,uBACA,cAAC,IAAD,CAAatD,MAAO,CAAEmD,MAAO,GAAII,OAAQ,GAAIC,UAAW,OAAQ5D,aAAc,gBC7CtF,I,YAAM6D,GAAkBxE,IAAOC,IAAV,2VAUI,qBAAGI,MAAkBC,OAAOmE,oBAExC,qBAAGpE,MAAkBC,OAAOyD,QAQ1B,SAASW,GAAT,GAA6G,IAAnFX,EAAkF,EAAlFA,KAAMC,EAA4E,EAA5EA,KAAMW,EAAsE,EAAtEA,IAAKC,EAAiE,EAAjEA,IACxD,EAAwB5G,oBAAkB,GAA1C,mBAAOsD,EAAP,KAAauD,EAAb,KAEMC,EAAOtB,uBAAY,kBAAMqB,GAAQ,KAAO,CAACA,IACzCE,EAAQvB,uBAAY,kBAAMqB,GAAQ,KAAQ,CAACA,IAEjD,OACE,sBAAM9D,MAAO,CAAEG,WAAY,EAAGqD,UAAW,OAAQ5D,aAAc,QAA/D,SACE,cAACmD,EAAD,CAASC,KAAMA,EAAMzC,KAAMA,EAAM0C,KAAMA,EAAvC,SACE,cAACQ,GAAD,CAAiB/D,QAASqE,EAAME,aAAcF,EAAMG,aAAcF,EAAlE,SACE,cAAC,IAAD,CAAUhE,MAAO,CAAEmD,MAAOS,EAAKL,OAAQM,WCPjD,I,+MAAMzE,GAAUH,IAAOC,IAAV,qEAYPiF,IAPUlF,IAAOC,IAAV,kHAOCD,IAAOC,IAAV,oDAILkF,GAAqBnF,YAAOoF,IAAPpF,CAAH,iFA+GTqF,GAxG0C,SAAC,GAYpD,EAXJC,SAWK,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,WACAC,EAQI,EARJA,gBACAC,EAOI,EAPJA,IAEAC,GAKI,EANJC,oBAMI,EALJD,WACAE,EAII,EAJJA,QACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAEA,EAAqCC,YAAYP,GAA1BQ,GAAvB,EAAQC,cAAR,EAAuBD,WAGjBpJ,GAFa+I,GAAWK,GAAaA,EAAUE,cAAc,GAE9CN,EAAeO,QAAQ,6BAA8B,KACpEzF,EAAkBC,cACxB,EAAiCoF,YAAYP,GACvCY,GADN,EAAQC,WAAR,EAAoBC,SACJC,IAAUC,SACpBC,EAAsBnD,sBAAW,sBAAC,sBAAAtG,EAAA,+EAE9BL,YAAcC,EAAcyI,EAAS,GAAxB,8CAA+E,SAAZA,EAAqB,MAAQA,EAAhG,SAFiB,8GAMrC,CAACA,EAASzI,IAEb,OACE,cAAC,GAAD,UACG6I,EAAY,qCACX,eAAC,IAAD,CAAMiB,eAAe,gBAArB,UACE,eAAC1B,GAAD,WACE,cAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDuE,IACpD,cAACJ,GAAD,CAAoB0B,KAAMb,EAA1B,SACE,cAAC,IAAD,CAAM/E,SAAS,OAAOD,MAAM,UAA5B,yBAGJ,eAACkE,GAAD,WACE,cAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,cACzE,cAACuE,GAAD,CAAoB0B,KAAMf,EAA1B,SACE,cAAC,IAAD,CAAM7E,SAAS,OAAOD,MAAM,UAA5B,uBAGJ,eAACkE,GAAD,WACE,cAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,eACzE,cAACuE,GAAD,CAAoB0B,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAM9E,SAAS,OAAOD,MAAM,UAA5B,0BAIN,eAAC,IAAD,CAAM4F,eAAe,gBAAgB7F,MAAO,CAAEwD,UAAW,IAAzD,UACE,eAACW,GAAD,WACE,cAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,iBAC3E,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBuE,EAAa,IAApC,UAEF,eAACN,GAAD,WACE,cAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,aAC3E,cAAC,IAAD,CAAMK,SAAS,OAAf,wBAEF,eAACiE,GAAD,WACE,eAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,OAA5D,WACIrB,EAAkB,MAAMsB,iBAD5B,IAC+CnG,EAAgB,MAAO,SACpE,mCACE,cAAC8D,GAAD,CAAgBX,KAAK,6CAA6CY,IAAK,GAAIC,IAAK,GAAIZ,KAAM,eAnCvF,OAwCX,qCACE,cAAC,IAAD,CAAM4C,eAAe,SAArB,SACE,eAAC,IAAD,CAAQnG,QAASkG,EAAqBhD,UAAW2C,EAAQU,eAAgBjG,MAAO,CAAEwD,UAAW,EAAG5D,aAAc,GAAIuD,MAAO,OAAQI,OAAQ,GAAI2C,aAAc,GAAIC,OAAQ,oBAAqBlG,MAAO,UAAWmG,WAAY,IAAKlG,SAAU,GAAImG,QAAS,WAAYC,WAAY,eAA9Q,UACE,qBAAKtG,MAAO,CAAEsD,YAAa,GAAKH,MAAO,GAAIoD,IAAI,8BAA8BC,IAAI,kBADnF,UAIF,eAAC,IAAD,CAAMX,eAAe,gBAArB,UACE,eAAC1B,GAAD,WACE,eAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,SAAzE,OACA,cAACuE,GAAD,CAAoB0B,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAM9E,SAAS,OAAf,uBAGJ,eAACiE,GAAD,WACE,eAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,YAAzE,OACA,eAACuE,GAAD,CAAoB0B,KAAMf,EAA1B,UACE,cAAC,IAAD,CAAM7E,SAAS,OAAf,kBADF,UAIF,eAACiE,GAAD,WACE,eAAC,IAAD,CAAMjE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,OAA5D,WACIrB,EAAkB,MAAMsB,iBAD5B,IAC+CnG,EAAgB,MAAO,SACpE,mCACE,cAAC8D,GAAD,CAAgBX,KAAK,6CAA6CY,IAAK,GAAIC,IAAK,GAAIZ,KAAM,qB,UC9HtG7D,GAAUH,YAAOwH,IAAPxH,CAAH,2IAwDEyH,GA/CuC,SAAC,GAA+F,IAA7FlC,EAA4F,EAA5FA,QAASC,EAAmF,EAAnFA,WAAYkC,EAAuE,EAAvEA,aAAcC,EAAyD,EAAzDA,YAAa5K,EAA4C,EAA5CA,YAA4C,EAA/B+I,eAA+B,EAAfC,SAIpI,OACE,eAAC,GAAD,CAASa,eAAe,aAAa7F,MAAO,CAAEJ,aAAc,IAA5D,UACE,sBAAKI,MAAO,CAAEmD,MAAO,GAAII,OAAQ,IAAjC,UACmB,KAAhBqD,GAAsB,cAAC,IAAD,CACrBL,IAAG,wBAAmC,SAAhBK,EAAyB,MAAQA,EAApD,QACHJ,IAAKI,EACLzD,MAAO,GACPI,OAAQ,KACV,cAAC,IAAD,CACEgD,IAAG,wBAAoC,SAAjBI,EAA0B,MAAQA,EAArD,QACHH,IAAKG,EACLxD,MAAuB,KAAhByD,EAAqB,GAAK,GACjCrD,OAAwB,KAAhBqD,EAAqB,GAAK,GAClCzG,WAAYyG,EAAc,MAAQ,MAClCpD,UAAWoD,EAAc,QAAU,WAEvC,qBAAK5G,MAAO,CAAE6G,UAAW,OAAQC,YAAa,EAAG3D,MAAO,QAAxD,SACE,cAAC,IAAD,UACE,sBAAKnD,MAAO,CAAEqD,QAAS,OAAQwC,eAAgB,iBAA/C,UACE,sBAAK7F,MAAO,CAAEmD,MAAO,IAAKK,UAAWuD,KAAMnH,aAAcmH,MAAzD,UACGvC,EAAQc,QAAQ,KAAM,KACI,IAA1Bd,EAAQwC,QAAQ,MAAe,cAAC,IAAD,CAAMhH,MAAO,CAAEE,SAAU,IAAzB,yBAElB,IAAfuE,GAAoB,cAAC,IAAD,CAAO8B,IAzBrB,4BAyBuCC,IAAKxK,EAAamH,MAAO,GAAII,OAAQ,gB,2DC7ClF0D,GAAa,SAACC,GACzB,IAAMC,EAAWC,cAETtC,EAAYuC,cAAZvC,QACFwC,EAAqBC,eAY3B,MAAO,CAAEC,UAVa/E,sBAAW,sBAAC,4BAAAtG,EAAA,+EAEbsL,aAAQP,EAAYI,EAAoBxC,GAF3B,cAExB4C,EAFwB,OAG9BP,EAASQ,YAAuB7C,IAHF,kBAIvB4C,GAJuB,0DAMvB,GANuB,yDAQ/B,CAAC5C,EAASqC,EAAUD,EAAYI,MC8BtBM,GA9CE,SAACjD,GAChB,IAAMwC,EAAWC,cAETtC,EAAYuC,cAAZvC,QACFwC,EAAqBC,eACrBM,EAAWC,cAEXC,EAActF,sBAAW,uCAC7B,WAAOuF,GAAP,eAAA7L,EAAA,sEACuB8L,aAAMX,EAAoB3C,EAAKqD,EAAQlD,EAAS+C,GADvE,OACQK,EADR,OAEEC,QAAQC,IAAI,UAAWF,GACvBf,EAASQ,YAAuB7C,IAChCqD,QAAQE,KAAKH,GAJf,2CAD6B,sDAO7B,CAACpD,EAASqC,EAAUG,EAAoB3C,EAAKkD,IAG/C,MAAO,CAAES,QAASP,ICqCLQ,GAlDI,SAAC5D,GAClB,IAAMwC,EAAWC,cAETtC,EAAYuC,cAAZvC,QACFwC,EAAqBC,eAErBiB,EAAgB/F,sBAAW,uCAC/B,WAAOuF,GAAP,eAAA7L,EAAA,sEACuBsM,aAAQnB,EAAoB3C,EAAKqD,EAAQlD,GADhE,OACQoD,EADR,OAEEf,EAASQ,YAAuB7C,IAChCqD,QAAQE,KAAKH,GAHf,2CAD+B,sDAM/B,CAACpD,EAASqC,EAAUG,EAAoB3C,IAG1C,MAAO,CAAE+D,UAAWF,ICGhBG,GAAe1J,IAAOC,IAAV,iEACN,SAACoB,GAAD,OAAWA,EAAMsI,QAClB,SAACtI,GAAD,OAAWA,EAAMsI,QAGbC,GA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MAEF,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACJ,GAAD,CAAcC,KAAME,KCJvBI,GAAqBjK,IAAOC,IAAV,mIAEF,SAACoB,GAAD,OAAWA,EAAMhB,MAAMC,OAAO4J,eAM9CC,GAAoBnK,IAAOC,IAAV,iEAKRmK,GA3BgB,SAAC,GAAkB,IAAhBtI,EAAe,EAAfA,SAC1BuI,EAAIC,IAAMC,SAASC,QAAQ1I,GAAU2I,OAC3C,OACE,cAACR,GAAD,UACGK,IAAMC,SAASG,IAAI5I,GAAU,SAAC6I,EAAOC,GAAR,OAC5B,qCACE,cAACT,GAAD,UAAoBQ,IACnBC,EAAIP,EAAI,GAAK,cAAC,GAAD,a,UCkBlBQ,GAAqB7K,IAAOC,IAAV,mKAGL,SAACoB,GAAD,OAAWA,EAAMhB,MAAMyK,MAAMC,WAM1CC,GAAchL,IAAOiL,MAAV,sNAcFC,GAxCqB,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,aAAcC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjG,OACE,mCACE,eAACX,GAAD,CAAoB9J,MAAO,CAAE+F,WAAY,UAAzC,UACE,eAAC,IAAD,CAAM/F,MAAO,CAAEoG,WAAY,IAAKlG,SAAU,GAAIwK,WAAY,OAAQ7D,UAAW,SAA7E,sBACY4D,EAAIzE,oBAEhB,sBAAKhG,MAAO,CAAEqD,QAAS,OAAQF,MAAO,QAAtC,YACKoH,GAAkBA,EACrB,cAACN,GAAD,CAAaK,YAAaA,EAAaE,MAAOA,EAAOH,SAAUA,MAC5DD,GAAgBA,WCmCvBO,GAAmB1L,IAAOC,IAAV,mDAIhByJ,GAAe1J,IAAOC,IAAV,+CACP,SAACoB,GAAD,OAAWA,EAAMhB,MAAMyJ,QAAQ,MAGpC6B,GAA8B3L,IAAOC,IAAV,wEAK3B2L,GAAgB5L,IAAOC,IAAV,sNAER,SAACoB,GAAD,OAAWA,EAAMhB,MAAMC,OAAOC,WAUnCsL,GAAoB7L,IAAO8L,KAAV,0JASRC,GA9E+B,SAAC,GAAqE,IAAnEP,EAAkE,EAAlEA,IAAK7N,EAA6D,EAA7DA,OAAQyN,EAAqD,EAArDA,SAAUY,EAA2C,EAA3CA,YAAaT,EAA8B,EAA9BA,MAA8B,IAAvBU,oBAAuB,MAAR,EAAQ,EAC3GrL,EAAkBC,cAClBhD,EAAK,wBAA+B,SAAXF,EAAoB,MAAQA,EAAhD,QAGX,OADAuL,QAAQC,IAAI,SAAUoC,GAEpB,eAACG,GAAD,WACE,cAAC,GAAD,CACEP,aACE,eAACQ,GAAD,WACE,8BACE,cAAC,IAAD,CAAQO,QAAQ,OAAOvC,KAAK,KAAKlJ,QAASuL,EAA1C,SACGpL,EAAgB,IAAK,WAG1B,cAAC,GAAD,IACA,8BACE,eAAC,IAAD,YACKjD,EAAOwO,SAAS,OAAU,qBAAK7E,IAAKzJ,EAAO0J,IAAK5J,EAAQuG,MAAO,GAAII,OAAQ,KAC9E,cAACuH,GAAD,UAAoBlO,YAK5ByN,SAAUA,EACVC,YAAY,IACZE,MAAOA,EACPC,IAAKA,IAENS,EAAe,EACd,eAACL,GAAD,WACE,cAAC,IAAD,CAAM7K,MAAO,CAAE6G,UAAW,OAAQ1D,MAAO,MAAOlD,MAAO,WAAvD,SAAqEJ,EAAgB,MAAO,iBAC5F,eAAC,IAAD,CAAMG,MAAO,CAAE6G,UAAW,QAAS1D,MAAO,OAA1C,UAAoD,IAAIkI,KAAUb,GAAS,GAAGc,MAAMJ,EAAe,KAAOK,QAAQ,GAAI,IAAtH,IAA4H3O,QAG9H,eAACiO,GAAD,WACE,cAAC,IAAD,CAAM7K,MAAO,CAAE6G,UAAW,OAAQ1D,MAAO,MAAOlD,MAAO,WAAvD,SAAqEJ,EAAgB,MAAO,iBAC5F,eAAC,IAAD,CAAMG,MAAO,CAAE6G,UAAW,QAAS1D,MAAO,OAA1C,UAAoD,IAAIkI,KAAU,GAAGE,QAAQ,GAAI,IAAK3O,YCejF4O,GAlDmC,SAAC,GAAqE,IAAnEf,EAAkE,EAAlEA,IAAKgB,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,UAAkD,IAAvCC,iBAAuC,MAA3B,GAA2B,MAAvBT,oBAAuB,MAAR,EAAQ,EACrH,EAAsBjO,mBAAS,IAA/B,mBAAO2O,EAAP,KAAYC,EAAZ,KACA,EAAkC5O,oBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KACMlM,EAAkBC,cAClBkM,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBzB,KAC5B,CAACA,IAEE0B,EAAe1J,uBACnB,SAAC2J,GACCP,EAAOO,EAAEC,cAAc7B,SAEzB,CAACqB,IAGGS,EAAkB7J,uBAAY,WAClCoJ,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOU,MAAK,UAAK1M,EAAgB,IAAK,WAA1B,YAAwC8L,EAAxC,WAA4DD,UAAWA,EAAnF,UACE,cAAC,GAAD,CACElB,MAAOoB,EACPX,YAAaqB,EACbjC,SAAU8B,EACV1B,IAAKuB,EACLpP,OAAQ+O,EACRT,aAAcA,IAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYzL,QAASgM,EAAW1L,MAAO,CAAEmD,MAAO,QAAhE,SACGtD,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE2M,SAAUV,EACVpM,QAAO,sBAAE,sBAAAvD,EAAA,6DACP4P,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAMT1L,MAAO,CAAEmD,MAAO,QARlB,SAUG2I,EAAYjM,EAAgB,IAAK,WAAaA,EAAgB,IAAK,oBCK/D4M,GAjDqC,SAAC,GAAmD,IAAjDhB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWjB,EAA0B,EAA1BA,IAA0B,IAArBkB,iBAAqB,MAAT,GAAS,EACrG,EAAsB1O,mBAAS,IAA/B,mBAAO2O,EAAP,KAAYC,EAAZ,KACA,EAAkC5O,oBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KACMlM,EAAkBC,cAClBkM,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBzB,KAC5B,CAACA,IAEE0B,EAAe1J,uBACnB,SAAC2J,GACCP,EAAOO,EAAEC,cAAc7B,SAEzB,CAACqB,IAGGS,EAAkB7J,uBAAY,WAClCoJ,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOU,MAAK,mBAAcZ,GAAaD,UAAWA,EAAlD,UACE,cAAC,GAAD,CACET,YAAaqB,EACbjC,SAAU8B,EACV3B,MAAOoB,EACPnB,IAAKuB,EACLpP,OAAQ+O,IAEV,eAAC,GAAD,WACE,cAAC,IAAD,CAAQR,QAAQ,YAAYzL,QAASgM,EAAW1L,MAAO,CAAEmD,MAAO,QAAhE,SACGtD,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE2M,SAAUV,EACVpM,QAAO,sBAAE,sBAAAvD,EAAA,6DACP4P,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAMT1L,MAAO,CAAEmD,MAAO,QARlB,SAUG2I,EAAYjM,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCrCrF6M,GAAoBzN,IAAOC,IAAV,qIAkERyN,GAzDqC,SAAC,GAO9C,IANLvH,EAMI,EANJA,cACAwH,EAKI,EALJA,aACAjB,EAII,EAJJA,UACAhH,EAGI,EAHJA,IACAuG,EAEI,EAFJA,aACArG,EACI,EADJA,oBAGMhF,EAAkBC,cAChBwI,EAAYV,GAASjD,GAArB2D,QACAI,EAAcH,GAAW5D,GAAzB+D,UAEFmE,EAAmBC,aAAiB1H,GACpC2H,EAAmBD,aAAiB1H,EAAckG,MAAMzG,IACxDmI,EAAiBH,EAAiB7G,iBACxC,EAA2BiH,YACzB,cAAC,GAAD,CAAcxC,IAAKmC,EAAcnB,UAAWnD,EAASqD,UAAWA,EAAWT,aAAcA,KADpFgC,EAAP,oBAGA,EAA4BD,YAC1B,cAAC,GAAD,CAAexC,IAAKrF,EAAeqG,UAAW/C,EAAWiD,UAAWA,KAD/DwB,EAAP,oBAqBA,OACE,eAAC,IAAD,CAAMtH,eAAe,gBAAgBE,WAAW,SAAS/F,MAAO,CAAEmD,MAA4B,IAArB0J,EAAyB,OAAS,QAA3G,UACE,+BACyB,IAArBA,IAA2BlB,EAAUP,SAAS,OAC9C,qCACE,eAAC,IAAD,CAASnL,MAAM,OAAf,UAAuB+M,EAAvB,IAAwCrB,EAAUP,SAAS,KAAO,KAAOO,KACzE,eAAC,IAAD,CAAMzL,SAAS,OAAOkN,GAAG,MAAMnN,MAAM,QAAQD,MAAO,CAAE6G,UAAW,QAAjE,cACIkG,EAAiB/G,yBAvBD,IAArB6G,EACL,cAAC,IAAD,CAAQ1B,QAAQ,SAASzL,QAASwN,EAAkBlN,MAAO,CAAEqN,SAAU,SAAvE,SACGxN,EAAgB,IAAK,WAGxB,eAAC6M,GAAD,WACE,cAAC,IAAD,CAAY1M,MAAO,CAAEsN,gBAAiB,cAAeC,UAAW,QAAU7N,QAASyN,EAAmBK,GAAG,OAAzG,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYxN,MAAO,CAAEsN,gBAAiB,cAAeC,UAAW,QAAU7N,QAASwN,EAAnF,SACE,cAAC,IAAD,a,UC3CJO,GAAqBxO,IAAOC,IAAV,sIAOlBwO,GAAmBzO,YAAO0O,IAAP1O,CAAH,iGAKV,qBAAGK,MAAkBC,OAAOqO,WAIlCC,GAAOC,YAAH,ieA4BJC,GAAgB9O,YAAO+O,IAAP/O,CAAH,kHACD4O,IAsDHI,GAlDuC,SAAC,GAAqG,IAAnGxI,EAAkG,EAAlGA,SAAUd,EAAwF,EAAxFA,IAAKa,EAAmF,EAAnFA,WAAYjB,EAAuE,EAAvEA,SAAUa,EAA6D,EAA7DA,cAAe8I,EAA8C,EAA9CA,YAA8C,IAAjCC,gBAAiC,MAAtB,EAAsB,EAAnBC,EAAmB,EAAnBA,aAChIvO,EAAkBC,cACxB,EAAkC7C,oBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KACQsC,EAAaC,aAAW3J,GAAxB0J,SAEAvJ,EAAYuC,cAAZvC,QACFyJ,EAAqBzB,aAAiBrH,GACtC+I,EAAoB1B,aAAiBrH,EAAS6F,MAAM/G,IACpDyI,EAAiBuB,EAAmBvI,iBAE1C,OACE,eAAC,IAAD,CAAMyI,GAAG,MAAM5I,eAAe,gBAAgBE,WAAW,SAAzD,UACgB,IAAboI,GAAkB,gCACjB,cAAC,IAAD,CAASlO,MAAO6E,GAAiC,IAAvByJ,EAA2B,eAA0B,OAAQvO,MAAO,CAAE6G,UAAW,QAA3G,SACG/B,EAAUkI,EAAiB,MAEN,IAAvBuB,GACC,eAAC,IAAD,CAAMrO,SAAS,OAAOkN,GAAG,MAAMnN,MAAM,QAAQD,MAAO,CAAE6G,UAAW,QAAjE,cACI2H,EAAkBxI,uBAI1B,cAACyH,GAAD,CAAoBzN,MAAO,CAAEmD,MAAOgL,EAAW,OAAS,OAAQhO,WAAY,QAA5E,SACE,cAAC,IAAD,CACEqM,SAAiC,IAAvB+B,IAA6B/I,GAAcsG,EACrDpM,QAAO,sBAAE,sBAAAvD,EAAA,6DACP4P,GAAa,GADN,SAEDsC,IAFC,OAGPtC,GAAa,GAHN,2CAKT/L,MAAO,CACLqN,SAAU,QACVpN,MAAO,QACPyO,QAAiC,IAAvBH,IAA6B/I,GAAcsG,EAAa,GAAM,GAE1EX,QAAQ,SAZV,SAcGtL,EAAgB,IAAK,gBAGxBuF,EAAcuJ,GAAG,IAAMlJ,EAASkJ,GAAG,KAAOT,EAAc,IAAM1I,EAC9D,cAACkI,GAAD,CAAkBhO,QAAS0O,EAAcjD,QAAQ,OAAOvC,KAAK,KAA7D,SACE,cAACmF,GAAD,MAEF,O,iCCvEOa,GA3BqD,SAAC,GAK9D,IAJLlD,EAII,EAJJA,UACAmD,EAGI,EAHJA,iBACAnK,EAEI,EAFJA,gBACAoK,EACI,EADJA,KAEMjP,EAAkBC,cAElBiP,EAAsBF,EADRrQ,KAAKC,MAAMzB,eAAmB,KAE5CgS,EAAYjR,aAAegR,EAAsB,EAAIA,EAAsB,GAEjF,OACE,eAAC,IAAD,CAAOxC,MAAO1M,EAAgB,MAAO,cAAe6L,UAAWA,EAA/D,UACE,cAAC,IAAD,CAAMuD,MAAI,EAAChP,MAAM,UAAUC,SAAS,OAAOF,MAAO,CAAE6G,UAAW,UAA/D,SACG/H,aAA0BkQ,KAE7B,eAAC,IAAD,CAAM/O,MAAM,eAAemN,GAAG,OAAOpN,MAAO,CAAE6G,UAAW,UAAzD,UACGiI,EAAKI,YAAc,OAAS,OAD/B,KACyCJ,EAAKK,YAE9C,eAAC,IAAD,CAAMlP,MAAM,eAAemN,GAAG,MAAMpN,MAAO,CAAE6G,UAAW,UAAxD,UACGhH,EAAgB,MAAO,oBAD1B,MACkD6E,EAAkB,MAAMsB,iBAAkB,IACzFnG,EAAgB,MAAO,gBCpB1BuP,GAASnQ,IAAOC,IAAV,mDAcN2O,IAVmB5O,YAAO0O,IAAP1O,CAAH,uHAMV,qBAAGK,MAAkBC,OAAOqO,WAI3BE,YAAH,maAiKKuB,IArIOpQ,YAAO+O,IAAP/O,CAAH,4GACJ4O,IAmBqC,SAAC,GAS9C,IARLiB,EAQI,EARJA,KACAzS,EAOI,EAPJA,SACAyI,EAMI,EANJA,QACAJ,EAKI,EALJA,gBACAG,EAII,EAJJA,oBACAN,EAGI,EAHJA,SACAK,EAEI,EAFJA,UACAK,EACI,EADJA,gBAEMpF,EAAkBC,cACxB,EAAkD7C,oBAAS,GAA3D,mBAAOqS,EAAP,KAA0BC,EAA1B,KACA,EAAwEC,YAAeV,EAAKnK,KAApFA,EAAR,EAAQA,IAAK8K,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBR,EAA1C,EAA0CA,YAAahE,EAAvD,EAAuDA,aACvD,EAA2FhG,YAAYP,GAA/FQ,EAAR,EAAQA,UAAWyH,EAAnB,EAAmBA,aAAcxH,EAAjC,EAAiCA,cAAeyJ,EAAhD,EAAgDA,iBAAkBrJ,EAAlE,EAAkEA,WAAYC,EAA9E,EAA8EA,SACxEoH,EAAmBC,aAAiB1H,GAEpCuK,GADiB9C,EAAiB7G,iBACtByJ,EAAYG,KACxB7T,EAAe2T,EAAeE,IAC9BC,EAASf,EAAKK,SAASW,cACvBC,EAAajL,GAAWK,GAAaA,EAAUE,cAAc,GAE7D6B,EAAa+E,mBAAQ,WACzB,OAAIiD,EACKc,aAAY3T,EAAsBN,GAEpCiU,aAAY3T,EAAsBsT,KACxC,CAACtT,EAAUsT,EAAW5T,EAAcmT,IAE/B1H,EAAcP,GAAWC,GAAzBM,UAEFyI,EAAgBxN,sBAAW,sBAAC,sBAAAtG,EAAA,sEAE9BoT,GAAqB,GAFS,SAGxB/H,IAHwB,OAI9B+H,GAAqB,GAJS,gDAM9BpH,QAAQ+H,MAAR,MAN8B,yDAQ/B,CAAC1I,IAEE2I,EAA8B,WAClC,OAAOJ,EAAmC,IAArBlD,GAAsD,MAA5BD,EAAa/N,YAAsB+F,EAChF,cAAC,IAAD,CAAM5E,MAAO,CAAE6F,eAAgB,gBAAiBE,WAAY,UAA5D,SACE,cAAC,IAAD,CAAQoF,QAAQ,SAASiF,GAAG,IAAItK,KAAMb,EAAiBjF,MAAO,CAAEmD,MAAO,QAAvE,SACGtD,EAAgB,IAAK,cAI1B,cAAC,GAAD,CACEuF,cAAeA,EACfwH,aAAcA,EACdjB,UAAWkE,EACXlL,IAAKA,EACLuG,aAAcA,EACdrG,oBAAqBA,IAGvB,cAAC,IAAD,CAAM7E,MAAO,CAAE6F,eAAgB,gBAAiBE,WAAY,UAA5D,SACE,cAAC,IAAD,CAAQoF,QAAQ,SAASqB,SAAU8C,EAAmB5P,QAASuQ,EAAejQ,MAAO,CAAEmD,MAAO,OAAQK,UAAYoB,EAAiB,EAAL,IAA9H,SACG/E,EAAgB,IAAK,eAM9B,EAAoCoN,YAClC,cAAC,GAAD,CAAuB4B,iBAAkBA,EAAkBnK,gBAAiBA,EAAiBoK,KAAMA,KAD9FuB,EAAP,oBAIA,OACE,eAACjB,GAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMkB,cAAc,YAAYpQ,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAhE,SACGJ,EAAgB,IAAK,YAExB,cAAC,IAAD,CAAMyQ,cAAc,YAAYpQ,SAAS,OAAOqQ,GAAG,MAAMvQ,MAAO,CAAEC,MAAO,WAAzE,wBAKF,cAAC,GAAD,CAAewF,SAAUA,EAAUd,IAAKA,EAAKa,WAAYA,EAAYjB,SAAUA,EAAUa,cAAeA,EAAe8I,YAAaW,EAAkBV,SAAU,EAAGC,aAAciC,IAChLzL,EAAY,qCACX,cAAC,IAAD,UACE,cAAC,IAAD,CAAM1E,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACwB,IAArB4M,EAAyBhN,EAAgB,IAAK,gBAAkBA,EAAgB,IAAK,iBAG1F,eAAC,IAAD,CAAMgG,eAAe,gBAArB,UACwB,IAArBgH,EACC,sBAAK7M,MAAO,CAAE6G,UAAW,QAAzB,UACE,eAAC,IAAD,CAAM3G,SAAS,OAAOF,MAAO,CAAEoG,WAAY,KAA3C,UACGoK,OAAOtE,aAAsBU,IAAerB,QAAQ,GADvD,SAGA,eAAC,IAAD,CAAMrL,SAAS,OAAf,eAAyBsQ,OAAOtE,aAAsBU,IAAiB/H,EAAoB4L,YAAYlF,QAAQ,SAEjH,cAAC,IAAD,CAASvL,MAAO,CAAEwD,UAAW,GAAIkL,QAAS,KAE1C5J,EAA6BqL,IAAnB,cAACO,GAAA,EAAD,UAGd,qCACE,cAAC,IAAD,UACGX,GAAc,eAAC,IAAD,CAAM7P,SAAS,OAAOF,MAAO,CAAEC,MAAO,UAAWL,aAAc,GAA/D,UACZC,EAAgB,IAAK,UADT,IACqBgQ,OAGpC/K,EAAuCqL,IAA7B,cAACO,GAAA,EAAD,CAAcC,WAAS,YC9K9BC,GAPkB,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,mBAAoBC,EAAuC,EAAvCA,iBAAkBpB,EAAqB,EAArBA,eAElEqB,EAAiC,QAArBD,EAA6B,MAAQD,EADvCjB,IAEVoB,EAAatB,EAFHE,IAGhB,MAAM,GAAN,OAAUmB,EAAV,YAAuBC,ICHZC,GAAwC,SAAC,GAA8D,IAF9FtS,EAEkCuS,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,QAAS5M,EAAoC,EAApCA,SAIvE6M,GAJ2G,EAA1BC,oBAIlEF,EAAU,KACzBG,EAAsBJ,EAHJ,IAKlBK,EAAY,IAAOhN,EAEnBiN,EAAcD,EAAS,SAAI,EAAIH,EAPb,QAOmEE,GAK3F,OAJAnJ,QAAQC,IAAI,QAAS8I,EAAcM,GAZf7S,EAeG6S,EAAcD,EAfN/S,KAAKiT,MAAe,IAAT9S,GAAgB,KAqB/C+S,GAAc,SAAC,GAE1B,OAF+D,EAAnCC,aAAmC,EAArBC,eACW,KACnCrG,QAAQ,ICLtBsG,GAAO5S,IAAOC,IAAV,0JAOJ4S,GAAW7S,IAAOC,IAAV,8EAKR6S,GAAc9S,YAAO+S,IAAP/S,CAAH,8GAsHFgT,IAhHIhT,YAAOiT,IAAPjT,CAAH,+CAI8C,SAAC,GASxD,IARLyM,EAQI,EARJA,UACAlH,EAOI,EAPJA,QACAqM,EAMI,EANJA,mBACAQ,EAKI,EALJA,oBACAP,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAnL,EAEI,EAFJA,SACA4N,EACI,EADJA,IAEMtS,EAAkBC,cAElBsS,EAAwBxB,GAAyB,CAAEC,qBAAoBC,mBAAkBpB,mBACzF2C,EAAgB,0BAAsB3C,EAF5BE,KAGhBzH,QAAQC,IAAI,WAAY+J,EAAItT,YAC5B,IAAMsS,EAAUgB,EAAI7G,MAAM,IAAID,IAAU,MAAMoF,WACxC6B,EAAgC,IAAO/N,EAASkM,WAChD8B,EAAS/N,EAAQ4G,SAAS,KAAjB,gDAC4BgH,GAD5B,gDAE4BC,GAErCG,EAA0BvB,GAAsC,CAAEC,aAAc,EAAGC,UAAS5M,WAAU8M,wBACtGoB,EAA0BxB,GAAsC,CAAEC,aAAc,EAAGC,UAAS5M,WAAU8M,wBACtGqB,EAA2BzB,GAAsC,CAAEC,aAAc,GAAIC,UAAS5M,WAAU8M,wBACxGsB,EAA4B1B,GAAsC,CAAEC,aAAc,IAAKC,UAAS5M,WAAU8M,wBAEhH,OACE,eAAC,IAAD,CAAO9E,MAAM,MAAMb,UAAWA,EAA9B,UACE,eAACmG,GAAD,WACE,cAACC,GAAD,CAAU9R,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAAChP,MAAM,YAAYqQ,cAAc,YAAY7B,GAAG,OAA1E,SACG5O,EAAgB,IAAK,iBAG1B,cAACiS,GAAD,CAAU9R,MAAO,CAAE4S,aAAc,IAAjC,SACE,cAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAAChP,MAAM,YAAYqQ,cAAc,YAAY7B,GAAG,OAA1E,SACG5O,EAAgB,IAAK,WAG1B,cAACiS,GAAD,UACE,eAAC,IAAD,CAAM5R,SAAS,OAAO+O,MAAI,EAAChP,MAAM,YAAYqQ,cAAc,YAAY7B,GAAG,OAA1E,UACG5O,EAAgB,IAAK,WADxB,cAKF,cAACiS,GAAD,CAAU9R,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,kBAEF,cAAC6C,GAAD,CAAU9R,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAca,EAAyBZ,eAAgBU,IADxE,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM5R,SAAS,OAAO+O,MAAI,EAA1B,SAA4BuD,MAG9B,cAACV,GAAD,CAAU9R,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,kBAEF,cAAC6C,GAAD,CAAU9R,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAcc,EAAyBb,eAAgBU,IADxE,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM5R,SAAS,OAAO+O,MAAI,EAA1B,SAA4BwD,MAG9B,cAACX,GAAD,CAAU9R,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,mBAEF,cAAC6C,GAAD,CAAU9R,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAce,EAA0Bd,eAAgBU,IADzE,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM5R,SAAS,OAAO+O,MAAI,EAA1B,SAA4ByD,MAG9B,cAACZ,GAAD,CAAU9R,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,yBAEF,cAAC6C,GAAD,CAAU9R,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAcgB,EAA2Bf,eAAgBU,IAD1E,SAIF,cAACR,GAAD,UACE,cAAC,IAAD,CAAM5R,SAAS,OAAO+O,MAAI,EAA1B,SAA4B0D,SAGhC,cAACZ,GAAD,CAAa7R,SAAS,OAAtB,SACGL,EACC,IACA,iKAGJ,cAAC,IAAD,CAAMgG,eAAe,SAArB,SACE,eAAC,IAAD,CAAQsF,QAAQ,SAASiF,GAAG,IAAItK,KAAMyM,EAAQvS,MAAO,CAAEmD,MAAO,QAA9D,UACGtD,EAAgB,IAAK,OADxB,IACiC2E,YCnG1BqO,GA5B6B,SAAC,GAQtC,IAPLrO,EAOI,EAPJA,QACAqM,EAMI,EANJA,mBACAQ,EAKI,EALJA,oBACAP,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAnL,EAEI,EAFJA,SACA4N,EACI,EADJA,IAEA,EAA4BlF,YAC1B,cAAC,GAAD,CACEzI,QAASA,EACTqM,mBAAoBA,EACpBQ,oBAAqBA,EACrBP,iBAAkBA,EAClBpB,eAAgBA,EAChBnL,SAAUA,EACV4N,IAAKA,KARFW,EAAP,oBAYA,OACE,cAAC,IAAD,CAAYpT,QAASoT,EAAmB3H,QAAQ,OAAOvC,KAAK,KAAKmK,GAAG,MAApE,SACE,cAAC,IAAD,OCnBAC,GAAelF,YAAH,gLAYZmF,GAAmBhU,IAAOC,IAAV,2nBAgBP8T,IAWTE,GAAQjU,IAAOC,IAAV,yZAeLiU,GAAUlU,IAAOC,IAAV,kHAOPkU,GAAmBnU,IAAOC,IAAV,wLACV,SAACoB,GAAD,OAAYA,EAAMX,SAAW,OAAS,SAQ5CwE,GAAQlF,IAAOC,IAAV,+EA6MImU,GA3L2B,SAAC,GAAwG,IAAD,EAArGvE,EAAqG,EAArGA,KAAMwE,EAA+F,EAA/FA,QAAS/O,EAAsF,EAAtFA,SAAUgP,EAA4E,EAA5EA,SAAUC,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,UAAWrX,EAAkC,EAAlCA,SAAUyI,EAAwB,EAAxBA,QAAS3F,EAAe,EAAfA,SAC3HU,EAAkBC,cAExB,EAA0D7C,oBAAS,GAAnE,mBAAO0W,EAAP,KAA8BC,EAA9B,KAMIC,EAAe/E,EAAK9S,YACpB8X,EAAe,GAEdhF,EAAKI,cAAa4E,EAAehF,EAAKgC,kBAE3C,IAAMiD,EAAwB9H,mBAAQ,WACpC,OAAK6C,EAAKuC,oBAGNvC,EAAKgC,mBAAqBkD,IAAWC,IAChCV,EAASjI,MAAMwD,EAAKuC,qBAEzBvC,EAAKgC,mBAAqBkD,IAAWE,IAChCV,EAASlI,MAAMwD,EAAKuC,qBAEzBvC,EAAKgC,mBAAqBkD,IAAWG,KAChCV,EAAUnI,MAAMwD,EAAKuC,qBAE1BvC,EAAKgC,mBAAqBkD,IAAWI,KAChCV,EAAUpI,MAAMwD,EAAKuC,qBAEvBvC,EAAKuC,oBAdH,OAeR,CAACkC,EAAUC,EAAUC,EAAWC,EAAW5E,EAAKuC,oBAAqBvC,EAAKgC,mBAEvEuD,EAAqBN,IAAe,IAAI1I,IAAU0I,GAAYO,QAAzC,WACnB9D,OAAOuD,GAAY/N,oBAAeuO,EAAW,CAAEC,sBAAuB,KAC1E,IAGEvP,EAAkB6J,EAAKI,YACzB,GADoB,gDAC0BJ,EAAK+B,mBAFvC,IACQ,YAC8D/B,EAAKY,eAF3E,KAIVlL,EAAUsK,EAAKI,YAAcJ,EAAKK,SAAxB,UAAsCL,EAAKK,UACrDsF,EAAsD,OAAzC,UAAA3F,EAAKuC,2BAAL,eAA0BxS,YACvC6V,EACJ5F,EAAKqD,KACLrD,EAAKqD,IAAI7G,MAAM,IAAID,IAAUoJ,EAAY,IAAQ,MAAMhE,WAAWzK,oBAAeuO,EAAW,CAC1FI,sBAAuB,EACvBH,sBAAuB,IAGnB3D,EAAyD/B,EAAzD+B,mBAAoBC,EAAqChC,EAArCgC,iBAAkBpB,EAAmBZ,EAAnBY,eAGxC7K,EAAiCoH,mBAAQ,WAC7C,IAAI2I,EAOJ,OALEA,EADE9F,EAAKI,YACe,IAAI7D,IAAUyD,EAAK+F,mBAEnB,IAAIxJ,IAAUyD,EAAKgG,oBAAoBxJ,MAAM,GAAGpM,IAAI4P,EAAKiG,eAG7EjG,EAAKgC,mBAAqBkD,IAAWC,IAChCV,EAASjI,MAAMsJ,GAEpB9F,EAAKgC,mBAAqBkD,IAAWE,IAChCV,EAASlI,MAAMsJ,GAEpB9F,EAAKgC,mBAAqBkD,IAAWG,KAChCV,EAAUnI,MAAMsJ,GAErB9F,EAAKgC,mBAAqBkD,IAAWI,KAChCV,EAAUpI,MAAMsJ,GAElBA,IACN,CACDrB,EACAC,EACAC,EACAC,EACA5E,EAAK+F,kBACL/F,EAAKgC,iBACLhC,EAAKgG,mBACLhG,EAAKiG,cACLjG,EAAKI,cAIP,OACE,eAACgE,GAAD,YACyB,QAArBpE,EAAK9S,aAA8C,QAArB8S,EAAK9S,cAA0B,cAACiX,GAAD,IAC/D,cAAC,GAAD,CACEzO,QAASA,EACTC,WAAYqK,EAAK5D,aACjBvE,aAAckN,EACdjN,YAAakN,EACb9X,YAAa8S,EAAK9S,YAClB+I,eACE+J,EAAKI,YAAL,oCACiCJ,EAAKY,eAAeE,KADrD,oCAEiCd,EAAKW,YAAYG,KAEpD5K,SACE8J,EAAKI,YAAL,iDAC8CJ,EAAKY,eAAeE,KADlE,gDAE6Cd,EAAKW,YAAYG,QAGhE0D,GACA,eAAC,GAAD,WACE,eAAC,IAAD,CAAMpT,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,OAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAO+O,MAAI,EAACjP,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,SAAU9F,MAAO,UAAWmG,WAAY,KAAzG,SACG0I,EAAKqD,IACJ,qCACGuC,GAAoB,EADvB,IAEE,cAAC,GAAD,CACElQ,QAASA,EACTqM,mBAAoBA,EACpBQ,oBAAqBvC,EAAKuC,oBAC1BP,iBAAkBA,EAClBpB,eAAgBA,EAChBnL,SAAUA,EACV4N,IAAKrD,EAAKqD,SAId,cAAC,IAAD,CAAU5O,OAAQ,GAAIJ,MAAO,UAKrC,eAAC,GAAD,WACE,eAAC,IAAD,CAAMjD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UACGJ,EAAgB,IAAK,gBADxB,OAGA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEoG,WAAY,QAA3C,SAAuDkN,EAA+B,EAArBe,OAGnE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMnU,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,cAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEoG,WAAY,IAAKnG,MAAO,WAAvD,SAAqE6O,EAAKkG,gBAG5E,cAACC,GAAD,CACEnG,KAAMA,EACNzS,SAAUA,EACVyI,QAASA,EACTJ,gBAAiBoK,EAAKpK,gBACtBG,oBAAqBA,EACrBN,SAAUA,EACVK,UAAWJ,EAAQwC,QAAQ,MAAQ,EACnC/B,gBAAiBA,IAEnB,cAAC,GAAD,IACA,cAAC,EAAD,CACEvF,QAAS,kBAAMkU,GAA0BD,IACzChU,SAAUgU,EACVtU,SAAU,EACVF,SAAUA,EACVS,aAAa,SAEf,cAACwT,GAAD,CAAkBzT,SAAUgU,EAA5B,SACE,cAAC,GAAD,CACEpP,SAAUA,EACVC,QAASA,EACTC,WAAYqK,EAAK5D,aACjBxG,gBAAiBoK,EAAKpK,gBACtBC,IAAKmK,EAAKnK,IACVE,oBAAqBA,EACrBD,UAAWJ,EAAQwC,QAAQ,MAAQ,EACnClC,QAASA,EACTC,eACE+J,EAAKI,YAAL,oCACiCJ,EAAKY,eAAeE,KADrD,oCAEiCd,EAAKW,YAAYG,KAEpD5K,SACE8J,EAAKI,YAAL,iDAC8CJ,EAAKY,eAAeE,KADlE,gDAE6Cd,EAAKW,YAAYG,KAEhE3K,gBAAiBA,U,sBC5QrByH,GAAoBzN,IAAOC,IAAV,qIAqERyN,GA5DqC,SAAC,GAO9C,IANLvH,EAMI,EANJA,cACAwH,EAKI,EALJA,aACAjB,EAII,EAJJA,UACAhH,EAGI,EAHJA,IACAuG,EAEI,EAFJA,aACArG,EACI,EADJA,oBAEMhF,EAAkBC,cAChBwI,EAAYV,GAASjD,GAArB2D,QACAI,EAAcH,GAAW5D,GAAzB+D,UAEFmE,EAAmBC,aAAiB1H,GACpC2H,EAAmBD,aAAiB1H,EAAckG,MAAMzG,IACxDmI,EAAiBH,EAAiB7G,oBAAeuO,EAAW,CAChEI,sBAAuB,EACvBH,sBAAuB,IAEnB5P,EAAY+G,EAAUP,SAAS,KAErC,EAA2B6B,YACzB,cAAC,GAAD,CAAcxC,IAAKmC,EAAcnB,UAAWnD,EAASqD,UAAWA,EAAWT,aAAcA,KADpFgC,EAAP,oBAGA,EAA4BD,YAC1B,cAAC,GAAD,CAAexC,IAAKrF,EAAeqG,UAAW/C,EAAWiD,UAAWA,KAD/DwB,EAAP,oBAqBA,OACE,eAAC,IAAD,CAAMtH,eAAe,gBAAgBE,WAAW,SAAhD,UAjB4B,IAArB8G,EACL,cAAC,IAAD,CAAQ1B,QAAQ,SAASzL,QAASwN,EAAkBlN,MAAO,CAAEqN,SAAU,SAAvE,SACGxN,EAAgB,IAAK,WAGxB,eAAC,GAAD,WACE,cAAC,IAAD,CAAYG,MAAO,CAAEsN,gBAAiB,cAAeC,UAAW,QAAU7N,QAASyN,EAAmBK,GAAG,OAAzG,SACE,cAAC,IAAD,CAAWvN,MAAM,cAEnB,cAAC,IAAD,CAAYD,MAAO,CAAEsN,gBAAiB,cAAeC,UAAW,QAAU7N,QAASwN,EAAnF,SACE,cAAC,IAAD,SASJ,8BACE,sBAAKlN,MAAO,CAAE6G,UAAW,OAAQC,YAAa,IAA9C,UACE,cAAC,IAAD,CAAM5G,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACI2E,EAA+D/E,EAAgB,IAAK,aAArF,UAAgBA,EAAgB,IAAK,UAArC,YAAkD8L,KAErD,eAAC,IAAD,CAAMzL,SAAS,OAAf,UAAuB8M,EAAvB,IAAyCpI,EAAwB,KAAZ+G,KACrD,eAAC,IAAD,CAAMzL,SAAS,OAAf,cAAwB6M,EAAiBxB,QAAQ,eCzDrDkC,GAAqBxO,IAAOC,IAAV,sIAOlB2O,GAAOC,YAAH,ieA2BJC,GAAgB9O,YAAO+O,IAAP/O,CAAH,kHACD4O,IAIZH,GAAmBzO,YAAO0O,IAAP1O,CAAH,uHAMV,qBAAGK,MAAkBC,OAAOqO,WAiEzBK,GA7DuC,SAAC,GAAqG,IAAnGxI,EAAkG,EAAlGA,SAAUd,EAAwF,EAAxFA,IAAKa,EAAmF,EAAnFA,WAAYjB,EAAuE,EAAvEA,SAAUa,EAA6D,EAA7DA,cAAeyJ,EAA8C,EAA9CA,iBAAkBnK,EAA4B,EAA5BA,gBAAiBoK,EAAW,EAAXA,KACxIjP,EAAkBC,cACxB,EAAkC7C,oBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KACQsC,EAAaC,aAAW3J,GAAxB0J,SAEFE,EAAqBzB,aAAiBrH,GACtC+I,EAAoB1B,aAAiBrH,EAAS6F,MAAM/G,IACpDyI,EAAiBuB,EAAmBvI,iBAEjB,SAArB8I,EAAK9S,aACPmM,QAAQC,IAAI,YAAamG,EAAoB/I,GAE/C,MAAoCyH,YAClC,cAAC,GAAD,CAAuB4B,iBAAkBA,EAAkBnK,gBAAiBA,EAAiBoK,KAAMA,KAD9FuB,EAAP,oBAGA,OACE,eAAC,IAAD,CAAMtK,WAAW,SAAjB,UACE,cAAC,GAAD,UACE,cAAC,IAAD,CACEyG,SAAiC,IAAvB+B,IAA6B/I,GAAcsG,EACrDpM,QAAO,sBAAE,sBAAAvD,EAAA,6DACP4P,GAAa,GADN,SAEDsC,IAFC,OAGPtC,GAAa,GAHN,2CAKT/L,MAAO,CACLqN,SAAU,QACVpN,MAAO,QACPyO,QAAiC,IAAvBH,IAA6B/I,GAAcsG,EAAa,GAAM,GAE1EX,QAAQ,SAZV,SAcGtL,EAAgB,IAAK,gBAGxBuF,EAAcuJ,GAAG,IAAMlJ,EAASkJ,GAAG,KAAOE,EAAmB,IAAMrJ,EACnE,cAAC,GAAD,CAAkB9F,QAAS2Q,EAA2BlF,QAAQ,OAAOvC,KAAK,KAA1E,SACE,cAAC,GAAD,MAGF,GAEF,sBAAK5I,MAAO,CAAE8G,YAAa,IAA3B,UACE,cAAC,IAAD,CAAMwJ,cAAc,YAAYpQ,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAhE,SACGJ,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEI,MAA8B,IAAvBsO,EAA2B,eAAiB,OACnDvO,MAAO,CAAEE,SAAU,GAAIkG,WAAY,IAAKsE,WAAY,KAFtD,SAGGsC,IAEqB,IAAvBuB,GACC,eAAC,IAAD,CAAMrO,SAAS,OAAOD,MAAM,QAAQD,MAAO,CAAE6G,UAAW,QAAxD,cACI2H,EAAkBxI,2BChH1BoJ,GAASnQ,IAAOC,IAAV,8HAuFGmQ,GAlEqC,SAAC,GAQ9C,IAPLP,EAOI,EAPJA,KACAzS,EAMI,EANJA,SACAyI,EAKI,EALJA,QACAJ,EAII,EAJJA,gBACAG,EAGI,EAHJA,oBACAN,EAEI,EAFJA,SAIM1E,GAFF,EADJ+E,UAGwB9E,eACxB,EAAkD7C,oBAAS,GAA3D,mBAAOqS,EAAP,KAA0BC,EAA1B,KACA,EAAwEC,YAAeV,EAAKnK,KAApFA,EAAR,EAAQA,IAAK8K,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBR,EAA1C,EAA0CA,YAAahE,EAAvD,EAAuDA,aACvD,EAA2FhG,YAAYP,GAA/FQ,EAAR,EAAQA,UAAWyH,EAAnB,EAAmBA,aAAcxH,EAAjC,EAAiCA,cAAeyJ,EAAhD,EAAgDA,iBAAkBrJ,EAAlE,EAAkEA,WAAYC,EAA9E,EAA8EA,SACxEkK,EAAYF,EAAYG,IACxB7T,EAAe2T,EAAeE,IAC9BC,EAASf,EAAKK,SAASW,cACvBC,EAAajL,GAAWK,GAAaA,EAAUE,cAAc,GAE7D6B,EAAa+E,mBAAQ,WACzB,OAAIiD,EACKc,aAAY3T,EAAsBN,GAEpCiU,aAAY3T,EAAsBsT,KACxC,CAACtT,EAAUsT,EAAW5T,EAAcmT,IAE/B1H,EAAcP,GAAWC,GAAzBM,UAEFyI,EAAgBxN,sBAAW,sBAAC,sBAAAtG,EAAA,sEAE9BoT,GAAqB,GAFS,SAGxB/H,IAHwB,OAI9B+H,GAAqB,GAJS,gDAM9BpH,QAAQ+H,MAAR,MAN8B,yDAQ/B,CAAC1I,IAqBJ,OACE,eAAC,GAAD,WACI1C,EApBGiL,EACL,cAAC,GAAD,CACE3K,cAAeA,EACfwH,aAAcA,EACdjB,UAAWkE,EACXlL,IAAKA,EACLuG,aAAcA,EACdrG,oBAAqBA,IAGvB,cAAC,IAAD,CAAM7E,MAAO,CAAE+F,WAAY,UAA3B,SACE,cAAC,IAAD,CAAQoF,QAAQ,SAASqB,SAAU8C,EAAmB5P,QAASuQ,EAA/D,SACGpQ,EAAgB,IAAK,cAQd,cAAC6Q,GAAA,EAAD,IACZ,cAAC,KAAD,CAAqB1Q,MAAO,CAAEC,MAAO,aACrC,cAAC,GAAD,CAAewF,SAAUA,EAAUd,IAAKA,EAAKa,WAAYA,EAAYjB,SAAUA,EAAUa,cAAeA,EAAeyJ,iBAAkBA,EAAkBnK,gBAAiBA,EAAiBoK,KAAMA,QCvEnMrB,GAAqBxO,IAAOC,IAAV,sIAOlB2O,GAAOC,YAAH,ieA2BJC,GAAgB9O,YAAO+O,IAAP/O,CAAH,kHACD4O,IAIZH,GAAmBzO,YAAO0O,IAAP1O,CAAH,uHAMV,qBAAGK,MAAkBC,OAAOqO,WA4DzBK,GAxDuC,SAAC,GAAqG,IAAnGxI,EAAkG,EAAlGA,SAAUd,EAAwF,EAAxFA,IAAKa,EAAmF,EAAnFA,WAAYjB,EAAuE,EAAvEA,SAAUa,EAA6D,EAA7DA,cAAeyJ,EAA8C,EAA9CA,iBAAkBnK,EAA4B,EAA5BA,gBAAiBoK,EAAW,EAAXA,KACxIjP,EAAkBC,cACxB,EAAkC7C,oBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KACQsC,EAAaC,aAAW3J,GAAxB0J,SAGFE,GAFc3G,GAASjD,GAArB2D,QAEmBwE,aAAiBrH,IACtC+I,EAAoB1B,aAAiBrH,EAAS6F,MAAM/G,IAEpDyI,GAD6BF,aAAiBrH,EAASyP,MAAMzP,EAAS6F,MAAM,KAAM6J,iBACjE5G,EAAmBvI,kBAE1C,EAAoCiH,YAClC,cAAC,GAAD,CAAuB4B,iBAAkBA,EAAkBnK,gBAAiBA,EAAiBoK,KAAMA,KAD9FuB,EAAP,oBAGA,OACE,eAAC,IAAD,CAAM5B,GAAG,MAAM1I,WAAW,SAASF,eAAe,gBAAgBuH,GAAG,MAArE,UACE,sBAAKpN,MAAO,CAAE8G,YAAa,IAA3B,UACE,cAAC,IAAD,CAAMwJ,cAAc,YAAYpQ,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAhE,SACGJ,EAAgB,IAAK,YAExB,cAAC,IAAD,CAASI,MAA8B,IAAvBsO,EAA2B,eAAiB,OAA5D,SAAqEvB,IAC7C,IAAvBuB,GACC,eAAC,IAAD,CAAMrO,SAAS,OAAOkN,GAAG,MAAMnN,MAAM,UAAUD,MAAO,CAAE6G,UAAW,QAAnE,eACK2H,EAAkBxI,uBAI3B,eAAC,GAAD,YACIZ,EAAcuJ,GAAG,IAAMlJ,EAASkJ,GAAG,KAAOE,EAAmB,IAAMrJ,EACnE,cAAC,GAAD,CAAkB9F,QAAS2Q,EAA2BlF,QAAQ,OAAOvC,KAAK,KAA1E,SACE,cAAC,GAAD,MAGF,GAEF,cAAC,IAAD,CACE4D,SAAiC,IAAvB+B,IAA6B/I,GAAcsG,EACrDpM,QAAO,sBAAE,sBAAAvD,EAAA,6DACP4P,GAAa,GADN,SAEDsC,IAFC,OAGPtC,GAAa,GAHN,2CAKT/L,MAAO,CACLqN,SAAU,QACVpN,MAAO,QACPyO,QAAiC,IAAvBH,IAA6B/I,GAAcsG,EAAa,GAAM,GAE1EX,QAAQ,SAZV,SAcGtL,EAAgB,IAAK,oBC9G1BuP,GAASnQ,IAAOC,IAAV,+FAyFGmQ,GAtEqC,SAAC,GAO9C,IANLP,EAMI,EANJA,KACAzS,EAKI,EALJA,SACAyI,EAII,EAJJA,QACAJ,EAGI,EAHJA,gBACAG,EAEI,EAFJA,oBACAN,EACI,EADJA,SAEM1E,EAAkBC,cACxB,EAAkD7C,oBAAS,GAA3D,mBAAOqS,EAAP,KAA0BC,EAA1B,KACA,EAAwEC,YAAeV,EAAKnK,KAApFA,EAAR,EAAQA,IAAK8K,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBR,EAA1C,EAA0CA,YAAahE,EAAvD,EAAuDA,aACvD,EAA2FhG,YAAYP,GAA/FQ,EAAR,EAAQA,UAAWyH,EAAnB,EAAmBA,aAAcxH,EAAjC,EAAiCA,cAAeyJ,EAAhD,EAAgDA,iBAAkBrJ,EAAlE,EAAkEA,WAAYC,EAA9E,EAA8EA,SACxEkK,EAAYF,EAAYG,IACxB7T,EAAe2T,EAAeE,IAC9BC,EAASf,EAAKK,SAASW,cACvBC,EAAajL,GAAWK,GAAaA,EAAUE,cAAc,GAE7D6B,EAAa+E,mBAAQ,WACzB,OAAIiD,EACKc,aAAY3T,EAAsBN,GAEpCiU,aAAY3T,EAAsBsT,KACxC,CAACtT,EAAUsT,EAAW5T,EAAcmT,IAE/B1H,EAAcP,GAAWC,GAAzBM,UAEFyI,EAAgBxN,sBAAW,sBAAC,sBAAAtG,EAAA,sEAE9BoT,GAAqB,GAFS,SAGxB/H,IAHwB,OAI9B+H,GAAqB,GAJS,gDAM9BpH,QAAQ+H,MAAR,MAN8B,yDAQ/B,CAAC1I,IA4BJ,OACE,eAAC,GAAD,WACI1C,EA3BGiL,EACL,cAAC,GAAD,CACE3K,cAAeA,EACfwH,aAAcA,EACdjB,UAAWkE,EACXlL,IAAKA,EACLuG,aAAcA,EACdrG,oBAAqBA,IAGvB,eAAC,IAAD,CAAM7E,MAAO,CAAE+F,WAAY,UAAYF,eAAe,gBAAtD,UACE,sBAAK7F,MAAO,CAAE6G,UAAW,OAAQC,YAAa,IAA9C,UACE,cAAC,IAAD,CAAM5G,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SACGJ,EAAgB,IAAK,mBAExB,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuB6P,EAAa3K,EAAgB,EAApD,UACA,eAAC,IAAD,CAAMlF,SAAS,OAAf,cAAwB6P,GAAclL,EAAoB4L,WAAarL,EAAcqL,YAAYzK,iBAAmB,QAEtH,cAAC,IAAD,CAAQmF,QAAQ,SAASqB,SAAU8C,EAAmB5P,QAASuQ,EAA/D,SACGpQ,EAAgB,IAAK,oBAQd,cAAC6Q,GAAA,EAAD,IACZ,cAAC0E,GAAD,CAAqB3P,SAAUA,EAAUd,IAAKA,EAAKa,WAAYA,EAAYjB,SAAUA,EAAUa,cAAeA,EAAeyJ,iBAAkBA,EAAkBnK,gBAAiBA,EAAiBoK,KAAMA,QCzDzM1P,GAAUH,IAAOC,IAAV,sJAIO,qBAAG0F,UAA4B,OAAS,SAItDuO,GAAUlU,IAAOC,IAAV,kHAMPiF,GAAQlF,IAAOC,IAAV,mDAILmW,GAAcpW,IAAOC,IAAV,yPAUXkF,GAAqBnF,YAAOoF,IAAPpF,CAAH,iFAkNTqF,GA3MiE,SAAC,GAc3E,EAbJE,QAaK,IAZLC,EAYI,EAZJA,WACAC,EAWI,EAXJA,gBACAC,EAUI,EAVJA,IACAE,EASI,EATJA,oBACAiK,EAQI,EARJA,KACAzS,EAOI,EAPJA,SACAyI,EAMI,EANJA,QACAP,EAKI,EALJA,SACApF,EAII,EAJJA,SACAmU,EAGI,EAHJA,QACAe,EAEI,EAFJA,mBACAzP,EACI,EADJA,UAEM/E,EAAkBC,cAChB8M,EAAiB1H,YAAYP,GAA7BiI,aACFrH,EAAUG,IAAUC,QAEpBC,EAAsBnD,sBAAW,sBAAC,sBAAAtG,EAAA,+EAE9BL,YAAcgT,EAAKY,eAHb,IAGsCZ,EAAK9S,YAAa,GAAjD,8CAAiH,SAArB8S,EAAK9S,YAAyB,MAAQ8S,EAAK9S,YAAvI,SAFiB,8GAMrC,CAAC8S,IAEE/J,EAAiB+J,EAAKI,YAAL,oCACUJ,EAAKY,eAAeE,KAD9B,oCAEUd,EAAKW,YAAYG,KAE5C5K,EAAW8J,EAAKI,YAAL,iDAC6BJ,EAAKY,eAAeE,KADjD,gDAE4Bd,EAAKW,YAAYG,KAExD3K,EAAkB6J,EAAKI,YACzB,GADoB,gDAC0BJ,EAAK+B,mBAlBvC,IAiBQ,YAC8D/B,EAAKY,eAlB3E,KAoBhB,OACE,eAAC,GAAD,CAAS9K,UAAWA,EAApB,UACGzF,EACC,qCACE,eAAC,IAAD,CAAM0G,eAAe,gBAAgBE,WAAW,SAAS/F,MAAO,CAAEqG,QAAS,YAA3E,UACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMnG,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,cAAzE,OACA,eAAC,IAAD,CAAMkG,WAAW,SAAjB,UACE,cAAC,IAAD,CAAM7F,SAAS,OAAOF,MAAO,CAAEoG,WAAY,OAAQnG,MAAO,WAA1D,SAAwE6O,EAAKkG,aAC7E,cAACrR,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,wLAAyL+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,UAGhQ,eAAC,GAAD,WACE,eAAC,IAAD,CAAM/C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,gBAAzE,OACA,eAAC,IAAD,CAAMkG,WAAW,SAAjB,UACE,cAAC,IAAD,CAAM7F,SAAS,OAAOF,MAAO,CAAEoG,WAAY,QAA3C,SAAuDkN,EAA+B,EAArBe,IAChEzP,EACC,cAACjB,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,yCAA0C+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,IAC7G,cAACU,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,+DAA2D+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,aAKtI,eAACoS,GAAD,WACE,eAAC,IAAD,CAAMtP,WAAW,SAASF,eAAe,gBAAzC,UACE,sBAAK7F,MAAO,CAAEG,WAAY,IAA1B,UACE,cAAC,IAAD,CAAMD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,kBACzE,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBsQ,OAAOtE,aAAsBU,IAAerB,QAAQ,GAA3E,SACA,eAAC,IAAD,CAAMrL,SAAS,OAAf,eAAyBsQ,OAAOtE,aAAsBU,IAAiB/H,EAAoB4L,YAAYlF,QAAQ,SAEjH,cAAC,IAAD,CAAQJ,QAAQ,SAASiF,GAAG,IAAItK,KAAMb,EAAtC,SACGpF,EAAgB,IAAK,eAG1B,cAACyV,GAAD,CACExG,KAAMA,EACNzS,SAAUA,EACVyI,QAASA,EACTJ,gBAAiBA,EACjBG,oBAAqBA,EACrBN,SAAUA,UAIhB,eAAC,IAAD,CAAMwB,WAAW,SAASF,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAME,WAAW,SAAjB,WACInB,GAAa,cAAC,IAAD,CAAQuG,QAAQ,SAASiF,GAAG,IAAItK,KAAMb,EAAiBjF,MAAO,CAAEsD,YAAa,IAA7E,SACZzD,EAAgB,IAAK,YAExB,8BACG+E,EACC,mCACE,eAAC,IAAD,CAAQlF,QAASkG,EAAqBhD,UAAW2C,EAAQU,eAAgBjG,MAAO,CAAEmD,MAAO,GAAII,OAAQ,GAAI2C,aAAc,GAAIC,OAAQ,oBAAqBlG,MAAO,UAAWmG,WAAY,IAAKlG,SAAU,GAAImG,QAAS,WAAYC,WAAY,eAA1O,UACE,qBAAKtG,MAAO,CAAEsD,YAAa,GAAKH,MAAO,GAAIoD,IAAI,8BAA8BC,IAAI,kBADnF,UAIF,qCACE,cAAC,IAAD,CAAMtG,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,kBACzE,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBsQ,OAAOtE,aAAsBU,IAAerB,QAAQ,GAA3E,SACA,eAAC,IAAD,CAAMrL,SAAS,OAAf,eAAyBsQ,OAAOtE,aAAsBU,IAAiB/H,EAAoB4L,YAAYlF,QAAQ,cAKtH3G,GAAa,qCACZ,eAAC,GAAD,WACE,eAAC,IAAD,CAAM1E,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,SAAzE,OACA,cAAC,GAAD,CAAoBiG,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAM9E,SAAS,OAAf,uBAGJ,eAAC,GAAD,WACE,cAAC,IAAD,CAAMA,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,cACzE,cAAC,GAAD,CAAoBiG,KAAMf,EAA1B,SACE,cAAC,IAAD,CAAM7E,SAAS,OAAf,0BAIL0E,GAAa,eAAC,GAAD,WACZ,eAAC,IAAD,CAAM1E,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,OAA5D,WACIrB,EAAkB,MAAMsB,iBAD5B,IAC+CnG,EAAgB,MAAO,SACpE,mCACE,cAAC8D,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,8CAA+C+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,aAItH2B,GAAa,cAAC,KAAD,CAAqB5E,MAAO,CAAEC,MAAO,aACpD,cAAC,GAAD,CACE6O,KAAMA,EACNzS,SAAUA,EACVyI,QAASA,EACTJ,gBAAiBA,EACjBG,oBAAqBA,EACrBN,SAAUA,EACVK,UAAWA,QAIfzF,IAAayF,GAAa,cAAC,GAAD,CAAS5E,MAAO,CAAEwD,UAAW,GAAI5D,aAAc,MAC1ET,EACC,cAAC,IAAD,CAAM0G,eAAe,gBAAgB7F,MAAO,CAAEqG,QAAS,YAAvD,UACIzB,GAAa,qCAAE,eAAC,GAAD,WACf,cAAC,IAAD,CAAM1E,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,iBAC3E,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBuE,EAAa,IAApC,UAEA,eAAC,GAAD,WACE,cAAC,IAAD,CAAMvE,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,aAE3E,cAAC,IAAD,CAAMK,SAAS,OAAf,wBAEF,eAAC,GAAD,WACE,eAAC,IAAD,CAAMA,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,OAA5D,WACIrB,EAAkB,MAAMsB,iBAD5B,IAC+CnG,EAAgB,MAAO,SACpE,mCACE,cAAC8D,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,8CAA+C+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,iBAK5H,cAAC,IAAD,WACI2B,GAAa,qCACb,eAAC,GAAD,CAAO5E,MAAO,CAAE4S,aAAc,GAAIhT,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,gBACzE,cAAC,GAAD,CAAoBiG,KAAMb,EAA1B,SACE,cAAC,IAAD,CAAM/E,SAAS,OAAOD,MAAM,UAA5B,yBAGJ,eAAC,GAAD,CAAOD,MAAO,CAAE4S,aAAc,GAAIhT,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,cACzE,cAAC,GAAD,CAAoBiG,KAAMf,EAA1B,SACE,cAAC,IAAD,CAAM7E,SAAS,OAAOD,MAAM,UAA5B,uBAGJ,eAAC,GAAD,CAAOD,MAAO,CAAE4S,aAAc,GAAIhT,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,IAAK,eACzE,cAAC,GAAD,CAAoBiG,KAAMd,EAA1B,SACE,cAAC,IAAD,CAAM9E,SAAS,OAAOD,MAAM,UAA5B,uBAGJ,eAAC,GAAD,CAAOD,MAAO,CAAE4S,aAAc,GAAIhT,aAAc,IAAhD,UACE,cAAC,IAAD,CAAMM,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,iBAC3E,eAAC,IAAD,CAAMK,SAAS,OAAf,UAAuBuE,EAAa,IAApC,UAEF,eAAC,GAAD,CAAOzE,MAAO,CAAE4S,aAAc,IAA9B,UACE,cAAC,IAAD,CAAM1S,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,SAAoDJ,EAAgB,MAAO,aAE3E,cAAC,IAAD,CAAMK,SAAS,OAAf,wBAEF,eAAC,GAAD,CAAOF,MAAO,CAAE4S,aAAc,GAAIpP,WAAY,GAA9C,UACE,eAAC,IAAD,CAAMtD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,MAAO,oBAA3E,OACA,eAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,UAA5D,WACIrB,EAAkB,MAAMsB,iBAD5B,IAC+CnG,EAAgB,MAAO,SACpE,mCACE,cAAC8D,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,8CAA+C+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,qBC5P9H7D,GAAUH,YAAOwH,IAAPxH,CAAH,8JAMA,qBAAGE,SAA0B,WAAa,aAgCxCuH,GA5BuC,SAAC,GAAyG,IAAvGlC,EAAsG,EAAtGA,QAASC,EAA6F,EAA7FA,WAAYkC,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,YAAa5K,EAAsD,EAAtDA,YAAuCmD,GAAe,EAAzC4F,eAAyC,EAAzBC,SAAyB,EAAf7F,UACtHW,cAGxB,OACE,eAAC,GAAD,CAAS+F,eAAe,aAAa1G,SAAUA,EAA/C,UACkB,IAAfsF,GAAoB,cAAC,IAAD,CAAO8B,IAJf,4BAIiCC,IAAKxK,EAAamH,MAAO,GAAII,OAAQ,GAAID,YAAa,KACpG,sBAAKtD,MAAO,CAAEmD,MAAO,GAAII,OAAQpE,EAAW,GAAK,IAAjD,UACmB,KAAhByH,GAAsB,cAAC,IAAD,CACrBL,IAAG,wBAAmC,SAAhBK,EAAyB,MAAQA,EAApD,QACHJ,IAAKI,EACLzD,MAAO,GACPI,OAAQ,KACV,cAAC,IAAD,CACEgD,IAAG,wBAAoC,SAAjBI,EAA0B,MAAQA,EAArD,QACHH,IAAKG,EACLxD,MAAuB,KAAhByD,EAAqB,GAAK,GACjCrD,OAAwB,KAAhBqD,EAAqBzH,EAAW,GAAK,GAAK,GAClDgB,WAAYyG,EAAc,MAAQ,MAClCpD,UAAWoD,EAAc,QAAU,WAEvC,qBAAK5G,MAAO,CAAE6G,UAAW,OAAQC,YAAa,EAAG3D,MAAO,IAAKK,UAAW,IAAxE,SACE,cAAC,IAAD,CAASiL,GAAG,MAAMzO,MAAO,CAAEoG,WAAY,KAAvC,SAA+C5B,EAAQc,QAAQ,KAAM,YC7BvEuM,GAAO5S,IAAOC,IAAV,0JAOJ4S,GAAW7S,IAAOC,IAAV,8EAKR6S,GAAc9S,YAAO+S,IAAP/S,CAAH,8GAMXsW,GAAatW,YAAOiT,IAAPjT,CAAH,+CA4GDgT,GAxG+C,SAAC,GASxD,IARLvG,EAQI,EARJA,UACAlH,EAOI,EAPJA,QACAqM,EAMI,EANJA,mBACAQ,EAKI,EALJA,oBACAP,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAnL,EAEI,EAFJA,SACA4N,EACI,EADJA,IAEMtS,EAAkBC,cAClBsS,EAAwBxB,GAAyB,CAAEC,qBAAoBC,mBAAkBpB,mBACzFyB,EAAUgB,EAAI7G,MAAM,IAAID,IAAU,MAAMoF,WACxC6B,EAAgC,IAAO/N,EAASkM,WAEhD+B,EAA0BvB,GAAsC,CAAEC,aAAc,EAAGC,UAAS5M,WAAU8M,wBACtGoB,EAA0BxB,GAAsC,CAAEC,aAAc,EAAGC,UAAS5M,WAAU8M,wBACtGqB,EAA2BzB,GAAsC,CAAEC,aAAc,GAAIC,UAAS5M,WAAU8M,wBACxGsB,EAA4B1B,GAAsC,CAAEC,aAAc,IAAKC,UAAS5M,WAAU8M,wBAEhH,OACE,eAAC,IAAD,CAAO9E,MAAM,MAAMb,UAAWA,EAA9B,UACE,cAAC,GAAD,CAAaxL,SAAS,OAAtB,SACGL,EACC,IACA,iKAGJ,eAAC,GAAD,WACE,cAAC,GAAD,CAAUG,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAAChP,MAAM,YAAYqQ,cAAc,YAAY7B,GAAG,OAA1E,SACG5O,EAAgB,IAAK,iBAG1B,cAAC,GAAD,CAAUG,MAAO,CAAE4S,aAAc,IAAjC,SACE,cAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAAChP,MAAM,YAAYqQ,cAAc,YAAY7B,GAAG,OAA1E,SACG5O,EAAgB,IAAK,WAG1B,cAAC,GAAD,UACE,eAAC,IAAD,CAAMK,SAAS,OAAO+O,MAAI,EAAChP,MAAM,YAAYqQ,cAAc,YAAY7B,GAAG,OAA1E,UACG5O,EAAgB,IAAK,WADxB,cAKF,cAAC,GAAD,CAAUG,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,kBAEF,cAAC,GAAD,CAAUjP,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAca,EAAyBZ,eAAgBU,IADxE,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMpS,SAAS,OAAO+O,MAAI,EAA1B,SAA4BuD,MAG9B,cAAC,GAAD,CAAUxS,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,kBAEF,cAAC,GAAD,CAAUjP,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAcc,EAAyBb,eAAgBU,IADxE,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMpS,SAAS,OAAO+O,MAAI,EAA1B,SAA4BwD,MAG9B,cAAC,GAAD,CAAUzS,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,mBAEF,cAAC,GAAD,CAAUjP,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAce,EAA0Bd,eAAgBU,IADzE,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMpS,SAAS,OAAO+O,MAAI,EAA1B,SAA4ByD,MAG9B,cAAC,GAAD,CAAU1S,MAAO,CAAE6G,UAAW,QAA9B,SACE,cAAC,IAAD,CAAM3G,SAAS,OAAO+O,MAAI,EAA1B,yBAEF,cAAC,GAAD,CAAUjP,MAAO,CAAE4S,aAAc,IAAjC,SACE,eAAC,IAAD,CAAM1S,SAAS,OAAO+O,MAAI,EAA1B,UACGyC,GAAY,CAAEC,aAAcgB,EAA2Bf,eAAgBU,IAD1E,SAIF,cAAC,GAAD,UACE,cAAC,IAAD,CAAMpS,SAAS,OAAO+O,MAAI,EAA1B,SAA4B0D,SAGhC,cAAC,IAAD,CAAM9M,eAAe,SAArB,SACE,cAAC,IAAD,CAAQsF,QAAQ,SAASnL,MAAO,CAAEmD,MAAO,QAAzC,SACE,eAAC,GAAD,CAAYqS,UAAQ,EAAC1P,KAAI,gDAA2CsM,GAAyBpS,MAAO,CAAEyV,eAAgB,QAAtH,UACG5V,EAAgB,IAAK,OADxB,IACiC2E,aC9F5BqO,GA5B6B,SAAC,GAQtC,IAPLrO,EAOI,EAPJA,QACAqM,EAMI,EANJA,mBACAQ,EAKI,EALJA,oBACAP,EAII,EAJJA,iBACApB,EAGI,EAHJA,eACAnL,EAEI,EAFJA,SACA4N,EACI,EADJA,IAEA,EAA4BlF,YAC1B,cAAC,GAAD,CACEzI,QAASA,EACTqM,mBAAoBA,EACpBQ,oBAAqBA,EACrBP,iBAAkBA,EAClBpB,eAAgBA,EAChBnL,SAAUA,EACV4N,IAAKA,KARFW,EAAP,oBAYA,OACE,cAAC,IAAD,CAAYpT,QAASoT,EAAmB3H,QAAQ,OAAOvC,KAAK,KAAKmK,GAAG,MAApE,SACE,cAAC,IAAD,OCnBAC,GAAelF,YAAH,gLAYZmF,GAAmBhU,IAAOC,IAAV,2nBAgBP8T,IAWT0C,GAAQzW,IAAOC,IAAV,kZASE,qBAAGC,SAA0B,MAAQ,cAO5CiU,GAAmBnU,IAAOC,IAAV,mMACV,SAACoB,GAAD,OAAYA,EAAMX,SAAW,OAAS,SAQ5CwE,GAAQlF,IAAOC,IAAV,+EA4QIyW,GAzP2B,SAAC,GAAmH,IAAD,MAAhH7G,EAAgH,EAAhHA,KAAMwE,EAA0G,EAA1GA,QAAS/O,EAAiG,EAAjGA,SAAUgP,EAAuF,EAAvFA,SAAUC,EAA6E,EAA7EA,SAAUC,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,UAAWrX,EAA6C,EAA7CA,SAAUyI,EAAmC,EAAnCA,QAAS3F,EAA0B,EAA1BA,SAAUyF,EAAgB,EAAhBA,UACrI/E,EAAkBC,cAExB,EAA0D7C,oBAAS,GAAnE,mBAAO0W,EAAP,KAA8BC,EAA9B,KACQnO,EAAaP,YAAY4J,EAAKnK,KAA9Bc,SAIJoO,EAAe/E,EAAK9S,YACpB8X,EAAe,GAEdhF,EAAKI,cAAa4E,EAAehF,EAAKgC,kBAE3C,IAAMiD,EAAwB9H,mBAAQ,WACpC,OAAK6C,EAAKuC,oBAGNvC,EAAKgC,mBAAqBkD,IAAWC,IAChCV,EAASjI,MAAMwD,EAAKuC,qBAEzBvC,EAAKgC,mBAAqBkD,IAAWE,IAChCV,EAASlI,MAAMwD,EAAKuC,qBAEzBvC,EAAKgC,mBAAqBkD,IAAWG,KAChCV,EAAUnI,MAAMwD,EAAKuC,qBAE1BvC,EAAKgC,mBAAqBkD,IAAWI,KAChCV,EAAUpI,MAAMwD,EAAKuC,qBAEvBvC,EAAKuC,oBAdH,OAeR,CAACkC,EAAUC,EAAUC,EAAWC,EAAW5E,EAAKuC,oBAAqBvC,EAAKgC,mBAEvEuD,EACJN,IAAe,IAAI1I,IAAU0I,GAAYO,QAAzC,WACQ9D,OAAOuD,GAAY/N,oBAAeuO,EAAW,CAAEC,sBAAuB,KAC1E,IAEAC,EAAsD,OAAzC,UAAA3F,EAAKuC,2BAAL,eAA0BxS,YAEvC2F,EAAUsK,EAAKI,YAAcJ,EAAKK,SAAxB,UAAsCL,EAAKK,UAErDuF,EACJ5F,EAAKqD,KACLrD,EAAKqD,IAAI7G,MAAM,IAAID,IAAUoJ,EAAY,IAAQ,MAAMhE,WAAWzK,oBAAeuO,EAAW,CAC1FI,sBAAuB,EACvBH,sBAAuB,IAGnB3D,EAAyD/B,EAAzD+B,mBAAoBC,EAAqChC,EAArCgC,iBAAkBpB,EAAmBZ,EAAnBY,eAGxC7K,EAAiCoH,mBAAQ,WAC7C,IAAI2I,EAOJ,OALEA,EADE9F,EAAKI,YACe,IAAI7D,IAAUyD,EAAK+F,mBAEnB,IAAIxJ,IAAUyD,EAAKgG,oBAAoBxJ,MAAM,GAAGpM,IAAI4P,EAAKiG,eAG7EjG,EAAKgC,mBAAqBkD,IAAWC,IAChCV,EAASjI,MAAMsJ,GAEpB9F,EAAKgC,mBAAqBkD,IAAWE,IAChCV,EAASlI,MAAMsJ,GAEpB9F,EAAKgC,mBAAqBkD,IAAWG,KAChCV,EAAUnI,MAAMsJ,GAErB9F,EAAKgC,mBAAqBkD,IAAWI,KAChCV,EAAUpI,MAAMsJ,GAElBA,IACN,CACDrB,EACAC,EACAC,EACAC,EACA5E,EAAK+F,kBACL/F,EAAKgC,iBACLhC,EAAKgG,mBACLhG,EAAKiG,cACLjG,EAAKI,cAIDlC,EADqBF,aAAiBrH,GACFO,iBAC1C,EAAsB/I,mBAASb,OAAOwZ,YAAtC,mBAAOhS,EAAP,KAAYiS,EAAZ,KACA,EAAwB5Y,mBAAQ,UAAC6Y,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBjZ,mBAAQ,UAAC6Y,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOG,EAAP,KAAaC,EAAb,KASA,OARA9Y,qBAAU,WAAO,IAAD,QACV2Y,KAAI,UAAKH,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACnEE,EAAO,UAACJ,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aACzDG,KAAI,UAAKL,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACxEI,EAAO,UAACN,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAEhEH,EAAOzZ,OAAOwZ,YAAcK,GAAc,IAAME,GAAc,GAAK,OACpE,CAACF,EAAME,EAAMvS,EAAKzE,IAEnB,eAACuW,GAAD,CAAOvW,SAAUA,EAAUa,MAAO,CAAEsN,gBAAiB,UAAWnK,MAA+B,IAAxB3E,KAAKC,MAAMmF,EAAM,KAAYyS,SAAU,IAAKhJ,SAAU,KAA7H,WACyB,QAArByB,EAAK9S,aAA8C,QAArB8S,EAAK9S,cAA0B,cAAC,GAAD,IAC9DmD,EACC,qCACE,cAAC,GAAD,CACEqF,QAASA,EACTC,WAAYqK,EAAK5D,aACjBvE,aAAckN,EACdjN,YAAakN,EACb9X,YAAa8S,EAAK9S,YAClB+I,eACE+J,EAAKI,YAAL,oCACiCJ,EAAKY,eAAeE,KADrD,oCAEiCd,EAAKW,YAAYG,KAEpD5K,SACE8J,EAAKI,YAAL,iDAC8CJ,EAAKY,eAAeE,KADlE,gDAE6Cd,EAAKW,YAAYG,KAEhEzQ,SAAUA,IAEZ,eAAC,IAAD,CAAM0G,eAAe,gBAAgBE,WAAW,SAAS/F,MAAO,CAAEqG,QAAS,YAA3E,WACIiN,GACA,eAAC,GAAD,WACE,eAAC,IAAD,CAAMpT,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,OAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAO+O,MAAI,EAACjP,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,SAAU9F,MAAO,WAAlF,SACG6O,EAAKqD,IACJ,qCACGuC,EADH,IAEE,cAAC,GAAD,CACElQ,QAASA,EACTqM,mBAAoBA,EACpBC,iBAAkBA,EAClBpB,eAAgBA,EAChBnL,SAAUA,EACV4N,IAAKrD,EAAKqD,SAId,cAAC,IAAD,CAAU5O,OAAQ,GAAIJ,MAAO,UAKrC,eAAC,GAAD,WACE,eAAC,IAAD,CAAMjD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,iBAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEoG,WAAY,OAAQS,UAAW,UAA9D,SAA8F,MAAnBmG,EAAyBA,EAAiB,SAEvH,cAAC,EAAD,CACEtN,QAAS,kBAAMkU,GAA0BD,IACzChU,SAAUgU,EACVtU,SAAU,EACVF,SAAUA,UAIhB,eAAC,IAAD,CAAM0G,eAAe,gBAAgBE,WAAW,SAAS/F,MAAO,CAAEuD,OAAQ,IAA1E,UACE,cAAC,GAAD,CACEiB,QAASA,EACTC,WAAYqK,EAAK5D,aACjBvE,aAAckN,EACdjN,YAAakN,EACb9X,YAAa8S,EAAK9S,YAClB+I,eACE+J,EAAKI,YAAL,oCACiCJ,EAAKY,eAAeE,KADrD,oCAEiCd,EAAKW,YAAYG,KAEpD5K,SACE8J,EAAKI,YAAL,iDAC8CJ,EAAKY,eAAeE,KADlE,gDAE6Cd,EAAKW,YAAYG,KAEhEzQ,SAAUA,KAEVmU,GACA,eAAC,GAAD,CAAOtT,MAAO,CAAEJ,aAAc,OAAQ4D,UAAW,QAAjD,UACE,eAAC,IAAD,CAAMtD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,OAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAO+O,MAAI,EAACjP,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,SAAU9F,MAAO,UAAWmG,WAAY,KAAzG,SACG0I,EAAKqD,IACJ,qCACGuC,EADH,IAEE,cAAC,GAAD,CACElQ,QAASA,EACTqM,mBAAoBA,EACpBQ,oBAAqBvC,EAAKuC,oBAC1BP,iBAAkBA,EAClBpB,eAAgBA,EAChBnL,SAAUA,EACV4N,IAAKrD,EAAKqD,SAId,cAAC,IAAD,CAAU5O,OAAQ,GAAIJ,MAAO,UAKrC,eAAC,GAAD,WACE,eAAC,IAAD,CAAMjD,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UACGJ,EAAgB,IAAK,gBADxB,OAGA,eAAC,IAAD,CAAMkG,WAAW,SAAjB,UACE,cAAC,IAAD,CAAM7F,SAAS,OAAOF,MAAO,CAAEoG,WAAY,KAA3C,SAAoDkN,EAA+B,EAArBe,IAC7DzP,EACC,cAACjB,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,yCAA0C+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,IAC7G,cAACU,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,+DAA2D+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,UAIpI,eAAC,GAAD,WACE,eAAC,IAAD,CAAM/C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,cAAzE,OACA,eAAC,IAAD,CAAMkG,WAAW,SAAjB,UACE,cAAC,IAAD,CAAM7F,SAAS,OAAOF,MAAO,CAAEoG,WAAY,IAAKnG,MAAO,WAAvD,SAAqE6O,EAAKkG,aAC1E,cAACrR,GAAD,CAAgBX,KAAMnD,EAAgB,IAAK,4KAA6K+D,IAAK,GAAIC,IAAK,GAAIZ,KAAM,UAGpP,eAAC,GAAD,WACE,eAAC,IAAD,CAAM/C,SAAS,OAAOF,MAAO,CAAEC,MAAO,WAAtC,UAAoDJ,EAAgB,IAAK,UAAzE,OACA,cAAC,IAAD,CAAMK,SAAS,OAAOF,MAAO,CAAEoG,WAAY,OAAQS,UAAW,UAA9D,SAA8F,MAAnBmG,EAAyBA,EAAiB,SAEvH,cAAC,EAAD,CACEtN,QAAS,kBAAMkU,GAA0BD,IACzChU,SAAUgU,EACVtU,SAAU,EACVF,SAAUA,OAIhB,cAAC,GAAD,CAAkBQ,SAAUgU,EAA5B,SACE,cAAC,GAAD,CACEnP,QAASA,EACTC,WAAYqK,EAAK5D,aACjBxG,gBAAiBoK,EAAKpK,gBACtBC,IAAKmK,EAAKnK,IACVE,oBAAqBA,EACrBiK,KAAMA,EACNzS,SAAUA,EACVyI,QAASA,EACTP,SAAUA,EACVpF,SAAUA,EACVmU,QAASA,EACTe,mBAAoBA,EACpBzP,UAAWA,U,qDC5ON0R,GAlGQ,SAAC,GAAsG,IAAD,IAAnGC,EAAmG,EAAnGA,WAAYC,EAAuF,EAAvFA,cAAenX,EAAwE,EAAxEA,SAAUoX,EAA8D,EAA9DA,YAAaC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAAS1X,EAAe,EAAfA,SAC5G,EAAyB2X,cAAjBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,QACPnX,EAAkBC,cACxB,EAAsB7C,mBAASb,OAAOwZ,YAAtC,mBAAOhS,EAAP,KAAYiS,EAAZ,KACA,EAAwB5Y,mBAAQ,UAAC6Y,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBjZ,mBAAQ,UAAC6Y,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAAzF,mBAAOG,EAAP,KAAaC,EAAb,KACA9Y,qBAAU,WAAO,IAAD,QACV2Y,KAAI,UAAKH,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACnEE,EAAO,UAACJ,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aACzDG,KAAI,UAAKL,SAASC,uBAAuB,oBAAoB,UAAzD,aAAK,EAAwDC,aACxEI,EAAO,UAACN,SAASC,uBAAuB,oBAAoB,UAArD,aAAC,EAAwDC,aAEhEH,EAAOzZ,OAAOwZ,YAAcK,GAAc,IAAME,GAAc,GAAK,OACpE,CAACF,EAAME,EAAMvS,EAAKzE,IAKrB,OACE,eAAC,GAAD,CAASA,SAAUA,EAAUa,MAAO,CAAEmD,MAA+B,IAAxB3E,KAAKC,MAAMmF,EAAM,KAAYyS,SAAU,IAAKhJ,SAAU,KAAnG,UACE,eAAC,GAAD,CAAMrN,MAAO,CAAEiX,cAAe9X,EAAW,OAAS,GAAlD,WACIA,GACA,qCACE,cAAC+X,GAAD,CAAcxX,QAAS,WACrB+W,GAAY,GACZU,IAAQC,IAAI,YAAY,IAF1B,SAIG/X,EACC,qBAAKkH,IAAI,wBAAwBC,IAAI,YAAYrD,MAAM,OAAOI,OAAO,SACrE,qBAAKgD,IAAI,+BAA+BC,IAAI,YAAYrD,MAAM,OAAOI,OAAO,WAGhF,cAAC2T,GAAD,CAAcxX,QAAS,WACrB+W,GAAY,GACZU,IAAQC,IAAI,YAAY,IACvBpX,MAAO,CAAEsD,YAAa,IAHzB,SAIGjE,EACC,qBAAKkH,IAAI,+BAA+BC,IAAI,YAAYrD,MAAM,OAAOI,OAAO,SAC5E,qBAAKgD,IAAI,wBAAwBC,IAAI,YAAYrD,MAAM,OAAOI,OAAO,cAI7E,eAAC,IAAD,CAAY8T,YAAaL,EAAU,EAAI,EAAGpO,KAAK,KAAKuC,QAAQ,SAA5D,UACE,cAAC,IAAD,CAAgBiF,GAAI8B,KAAMoF,GAAE,UAAKP,GAAO/W,MAAO,CAAEkG,aAAc,EAAG/C,MAAO,IAAzE,SACGtD,EAAgB,IAAK,UAExB,cAAC,IAAD,CAAgBuQ,GAAI8B,KAAMoF,GAAE,UAAKP,EAAL,YAAoB/W,MAAO,CAAEkG,aAAc,EAAG/C,MAAO,KAAjF,SACGtD,EAAgB,IAAK,iBAG1B,eAAC0X,GAAD,WACE,cAAC,IAAD,CAAQC,MAAM,KAAKC,QAASlB,EAAYlM,SAAU,kBAAMmM,GAAeD,MACvE,eAAC,IAAD,CAAMvW,MAAO,CAAEC,MAAO,UAAWC,SAAUf,EAAW,OAAS,QAA/D,cAA2EU,EAAgB,IAAK,wBAGpG,eAAC,GAAD,WACE,cAAC,IAAD,CACE0C,GAAG,SACHb,KAAK,cACLjF,KAAK,OACL6N,YAAazK,EAAgB,MAAO,UACpCG,MAAO,CAAEqW,SAAU,IAAK/S,YAAa,GACrCkH,MAAOkM,EACPrM,SAAU,SAAC+B,GAAD,OAAOuK,EAAUvK,EAAEC,cAAc7B,UAI7C,eAACkN,GAAA,EAAD,CACElN,MAAOoM,EACPvM,SAtDmB,SAACsN,GAC1Bd,EAAQc,EAAMC,OAAOpN,QAsDfxK,MAAO,CACLkG,aAAc,EACdI,WAAY,sBACZQ,YAAa,OACb3D,MAAO,OAEPI,OAAQ,GACRtD,MAAO,UACPC,SAAU,GACVkG,WAAY,IACZkH,gBAAiB,WAEnBuK,cACE,kBAAO,cAAC,KAAD,CAAmB7X,MAAO,CAAEC,MAAO,cAE5C6X,kBAAgB,EAlBlB,UAoBE,cAACC,GAAD,CAAgBvN,MAAO,EAAvB,SAA2B3K,EAAgB,IAAK,SAChD,cAACkY,GAAD,CAAgBvN,MAAO,EAAvB,SAA2B3K,EAAgB,IAAK,gBAChD,cAACkY,GAAD,CAAgBvN,MAAO,EAAvB,SAA2B3K,EAAgB,IAAK,SAChD,cAACkY,GAAD,CAAgBvN,MAAO,EAAvB,SAA2B3K,EAAgB,IAAK,eAChD,cAACkY,GAAD,CAAgBvN,MAAO,EAAvB,SAA2B3K,EAAgB,IAAK,sBASpDT,GAAUH,IAAOC,IAAV,gMACA,qBAAGC,SAA0B,QAAU,UAMvC,qBAAGA,SAA0B,UAAY,aAGhDoY,GAAgBtY,IAAOC,IAAV,+JAKf8S,KAKEkF,GAAejY,YAAO+Y,IAAP/Y,CAAH,uIAOZwH,GAAOxH,IAAOC,IAAV,wEAKJ6Y,GAAiB9Y,YAAOgZ,KAAPhZ,CAAH,iDCpHdiZ,GAAOjZ,IAAOC,IAAV,6OACY,gBAAG0F,EAAH,EAAGA,UAAWzF,EAAd,EAAcA,SAAd,OAA8ByF,EAE/CzF,EAAW,kDAAoD,2CAD/DA,EAAW,kDAAoD,8CAKpD,qBAAGA,SAA0B,QAAU,SAC3C,qBAAGA,SAA0B,QAAU,WAE/C,qBAAGG,MAAkB6Y,aAAaC,MAKhCC,GAAgBpZ,YAAOqZ,IAAPrZ,CAAH,qLAMF,qBAAGE,SAA0B,OAAS,UAGjDoZ,GAAWtZ,YAAO+S,IAAP/S,CAAH,oMAMC,qBAAGE,SAA0B,QAAU,WACrC,qBAAGA,SAA0B,OAAS,UAGjDqZ,GAAWvZ,YAAO+S,IAAP/S,CAAH,gHAMRwZ,GAAWxZ,YAAO+S,IAAP/S,CAAH,sIAORyZ,GAAazZ,IAAOC,IAAV,+OACM,cAAGC,SAAH,MAA6B,8CAS7CwZ,GAAc1Z,IAAOC,IAAV,+OACK,cAAGC,SAAH,MAA6B,8CAS7CyZ,GAAa3Z,IAAO+D,KAAV,oHAwOD6V,GAjOqB,SAACC,GACnC,IAAQC,EAASjC,cAATiC,KACF5Z,EAAW6Z,YAAS,sBACpBnZ,EAAkBC,cACpBmZ,EAAUC,cACd,EAA4Bjc,mBAAS,IAArC,mBAAOyZ,EAAP,KAAeC,EAAf,KACA,EAAwB1Z,mBAAS,GAAjC,mBAAO2Z,EAAP,KAAaC,EAAb,KACQxa,EAAsDgL,cAAtDhL,SACAyI,EAAYuC,cAAZvC,QACFP,EAAW4U,cACb5F,EAAW6F,cACf7F,EAAW,IAAIlI,IAAU,GAAGnM,IAAIka,eAChC,IAAM5F,EAAW6F,cACX5F,EAAY6F,cACZ5F,EAAY6F,cACZC,EAAWC,cAAkBlO,QAAQ,GACnC3G,EAAckU,EAAdlU,UACR8U,YAA0B9U,EAAsB,QAAV,SAEtC,IAAMuC,EAAWC,cACTuS,EAAgBC,cAAhBD,YACRrc,qBAAU,WACJwH,GACFqC,EAASQ,YAAuB7C,MAEjC,CAACA,EAASqC,EAAUwS,IAEvB,MAAoC1c,oBAAS,GAA7C,mBAAOsZ,EAAP,KAAmBC,EAAnB,KACA,EAAgCvZ,mBAASkC,IAAsBgY,IAAQ0C,IAAI,YAA0C,SAA5B1C,IAAQ0C,IAAI,aAA0B1a,IAA/H,mBAAOE,EAAP,KAAiBoX,EAAjB,KAEMqD,EAAmB,SAACC,EAAOC,GAC/B,OAAOA,EAAMhF,WAAW1P,QAAQ,IAAK,IAAMyU,EAAM/E,WAAW1P,QAAQ,IAAK,KAErE2U,EAAY,SAACF,EAAOC,GACxB,OAAOA,EAAM7H,IAAM4H,EAAM5H,KAErB+H,EAAkB,SAACH,EAAOC,GAC9B,OAAOA,EAAM3I,oBAAsB0I,EAAM1I,qBAErC8I,GAAe,SAACJ,EAAOC,GAC3B,OAAOA,EAAMI,SAAS3U,SAAWsU,EAAMK,SAAS3U,UAG9C4U,GAAcpB,EAAQvC,QAAO,SAAC5H,GAAD,QAAYA,EAAKI,gBAAkBtK,GAAiC,OAApBkK,EAAKkG,cACvE,KAAX0B,IACF2D,GAAcA,GAAY3D,QAAO,SAAC5H,GAAD,OAA2D,IAAjDA,EAAKK,SAASnI,QAAQ0P,EAAO5G,mBAE1E,IAAIwK,GAAgBrB,EAAQvC,QAAO,SAAC5H,GAAD,QAAYA,EAAKI,gBAAkBtK,GAAiC,OAApBkK,EAAKkG,cACzE,KAAX0B,IACF4D,GAAgBA,GAAc5D,QAAO,SAAC5H,GAAD,OAA2D,IAAjDA,EAAKK,SAASnI,QAAQ0P,EAAO5G,mBAE9E,IAAIyK,GAAkBF,GAAY3D,QAChC,SAAC5H,GAAD,OAAUA,EAAKsL,UAAY,IAAI/O,IAAUyD,EAAKsL,SAAShV,eAAeC,cAAc,MAEvE,KAAXqR,IACF6D,GAAkBA,GAAgB7D,QAAO,SAAC5H,GAAD,OAA2D,IAAjDA,EAAKK,SAASnI,QAAQ0P,EAAO5G,mBAMlF,IAAM0K,GAAY/X,uBAChB,SAACgY,EAAgBnH,GAEf,IAAMoH,EAA+CD,EAAe9Q,KAAI,SAACmF,GAIvE,IAIM6L,EAJoB,IAAItP,IAAUyD,EAAK8L,aAAe,GACzDtP,MAAM,IAAID,IAAUyD,EAAK+L,aACzB3b,IAAI,IAAImM,IAAU,IAAIyP,IAAI,KAEcxP,MAAMyP,KAC7C5I,EAAM5N,EAAS+G,MAAMqP,GACrB5G,EAAa,IAAI1I,IAAUyD,EAAKuC,qBAAuB,GAsB3D,OApBIvC,EAAKgC,mBAAqBkD,IAAWC,MACvCF,EAAaA,EAAWzI,MAAMiI,IAG5BzE,EAAKgC,mBAAqBkD,IAAWE,MACvCH,EAAaA,EAAWzI,MAAMkI,IAG5B1E,EAAKgC,mBAAqBkD,IAAWG,OACvCJ,EAAaA,EAAWzI,MAAMmI,IAG5B3E,EAAKgC,mBAAqBkD,IAAWI,OACvCL,EAAaA,EAAWzI,MAAMoI,IAI9BvB,EADE4B,EAAWiH,WAAW,GAAK,EACvB7I,EAAIjT,IAAI6U,GAEL5B,EAAIjT,IAAI,KACZ,2BAAK4P,GAAZ,IAAkBqD,WAcpB,OAXa,IAATyE,IAEgB,IAATA,EACT8D,EAAsB9D,KAAKkD,GACT,IAATlD,EACT8D,EAAsB9D,KAAKqD,GACT,IAATrD,EACT8D,EAAsB9D,KAAKsD,GACT,IAATtD,GACT8D,EAAsB9D,KAAKuD,KAEzB9a,EACKqb,EAAsB/Q,KAAI,SAACmF,GAAD,OAC/B,cAAC,GAAD,CAEEA,KAAMA,EACNwE,QAASA,EACTC,SAAUA,EACVhP,SAAUA,EACVkP,UAAWA,EACXC,UAAWA,EACXF,SAAUA,EACVnX,SAAUA,EACVyI,QAASA,EACT3F,UAAU,GAVL2P,EAAKnK,QAcP+V,EAAsB/Q,KAAI,SAACmF,GAAD,OAC/B,cAAC,GAAD,CAEEA,KAAMA,EACNwE,QAASA,EACTC,SAAUA,EACVhP,SAAUA,EACViP,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXrX,SAAUA,EACVyI,QAASA,EACT3F,SAAUA,EACVyF,UAAWA,GAXNkK,EAAKnK,UAgBlB,CAAC4O,EAAUzO,EAASP,EAAUiP,EAAUC,EAAWC,EAAWrX,EAAUua,EAAMvX,EAAUF,EAAUyF,IAEpG,OACE,qCACE,eAACsT,GAAD,CAAM/Y,SAAUA,EAAUyF,UAAWA,EAArC,WACIzF,GAAY,sBAAKa,MAAO,CAAEqD,QAAS,OAAQ0C,WAAY,SAAUM,QAAS,uBAA9D,UACZ,gCACE,cAACmS,GAAD,kBAGA,eAACC,GAAD,eACIlU,EAASgH,QAAQ,SAGvB,qBAAKvL,MAAO,CAAEuD,OAAQ,OAAQ0X,YAAa,oBAAqB5X,QAAS,WAEzE,sBAAKrD,MAAO,CAAEG,WAAY,IAA1B,UACE,cAACqY,GAAD,kBAGA,eAACC,GAAD,eACIe,WAIR,sBAAKxZ,MAAO,CAAEqD,QAAS,OAAQwC,eAAgB,iBAA/C,UACE,sBAAK7F,MAAO,CAAEqD,QAAS,SAAvB,UACE,cAACgV,GAAD,CAAelZ,SAAUA,EAAzB,SACGyF,EACG/E,EAAgB,IAAK,SACrBA,EAAgB,IAAK,WAE3B,cAAC0Y,GAAD,CAAUpZ,SAAUA,EAApB,SACGyF,EACC/E,EAAgB,IAAK,mJACrBA,EAAgB,IAAK,gIAIzBV,GAAY,8BACXyF,EACC,mCACE,eAAC+T,GAAD,CAAaxZ,SAAUA,EAAvB,UACE,qBAAKa,MAAO,CAAEqD,QAAS,QAAvB,SACE,cAACuV,GAAD,UAAa/Y,EAAgB,IAAK,iBAEpC,cAAC+Y,GAAD,UAAa/Y,EAAgB,IAAK,4BAItC,mCACE,eAAC6Y,GAAD,CAAYvZ,SAAUA,EAAtB,UACE,sBAAKa,MAAO,CAAEqD,QAAS,QAAvB,UACE,cAACuV,GAAD,UAAa/Y,EAAgB,IAAK,WADpC,OAEE,cAAC+Y,GAAD,CAAY5Y,MAAO,CAAEC,MAAO,WAA5B,SAA0CJ,EAAgB,IAAK,aAEjE,cAAC+Y,GAAD,UAAa/Y,EAAgB,IAAK,mDAO9C,eAACqb,EAAA,EAAD,WACE,cAAC,GAAD,CAAgB3E,WAAYA,EAAYC,cAAeA,EAAenX,SAAUA,EAAUoX,YAAaA,EAAaC,OAAQA,EAAQC,UAAWA,EAAWC,KAAMA,EAAMC,QAASA,EAAS1X,SAAUA,IAClM,8BACE,eAACsH,EAAD,CAAYtH,SAAUA,EAAtB,UACE,cAAC,IAAD,CAAOgc,OAAK,EAACpC,KAAI,UAAKA,GAAtB,SACgByB,GAAbjE,EAAuBgE,GAAoCF,IAAnB,KAE3C,cAAC,IAAD,CAAOc,OAAK,EAACpC,KAAI,UAAKA,EAAL,YAAjB,SACGyB,GAAUF,IAAe,kB,iCC7TxC,yFAEaxN,EAAmB,SAACsO,GAAuC,IAAnBve,EAAkB,uDAAP,GACxDmQ,EAAiB,IAAI3B,IAAU+P,GAASC,UAAU,IAAIhQ,IAAU,IAAIyP,IAAIje,IAC9E,OAAOmQ,EAAeyD,YAGXvE,EAAwB,SAACkP,GAAuC,IAAnBve,EAAkB,uDAAP,GACnE,OAAOue,EAAQC,UAAU,IAAIhQ,IAAU,IAAIyP,IAAIje,IAAW0O,Y,4ECW7CmF,IAfM,SAACpQ,GAGpB,MAA2B+G,cAAnBiU,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MACTC,EAA0BC,YAAeH,EAAS,MAAOC,GAAzDC,sBACFE,EAAOpb,EACP0C,EAAO0Y,EAAKnP,MAAQmP,EAAKnP,MAAQ,gBAEvC,OACE,cAAC,IAAD,yBAAQpB,QAAQ,SAASzL,QAAS8b,GAA2Blb,GAA7D,aACG0C,O,0JCRMgN,EAAc,SAAC2L,EAAwBhf,GAGlD,OADiB,IADJ,IAAIif,IAAKD,GACIE,IAAIC,UAAUC,EAA8Bpf,IAiB3Dqf,EAAe,uCAAG,WAC7BL,EACA5f,EACAkgB,GAH6B,iBAAA9f,EAAA,6DAKvB+f,EAAWlM,EAAY2L,EAAU5f,GALV,kBAOGmgB,EAASC,QAAQC,UAAUH,GAAaI,OAP3C,cAOrBjB,EAPqB,yBAQpBA,GARoB,yDAUpB,KAVoB,yDAAH,2D,iECtBtB1V,EAAY4W,aAAW,SAAChd,GAAD,OACzBid,YAAa,CACTC,cAAc,aACVnW,QAAS/G,EAAMyJ,QAAQ,EAAG,GAC1BzC,WAAYhH,EAAMmd,QAAQnW,WAAW0D,QACrCzG,OAAQ,sBACPjE,EAAMod,YAAYC,KAAK,MAAQ,CAC5BtW,QAAS/G,EAAMyJ,QAAQ,EAAG,KAGlC6T,YAAY,aACRzZ,MAAO,4BACPG,YAAa,GACbuZ,OAAQ,QACRxW,QAAS/G,EAAMyJ,QAAQ,GAAI,IAC3BzC,WAAYhH,EAAMmd,QAAQnW,WAAWwW,MACrC3W,OAAQ,oBACRD,aAAc,GACdW,UAAW,SACXd,WAAY,UACXzG,EAAMod,YAAYC,KAAK,MAAQ,CAC5BxZ,MAAO,OACPG,YAAa,EACb+C,QAAS/G,EAAMyJ,QAAQ,EAAG,KAGlCgU,aAAa,aACT5Z,MAAO,4BACPG,YAAa,GACbuZ,OAAQ,QACRxW,QAAS/G,EAAMyJ,QAAQ,EAAG,GAC1BzC,WAAYhH,EAAMmd,QAAQnW,WAAWwW,MACrC3W,OAAQ,oBACRD,aAAc,GACdW,UAAW,SACXd,WAAY,UACXzG,EAAMod,YAAYC,KAAK,MAAQ,CAC5BxZ,MAAO,OACPG,YAAa,EACb+C,QAAS/G,EAAMyJ,QAAQ,EAAG,GAC1BlC,UAAW,SAGnBmW,UAAU,aACN9c,SAAU,GACVkG,WAAY,IACZnG,MAAO,UACPgd,WAAY,UACX3d,EAAMod,YAAYC,KAAK,MAAQ,CAC5Bzc,SAAU,KAGlBgd,aAAc,CACVhd,SAAU,GACV+c,WAAY,SACZhd,MAAO,UACPgX,cAAe3X,EAAMyJ,QAAQ,MAEjCoU,UAAU,aACNha,MAAO,SACN7D,EAAMod,YAAYC,KAAK,MAAQ,CAC5BxZ,MAAO,QACPvD,aAAcN,EAAMyJ,QAAQ,KAGpCqU,YAAY,aACR/Z,QAAS,QACR/D,EAAMod,YAAYC,KAAK,MAAQ,CAC5BxZ,MAAO,OACPka,cAAe,SACf/Z,YAAa,IAGrBga,aAAc,CACVhX,WAAY,UACZrG,MAAO,UACPoG,QAAS,YACTH,aAAc,EACdhG,SAAU,GACV+c,WAAY,UAEhBM,WAAW,aACPla,QAAS,OACTwC,eAAgB,gBAChBoR,cAAe3X,EAAMyJ,QAAQ,MAC5BzJ,EAAMod,YAAYC,KAAK,MAAQ,CAC5BU,cAAe,WAGvBG,aAAc,CACVlX,WAAY,cACZH,OAAQ,qCACRD,aAAc,EACdG,QAAS/G,EAAMyJ,QAAQ,EAAG,GAC1B7I,SAAU,GACV+c,WAAY,SACZQ,KAAM,EACNna,YAAa,GAEjBoa,eAAgB,CACZpX,WAAY,iCCnGlBZ,EAAY,CACdZ,QDuGWY,ECtGXiY,KCFcrB,aAAW,SAAChd,GAAD,OACzBid,YAAa,CACTqB,KAAM,CACFva,QAAS,OACTga,cAAe,UAEnBvc,QAAS,CACL+c,SAAU,EACVC,WAAYxe,EAAMye,YAAYC,OAAO,SAAU,CAC3CC,OAAQ3e,EAAMye,YAAYE,OAAOC,MACjCC,SAAU7e,EAAMye,YAAYI,SAASC,gBAEzCje,WAAY,IAEhBke,aAAc,CACVP,WAAYxe,EAAMye,YAAYC,OAAO,SAAU,CAC3CC,OAAQ3e,EAAMye,YAAYE,OAAOK,QACjCH,SAAU7e,EAAMye,YAAYI,SAASI,iBAEzCpe,WApBQ,UDIhBwF,MELc2W,aAAW,SAAChd,GAAD,OACzBid,YAAa,CACTiC,YAAa,CACTnb,QAAS,OACTwC,eAAgB,gBAChBE,WAAY,MACZ5C,MAAO,OACPsb,WAAY,IAEhBC,aAAc,CACVpY,WAAY,qBACZhD,YAAa,EACb4C,aAAc,GAElByY,eAAgB,CACZxY,OAAQ,oBACRG,WAAY,cACZhD,YAAa,EACb4C,aAAc,GAElB0Y,cAAe,CACXvb,QAAS,OACT,MAAO,CACHnD,SAAU,kBACV0S,aAActT,EAAMyJ,QAAQ,KAGpC8V,WAAY,CACR3e,SAAU,GACVkG,WAAY,IACZnG,MAAO,WAEX6e,kBAAkB,aACd5e,SAAU,GACVkG,WAAY,KACX9G,EAAMod,YAAYC,KAAK,MAAQ,CAC5Bzc,SAAU,KAGlB6e,QAAS,CACL,SAAU,CACN7e,SAAU,GACVkG,WAAY,KAEhB,WAAY,CACRiH,SAAU,SAEd,uBAAwB,CACpB9J,OAAQ,EACR+J,gBAAiBhO,EAAMmd,QAAQuC,UAAUC,QAIjDC,OAAQ,CACJT,WAAY,EACZxH,cAAe,GAEnBkI,gBAAgB,aACZ9Y,QAAS/G,EAAMyJ,QAAQ,GACvB1F,QAAS,OACT0C,WAAY,UACXzG,EAAMod,YAAYC,KAAK,MAAQ,CAC5B7V,YAAaxH,EAAMyJ,QAAQ,GAC3B6J,aAActT,EAAMyJ,QAAQ,GAC5B,WAAY,CACR1C,QAAS,aAKrBJ,eAAgB,CACZE,OAAQ,oBACRD,aAAc,GACd1C,UAAW,GAEf4b,eAAgB,CACZnC,WAAY,SACZ/c,SAAU,UFrEPwF,O,2aGPF+B,EAAO,uCAAG,WAAOP,EAAYI,EAAoBxC,GAAvC,SAAA3I,EAAA,+EACd+K,EAAWiV,QACf1U,QAAQH,EAAmB5K,QAAQC,QAAS0iB,SAAOC,UAAUC,YAC7DC,KAAK,CAAEC,KAAM3a,KAHK,2CAAH,0DAMPmD,EAAK,uCAAG,WAAOX,EAAoB3C,EAAKqD,EAAQlD,EAAS+C,GAAjD,SAAA1L,EAAA,6DACnBgM,QAAQC,IAAI,UAAWJ,GADJ,kBAGZV,EAAmB6U,QACvBuD,QAAQ/a,EAAK,IAAI0G,IAAUrD,GAAQsD,MAAM,IAAID,IAAU,IAAIyP,IAAI,KAAKjc,WAAYgJ,GAChF2X,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBAPK,2CAAH,8DAWLC,EAAS,uCAAG,WAAOC,EAAkB9X,EAAQlD,GAAjC,SAAA3I,EAAA,+EAChB2jB,EAAiB3D,QACrBuD,QAAQ,IAAIrU,IAAUrD,GAAQsD,MAAM,IAAID,IAAU,IAAIyP,IAAI,KAAKjc,YAC/D2gB,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALS,2CAAH,0DASTG,EAAY,uCAAG,WAAOD,EAAkB9X,EAAQlD,GAAjC,SAAA3I,EAAA,+EACnB2jB,EAAiB3D,QACrBuD,UACAF,KAAK,CAAEC,KAAM3a,EAAS0F,MAAO,IAAIa,IAAUrD,GAAQsD,MAAM,IAAID,IAAU,IAAIyP,IAAI,KAAKjc,aACpF8gB,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALY,2CAAH,0DASZnX,EAAO,uCAAG,WAAOnB,EAAoB3C,EAAKqD,EAAQlD,GAAxC,SAAA3I,EAAA,+EACdmL,EAAmB6U,QACvB6D,SAASrb,EAAK,IAAI0G,IAAUrD,GAAQsD,MAAM,IAAID,IAAU,IAAIyP,IAAI,KAAKjc,YACrE2gB,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALO,2CAAH,4DASPK,EAAW,uCAAG,WAAOH,EAAkB9X,EAAQlD,GAAjC,SAAA3I,EAAA,yDAEgB,+CAArC2jB,EAAiBpjB,QAAQC,QAFJ,yCAGhBmjB,EAAiB3D,QACrB+D,oBACAV,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBAPS,UAUgB,+CAArCE,EAAiBpjB,QAAQC,QAVJ,yCAWhBmjB,EAAiB3D,QACrB+D,oBACAV,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBAfS,gCAkBlBE,EAAiB3D,QACrB6D,SAAS,IAAI3U,IAAUrD,GAAQsD,MAAM,IAAID,IAAU,IAAIyP,IAAI,KAAKjc,YAChE2gB,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBAtBW,2CAAH,0DA0BXO,EAAmB,uCAAG,WAAOL,EAAkB9X,EAAQlD,GAAjC,SAAA3I,EAAA,+EAC1B2jB,EAAiB3D,QACrB+D,oBACAV,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALmB,2CAAH,0DASnBQ,EAAO,uCAAG,WAAO9Y,EAAoB3C,EAAKG,GAAhC,SAAA3I,EAAA,+EACdmL,EAAmB6U,QACvBuD,QAAQ/a,EAAK,IAAK,8CAClB6a,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALO,2CAAH,0DASPS,EAAY,uCAAG,WAAOP,EAAkBhb,GAAzB,SAAA3I,EAAA,+EACnB2jB,EAAiB3D,QACrBuD,QAAQ,KACRF,KAAK,CAAEC,KAAM3a,IACb6a,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALY,2CAAH,wDASZU,EAAe,uCAAG,WAAOR,EAAkBhb,GAAzB,SAAA3I,EAAA,+EACtB2jB,EAAiB3D,QACrBuD,UACAF,KAAK,CAAEC,KAAM3a,EAAS0F,MAAO,IAAIa,IAAU,KAC3CsU,GAAG,mBAAmB,SAACjY,GACtB,OAAOA,EAAGkY,oBALe,2CAAH,yD,2LC7FftR,EAAa,SAACiS,GACzB,IAAMpZ,EAAWC,cAETtC,EAAYuC,cAAZvC,QACFwC,EAAqBC,cAQ3B,MAAO,CAAE8G,SANa5L,sBAAW,sBAAC,4BAAAtG,EAAA,sEACXikB,YAAQ9Y,EAAoBiZ,EAASzb,GAD1B,cAC1BoD,EAD0B,OAEhCf,EAASQ,YAAuB7C,IAFA,kBAGzBoD,GAHyB,2CAI/B,CAACpD,EAASqC,EAAUoZ,EAASjZ,MAKrBkZ,EAAgB,SAACC,GAE5B,IAAQ3b,EAAYuC,cAAZvC,QACFwC,EAAqBC,cAU3B,MAAO,CAAE8G,SARa5L,sBAAW,sBAAC,4BAAAtG,EAAA,6DAC1BukB,EAAkBD,EAASE,QAAO,SAACC,EAAOjc,GAC9C,MAAM,GAAN,mBAAWic,GAAX,CAAkBR,YAAQ9Y,EAAoB3C,EAAKG,OAClD,IAH6B,kBAKzB+b,QAAQC,IAAIJ,IALa,2CAM/B,CAAC5b,EAAS2b,EAAUnZ,O,iCCjCzB,+CAEA+D,IAAU0V,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGY,IAAI5V,IAAU,GAArC,IACM0P,EAAkB,IAAI1P,IAAU,SAGhC6V,EAAoB,kCACE,UAAMA,EAAN,UACC,UAAMA,EAAN","file":"static/js/12.e763334b.chunk.js","sourcesContent":["// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div<{ isMobile: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  max-width: 980px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: ${({ isMobile }) => isMobile ? \"40px\" : \"32px\"};\r\n  & > * {\r\n    min-width: 310px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n  viewMode?: number\r\n  isMobile?: boolean\r\n  marginBottom?: string\r\n}\r\n\r\nconst Wrapper = styled.div<{ viewMode: number }>`\r\n  display: ${({ viewMode }) => viewMode === 1 ? 'flex' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, viewMode, isMobile, marginBottom }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()} viewMode={viewMode} style={{ marginBottom: marginBottom }}>\r\n      {!isMobile && <Text style={{ color: '#A5A5A5', fontSize: 12, marginLeft: 12 }}>\r\n        {expanded ? TranslateString(725, 'Hide') : TranslateString(658, 'Details')}\r\n      </Text>}\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background: #151745;\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, OpenNewIcon } from '@robustswap-libs/uikit'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 300;\r\n  box-shadow: 5px 4px 8px 3px rgba(14, 14, 14, 0.2);\r\n  border: 1px solid #293D71;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n  mode: number\r\n}\r\n\r\nexport default function Tooltip({ text, mode, ...rest }: TooltipProps) {\r\n  if (mode === 0)\r\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n  else if (mode === 1) {\r\n    return (\r\n      <Popover placement=\"top\" content={\r\n        <TooltipContainer style={{ width: 'auto' }}>\r\n          <DropDownList />\r\n        </TooltipContainer>} {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport function DropDownList() {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>RBS-BNB</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>View Contract</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>Pair Info</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MouseoverTooltip({ children, mode, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip mode={mode} {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { InfoIcon } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: transparent;\r\n  //color: ${({ theme }) => theme.colors.text};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text, mode, wth, hgh }: { text: string, mode: number, wth: number, hgh: number }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4, marginTop: 'auto', marginBottom: 'auto' }}>\r\n      <Tooltip text={text} show={show} mode={mode}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <InfoIcon style={{ width: wth, height: hgh }} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { LinkExternal, Text, Flex, OpenNewIcon, Button } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport HarvestAction from './HarvestAction'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface ExpandableSectionProps {\r\n  rbsPrice?: BigNumber\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  tokenMode: boolean\r\n  account?: string\r\n  stakedBalance?: BigNumber\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  rbsPrice,\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  tokenMode,\r\n  account,\r\n  bscScanAddress,\r\n  pairinfo,\r\n  addLiquidityUrl\r\n}) => {\r\n  const { stakedBalance, allowance } = useFarmUser(pid)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const tokenAddress = bscScanAddress.replace('https://bscscan.com/token/', '')\r\n  const TranslateString = useI18n()\r\n  const { canHarvest, earnings } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(tokenAddress, lpLabel, 18, `https://robustswap.com/images/farms/${lpLabel === 'WBNB' ? 'BNB' : lpLabel}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [lpLabel, tokenAddress])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tokenMode ? <>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{lpLabel}</Text>\r\n            <StyledLinkExternal href={addLiquidityUrl}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n            <StyledLinkExternal href={bscScanAddress}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n            <StyledLinkExternal href={pairinfo}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" style={{ marginTop: 16 }}>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n            <Text fontSize=\"16px\">Cake-LP</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>\r\n        </Flex> </> :\r\n        <>\r\n          <Flex justifyContent=\"center\">\r\n            <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, marginBottom: 16, width: '100%', height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n              <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n            </Button>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}:</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text> {/* {depositFee / 100} */}\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block>\r\n          </Flex>\r\n        </>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\n// import useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image, Text } from '@robustswap-libs/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { auto } from '@popperjs/core'\r\n// import { NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  margin-top:auto;\r\n  margin-bottom:auto;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo }) => {\r\n  // const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" style={{ marginBottom: 24 }}>\r\n      <div style={{ width: 40, height: 40 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? 40 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: '100%' }}>\r\n        <Heading>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ width: 170, marginTop: auto, marginBottom: auto }}>\r\n              {lpLabel.replace('LP', '')}\r\n              {lpLabel.indexOf('-') === -1 && <Text style={{ fontSize: 12 }}>Earn RBS</Text>}{/* {lpLabel.replace('LP', '')} */}\r\n            </div>\r\n            {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} />}\r\n          </div>\r\n        </Heading>\r\n        {/* <Flex justifyContent=\"flex-start\">\r\n          <StyledLinkExternal\r\n            href={bscScanAddress}\r\n          >\r\n            {TranslateString(356, 'View Contract')}\r\n          </StyledLinkExternal>\r\n          <StyledLinkExternal\r\n            href={pairinfo}\r\n          >\r\n            {TranslateString(355, 'Pair Info')}\r\n          </StyledLinkExternal>\r\n        </Flex> */}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport { useReferrerAddressFromCookie } from '../state/hooks'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, referrer)\r\n      console.log(\"txHash:\", txHash)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, referrer)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [99999]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n  max?: number | string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, max }) => {\r\n  return (\r\n    <>\r\n      <StyledInputWrapper style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 400, fontSize: 12, lineHeight: '14px', textAlign: 'right' }}>\r\n          Balance: {max.toLocaleString()}\r\n        </Text>\r\n        <div style={{ display: \"flex\", width: '100%' }}>\r\n          {!!startAdornment && startAdornment}\r\n          <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n          {!!endAdornment && endAdornment}\r\n        </div>\r\n      </StyledInputWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #151745;\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  width: auto;\r\n  height: 86px;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width:100%;\r\n  background: none;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const image = `/images/farms/${symbol === 'WBNB' ? 'BNB' : symbol}.svg`;\r\n\r\n  console.log(\"value:\", value)\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <div>\r\n              <Button variant=\"text\" size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'MAX')}\r\n              </Button>\r\n            </div>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Flex>\r\n                {!(symbol.includes('LP')) && <img src={image} alt={symbol} width={24} height={24} />}\r\n                <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n              </Flex>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n        max={max}\r\n      />\r\n      {depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(value || 0).times(depositFeeBP / 10000).toFixed(8)}{' '} {symbol}</Text>\r\n        </StyledMaxText>\r\n      ) : (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(0).toFixed(8)}{' '}{symbol}</Text>\r\n        </StyledMaxText>\r\n      )}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div`\r\n  max-width: 430px;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n  margin-bottom:16px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-left: 4px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, IconButton, Heading, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  background-color: transparent;\r\n  svg {\r\n    width: 52px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentWithdraw} mr=\"10px\">\r\n          <MinusIcon />\r\n        </IconButton>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentDeposit}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ width: rawStakedBalance === 0 ? 'auto' : '100%' }}>\r\n      <div>\r\n        {(rawStakedBalance !== 0 || !tokenName.includes('-')) && (\r\n          <>\r\n            <Heading color='text'>{displayBalance} {tokenName.includes('-') ? 'LP' : tokenName}</Heading>\r\n            <Text fontSize=\"13px\" mt=\"4px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n              ${stakedBalanceUSD.toLocaleString()}\r\n            </Text>\r\n          </>\r\n        )}\r\n      </div>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { AlarmIcon, Button, Flex, Heading, IconButton, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvest?: number\r\n  cardMode?: number\r\n  harvestCount?: () => void\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvest, cardMode = 0, harvestCount }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      {cardMode === 1 && <div>\r\n        <Heading color={account ? rawEarningsBalance === 0 ? 'textDisabled' : 'text' : 'text'} style={{ textAlign: 'left' }}>\r\n          {account ? displayBalance : '-'}\r\n        </Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n            ${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>}\r\n      <BalanceAndCompound style={{ width: cardMode ? 'auto' : '100%', marginLeft: 'auto' }}>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvest > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={harvestCount} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport { Modal, Text } from '@robustswap-libs/uikit'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { Farm } from '../../../state/types'\r\n\r\ninterface HarvestCountdownModalProps {\r\n  farm: Farm\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst HarvestCountdownModal: React.FC<HarvestCountdownModalProps> = ({\r\n  onDismiss,\r\n  nextHarvestUntil,\r\n  harvestInterval,\r\n  farm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const secondsUntilHarvest = nextHarvestUntil - currentTime\r\n  const timeUntil = getTimePeriods(secondsUntilHarvest > 0 ? secondsUntilHarvest : 0)\r\n\r\n  return (\r\n    <Modal title={TranslateString(10029, 'Harvest In')} onDismiss={onDismiss}>\r\n      <Text bold color=\"primary\" fontSize=\"36px\" style={{ textAlign: 'center' }}>\r\n        {formatTimePeriodCountdown(timeUntil)}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"10px\" style={{ textAlign: 'center' }}>\r\n        {farm.isTokenOnly ? 'Pool' : 'Farm'}: {farm.lpSymbol}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"5px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10027, 'Harvest Interval')}: {(harvestInterval / 3600).toLocaleString()}{' '}\r\n        {TranslateString(10028, 'Hours')}\r\n      </Text>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestCountdownModal\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\r\nimport { Button, Flex, Heading, Text, IconButton, AlarmIcon, useModal } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 4px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  tokenMode: boolean\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n  tokenMode,\r\n  addLiquidityUrl\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (rawStakedBalance === 0 && tokenBalance.toString() === '0' && tokenMode) ? (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'GET LP')}\r\n        </Button>\r\n      </Flex>\r\n    ) : (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove} style={{ width: '100%', marginTop: !tokenMode ? 25 : 0 }}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" pr=\"3px\" style={{ color: '#A5A5A5' }}>\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          &nbsp;RBS\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvest={nextHarvestUntil} cardMode={1} harvestCount={onPresentHarvestCountdown} />\r\n      {tokenMode ? <>\r\n        <Flex>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {rawStakedBalance === 0 ? TranslateString(453, 'Available LP') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          {rawStakedBalance === 0 ?\r\n            <div style={{ textAlign: 'left' }}>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 600 }}>\r\n                {Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP\r\n              </Text>\r\n              <Text fontSize=\"13px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n            </div> :\r\n            <Heading style={{ marginTop: 15, opacity: 0 }} />\r\n          }\r\n          {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n        </Flex>\r\n      </> :\r\n        <>\r\n          <Flex>\r\n            {isApproved && <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 8 }}>\r\n              {TranslateString(329, 'Staked')} {lpName}\r\n            </Text>}\r\n          </Flex>\r\n          {!account ? <UnlockButton fullWidth /> : renderApprovalOrStakeButton()}\r\n        </>\r\n      }\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import BigNumber from \"bignumber.js\"\r\n\r\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, rbsPrice, lpTotalInQuoteToken }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / rbsPrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  console.log(\"days:\", numberOfDays, finalAmount)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n  // const exception = lpTotalInQuoteToken?.toString() === '0' ? 100 : 1;\r\n  // return roundToTwoDp(interestEarned * (exception)) // exception when staking is 0\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const swapUrlPathParts = `?outputCurrency=${tokenAddresses[chainId]}`\r\n  console.log(\"farmAPY:\", apy.toString())\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / rbsPrice.toNumber()\r\n  const getUrl = lpLabel.includes('-') ?\r\n    `https://exchange.robustswap.com/#/add/${liquidityUrlPathParts}` :\r\n    `https://exchange.robustswap.com/#/swap${swapUrlPathParts}`\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Daily compounding calculation based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" as=\"a\" href={getUrl} style={{ width: '100%' }}>\r\n          {TranslateString(505, 'Get')} {lpLabel}\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      rbsPrice={rbsPrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Skeleton, Text } from '@robustswap-libs/uikit'\r\n// import { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: #1E215C;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 16px 16px 0px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 320px !important;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n  background: #151745;\r\n  margin: 0px -16px;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  rbsPrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  usdcPrice?: BigNumber\r\n  usdtPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n  isMobile?: boolean\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice, ethereum, account, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, ethPrice, usdcPrice, usdtPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue && !new BigNumber(totalValue).isNaN()\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const chainId = 56\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.com/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    let lpTokenPriceVsQuote\r\n    if (farm.isTokenOnly) {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.tokenPriceVsQuote)\r\n    } else {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    ethPrice,\r\n    usdcPrice,\r\n    usdtPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n    // farm.tokenSymbol\r\n  ])\r\n\r\n  return (\r\n    <FCard>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        depositFee={farm.depositFeeBP}\r\n        primaryToken={earningToken}\r\n        secondToken={stakingToken}\r\n        tokenSymbol={farm.tokenSymbol}\r\n        bscScanAddress={\r\n          farm.isTokenOnly\r\n            ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n        pairinfo={\r\n          farm.isTokenOnly\r\n            ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n      />\r\n      {!removed && (\r\n        <Block>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n          <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n            {farm.apy ? (\r\n              <>\r\n                {farmAPY ? farmAPY : 0}%\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  rbsPrice={rbsPrice}\r\n                  apy={farm.apy}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Block>\r\n      )}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(408, 'Total Staked')}:\r\n        </Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n      </Block>\r\n      {/* {lpLabel.indexOf('-') >= 0 &&  */}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n      </Block>\r\n      {/* } */}\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        ethereum={ethereum}\r\n        account={account}\r\n        harvestInterval={farm.harvestInterval}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n        rbsPrice={rbsPrice}\r\n        tokenMode={lpLabel.indexOf('-') >= 0}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n        viewMode={1}\r\n        isMobile={isMobile}\r\n        marginBottom=\"16px\"\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          rbsPrice={rbsPrice}\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          tokenMode={lpLabel.indexOf('-') >= 0}\r\n          account={account}\r\n          bscScanAddress={\r\n            farm.isTokenOnly\r\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          pairinfo={\r\n            farm.isTokenOnly\r\n              ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  background-color: transparent;\r\n  svg {\r\n    width: 52px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString(undefined, {\r\n    minimumFractionDigits: 3,\r\n    maximumFractionDigits: 3,\r\n  })\r\n  const tokenMode = tokenName.includes('-')\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentWithdraw} mr=\"10px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton style={{ backgroundColor: 'transparent', boxShadow: 'none' }} onClick={onPresentDeposit}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {renderStakingButtons()}\r\n      <div>\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {!tokenMode ? `${TranslateString(329, 'Staked')} ${tokenName}` : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n          <Text fontSize=\"16px\">{displayBalance} {!tokenMode ? tokenName : 'LP'}</Text>\r\n          <Text fontSize=\"12px\">${stakedBalanceUSD.toFixed(3)}</Text>\r\n        </div>\r\n      </div>\r\n    </Flex >\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  if (farm.tokenSymbol === 'BUSD')\r\n    console.log(\"BUSD-BNB:\", rawEarningsBalance, canHarvest)\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex alignItems=\"center\">\r\n      <BalanceAndCompound>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading\r\n          color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}\r\n          style={{ fontSize: 16, fontWeight: 400, lineHeight: 1.5 }}>\r\n          {displayBalance}\r\n        </Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"12px\" color=\"white\" style={{ textAlign: 'left' }}>\r\n            ${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  tokenMode: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n  tokenMode\r\n}) => {\r\n\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport useStake from '../../../../hooks/useStake'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  rbsPrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  // from {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n\r\n  // 10%,\r\n  // 20% {\r\n  //   transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // 30%,\r\n  // 50%,\r\n  // 70%,\r\n  // 90% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  // }\r\n\r\n  // 40%,\r\n  // 60%,\r\n  // 80% {\r\n  //   transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  // }\r\n\r\n  // to {\r\n  //   transform: scale3d(1, 1, 1);\r\n  // }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  // animation: ${tada} 5s ease-in-out infinite;\r\n  // transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 24px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, rbsPrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(rbsPrice))\r\n  const compoundRawEarningsBalance = getBalanceNumber(earnings.minus(earnings.times(0.05).integerValue()))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      <BalanceAndCompound>\r\n        {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n          <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n            <TadaAlarmIcon />\r\n          </StyledIconButton>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{\r\n            minWidth: '122px',\r\n            color: 'white',\r\n            opacity: (rawEarningsBalance === 0 || !canHarvest || pendingTx) ? 0.4 : 1\r\n          }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport MobileHarvestAction from './MobileHarvestAction'\r\n\r\nconst Action = styled.div`\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n  text-align: right;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  rbsPrice,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }} justifyContent=\"space-between\">\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {TranslateString(999, 'Staked Tokens')}\r\n          </Text>\r\n          <Text fontSize=\"14px\">{isApproved ? stakedBalance : 0} RBS</Text>\r\n          <Text fontSize=\"12px\">${isApproved ? (stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString() : 0}</Text>\r\n        </div>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(495, 'Enable Farm')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <MobileHarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} rbsPrice={rbsPrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { LinkExternal, OpenNewIcon, Text, Flex, Button } from '@robustswap-libs/uikit'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport MobileCardActionsContainer from './MobileCardActionsContainer'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  rbsPrice?: BigNumber\r\n  isMobile: boolean\r\n  removed: boolean\r\n  totalValueFormated?: string\r\n  tokenMode: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<{ tokenMode: boolean }>`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  padding: 24px 0px 0px 0px;\r\n  padding-bottom: ${({ tokenMode }) => tokenMode ? \"24px\" : \"0px\"};\r\n  text-align: left;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledBlock = styled.div`\r\n  background-color: #293D71;\r\n  padding-bottom: 8px;\r\n  margin: 12px 0px;\r\n  padding: 8px 24px;\r\n  background-image: url('/images/farm-step.svg');\r\n  background-position: 16px, center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps & FarmCardActionsProps> = ({\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  rbsPrice,\r\n  isMobile,\r\n  removed,\r\n  totalValueFormated,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { tokenBalance } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const chainId = 56\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(farm.tokenAddresses[chainId], farm.tokenSymbol, 18, `https://robustswap.com/images/farms/${farm.tokenSymbol === 'WBNB' ? 'BNB' : farm.tokenSymbol}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [farm])\r\n\r\n  const bscScanAddress = farm.isTokenOnly\r\n    ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const pairinfo = farm.isTokenOnly\r\n    ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.com/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  return (\r\n    <Wrapper tokenMode={tokenMode}>\r\n      {isMobile ?\r\n        <>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold', color: '#FF6B2A' }}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of PANTHER rewards each farm gets. For example, if a 1x farm was getting 1 PANTHER per block, a 40x farm would be getting 40 PANTHER per block.')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(408, 'Total Staked')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n                {tokenMode ?\r\n                  <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                  <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n                }\r\n              </Flex>\r\n            </Block>\r\n          </Flex>\r\n          <StyledBlock>\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              <div style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                <Text fontSize=\"14px\">{Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP</Text>\r\n                <Text fontSize=\"12px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n              </div>\r\n              <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl}>\r\n                {TranslateString(507, 'GET LP')}\r\n              </Button>\r\n            </Flex>\r\n            <MobileCardActionsContainer\r\n              farm={farm}\r\n              ethereum={ethereum}\r\n              account={account}\r\n              harvestInterval={harvestInterval}\r\n              stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n              rbsPrice={rbsPrice}\r\n            />\r\n          </StyledBlock>\r\n        </> :\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Flex alignItems=\"center\">\r\n            {!tokenMode && <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ marginRight: 16 }}>\r\n              {TranslateString(507, 'GET LP')}\r\n            </Button>}\r\n            <div>\r\n              {tokenMode ?\r\n                <>\r\n                  <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ width: 89, height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n                    <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n                  </Button>\r\n                </> :\r\n                <>\r\n                  <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                  <Text fontSize=\"16px\">{Number(getFullDisplayBalance(tokenBalance)).toFixed(3)} LP</Text>\r\n                  <Text fontSize=\"12px\">${(Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()).toFixed(3)}</Text>\r\n                </>\r\n              }\r\n            </div>\r\n          </Flex>\r\n          {tokenMode && <>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n          </>}\r\n          {tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>}\r\n          {!tokenMode && <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />}\r\n          <CardActionsContainer\r\n            farm={farm}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            harvestInterval={harvestInterval}\r\n            stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n            rbsPrice={rbsPrice}\r\n            tokenMode={tokenMode}\r\n          />\r\n        </Flex>\r\n      }\r\n      {!isMobile && !tokenMode && <Divider style={{ marginTop: 16, marginBottom: 16 }} />}\r\n      {isMobile ?\r\n        <Flex justifyContent=\"space-between\" style={{ padding: '0px 24px' }}>\r\n          {!tokenMode && <><Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"12px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"12px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"12px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex> :\r\n        <Flex>\r\n          {!tokenMode && <>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n              <StyledLinkExternal href={addLiquidityUrl}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n              <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"16px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginTop: -1 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex>\r\n      }\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image } from '@robustswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex) <{ isMobile: boolean }>`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  flex-grow: 0.2;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 24px' : '0px 0px'}\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" isMobile={isMobile}>\r\n      {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} marginRight={16} />}\r\n      <div style={{ width: 40, height: isMobile ? 40 : 44 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? isMobile ? 40 : 44 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: 165, marginTop: 10 }}>\r\n        <Heading mb=\"8px\" style={{ fontWeight: 800 }}>{lpLabel.replace('LP', '')}</Heading>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / rbsPrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, rbsPrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Daily compounding calculation based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.com/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  rbsPrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  rbsPrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      rbsPrice={rbsPrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Text, Skeleton, Flex } from '@robustswap-libs/uikit'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FList = styled.div<{ isMobile: boolean }>`\r\n  align-self: baseline;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: ${({ isMobile }) => isMobile ? '0px' : '0px 24px'};\r\n  position: relative;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  background-color: #151745;\r\n  margin: 0px -24px 0px -24px;\r\n  border-radius: 0px 0px 8px 8px;\r\n  padding: 0px 24px 0px 24px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  rbsPrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  usdcPrice?: BigNumber\r\n  usdtPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string,\r\n  isMobile: boolean,\r\n  tokenMode: boolean\r\n}\r\n\r\nconst FarmList: React.FC<FarmCardProps> = ({ farm, removed, rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice, ethereum, account, isMobile, tokenMode }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const { earnings } = useFarmUser(farm.pid)\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, ethPrice, usdcPrice, usdtPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated =\r\n    totalValue && !new BigNumber(totalValue).isNaN()\r\n      ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : '-'\r\n\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  // const earnLabel = 'ROBUST'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    let lpTokenPriceVsQuote\r\n    if (farm.isTokenOnly) {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.tokenPriceVsQuote)\r\n    } else {\r\n      lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    }\r\n\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n      return usdcPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n      return usdtPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    ethPrice,\r\n    usdcPrice,\r\n    usdtPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly\r\n  ])\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n  return (\r\n    <FList isMobile={isMobile} style={{ backgroundColor: '#1E215C', width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      {isMobile ?\r\n        <>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            {!removed && (\r\n              <Block>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n                <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#FF6B2A' }}>\r\n                  {farm.apy ? (\r\n                    <>\r\n                      {farmAPY}%\r\n                      <ApyButton\r\n                        lpLabel={lpLabel}\r\n                        quoteTokenAdresses={quoteTokenAdresses}\r\n                        quoteTokenSymbol={quoteTokenSymbol}\r\n                        tokenAddresses={tokenAddresses}\r\n                        rbsPrice={rbsPrice}\r\n                        apy={farm.apy}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <Skeleton height={24} width={80} />\r\n                  )}\r\n                </Text>\r\n              </Block>\r\n            )}\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'ROBUST Earned')}:</Text>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n            </Block>\r\n            <ExpandableSectionButton\r\n              onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n              expanded={showExpandableSection}\r\n              viewMode={0}\r\n              isMobile={isMobile}\r\n            />\r\n          </Flex>\r\n        </> :\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ height: 88 }}>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          {!removed && (\r\n            <Block style={{ marginBottom: 'auto', marginTop: 'auto' }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n              <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n                {farm.apy ? (\r\n                  <>\r\n                    {farmAPY}%\r\n                    <ApyButton\r\n                      lpLabel={lpLabel}\r\n                      quoteTokenAdresses={quoteTokenAdresses}\r\n                      lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                      quoteTokenSymbol={quoteTokenSymbol}\r\n                      tokenAddresses={tokenAddresses}\r\n                      rbsPrice={rbsPrice}\r\n                      apy={farm.apy}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Skeleton height={24} width={80} />\r\n                )}\r\n              </Text>\r\n            </Block>\r\n          )}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n              {TranslateString(408, 'Total Staked')}:\r\n            </Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800 }}>{!removed ? totalValueFormated : 0}</Text>\r\n              {tokenMode ?\r\n                <QuestionHelper text={TranslateString(305, 'Total USD value of funds in this pool')} wth={16} hgh={16} mode={0} /> :\r\n                <QuestionHelper text={TranslateString(301, 'Total USD value of funds in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n              }\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n              <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'Earned')}:</Text>\r\n            <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n          </Block>\r\n          <ExpandableSectionButton\r\n            onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n            expanded={showExpandableSection}\r\n            viewMode={0}\r\n            isMobile={isMobile}\r\n          />\r\n        </Flex>\r\n      }\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          farm={farm}\r\n          ethereum={ethereum}\r\n          account={account}\r\n          rbsPrice={rbsPrice}\r\n          isMobile={isMobile}\r\n          removed={removed}\r\n          totalValueFormated={totalValueFormated}\r\n          tokenMode={tokenMode}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FList>\r\n  )\r\n}\r\n\r\nexport default FarmList\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle, Button, Input } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { setWith } from 'lodash';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly, viewMode, setViewMode, filter, setFilter, sort, setSort, isMobile }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSort(event.target.value as number);\r\n  };\r\n  return (\r\n    <Wrapper isMobile={isMobile} style={{ width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      <Flex style={{ paddingBottom: isMobile ? '16px' : 0 }}>\r\n        {!isMobile &&\r\n          <>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(false)\r\n              Cookies.set('viewMode', false)\r\n            }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-list.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-list-active.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(true)\r\n              Cookies.set('viewMode', true)\r\n            }} style={{ marginRight: 28 }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-card-active.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-card.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n          </>}\r\n        <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: 0, width: 67 }}>\r\n            {TranslateString(601, 'Live')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: 0, width: 108 }}>\r\n            {TranslateString(599, 'Finished')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <ToggleWrapper>\r\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n          <Text style={{ color: '#7381FC', fontSize: isMobile ? '14px' : '16px' }}> {TranslateString(699, 'Staked only')}</Text>\r\n        </ToggleWrapper>\r\n      </Flex>\r\n      <Flex>\r\n        <Input\r\n          id=\"search\"\r\n          name=\"search-card\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(10011, 'Search')}\r\n          style={{ maxWidth: 170, marginRight: 8 }}\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.currentTarget.value)}\r\n        // isWarning={error}\r\n        // disabled={isloading}\r\n        />\r\n        <Select\r\n          value={sort}\r\n          onChange={handleChangeSelect}\r\n          style={{\r\n            borderRadius: 8,\r\n            background: \"rgba(30, 33, 92, 1)\",\r\n            paddingLeft: \"16px\",\r\n            width: '100%',\r\n            // border: '1px solid rgba(107, 161, 255, 0.2)',\r\n            height: 40,\r\n            color: '#7381FC',\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            backgroundColor: '#1E215C'\r\n          }}\r\n          IconComponent={\r\n            () => (<ArrowDropDownIcon style={{ color: \"#7381FC\" }} />)\r\n          }\r\n          disableUnderline\r\n        >\r\n          <StyledMenuItem value={1}>{TranslateString(395, 'HOT')}</StyledMenuItem>\r\n          <StyledMenuItem value={2}>{TranslateString(457, 'Multiplier')}</StyledMenuItem>\r\n          <StyledMenuItem value={3}>{TranslateString(352, 'APR')}</StyledMenuItem>\r\n          <StyledMenuItem value={4}>{TranslateString(686, 'Liquidity')}</StyledMenuItem>\r\n          <StyledMenuItem value={5}>{TranslateString(331, 'Earned')}</StyledMenuItem>\r\n        </Select>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div<{ isMobile: boolean }>`\r\n  display: ${({ isMobile }) => isMobile ? 'block' : 'flex'};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 0px' : '0px 8px'};\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 16px;\r\n  ${Text} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 0px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 16px;\r\n  background: transparent;\r\n`\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMenuItem = styled(MenuItem)`\r\n  color: #7381FC;\r\n`","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport Cookies from 'js-cookie'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceRbsBusd, usePriceEthBusd, usePriceRbtBusd, usePriceUsdcBusd, usePriceUsdtBusd } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from 'hooks/useGetDocumentTitlePrice'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmList from './components/FarmList/FarmList'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Hero = styled.div<{ isMobile: boolean, tokenMode: boolean }>`\r\n  background-image: ${({ tokenMode, isMobile }) => !tokenMode ?\r\n    (isMobile ? \"url('/images/farms/farms-header-bg-mobile.png')\" : \"url('/images/farms/farms-header-bg.png')\") :\r\n    (isMobile ? \"url('/images/farms/pools-header-bg-mobile.png')\" : \"url('/images/farms/pools-header-bg.png')\")};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 44px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n  height: ${({ isMobile }) => isMobile ? \"240px\" : \"320px\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 34px;\r\n  line-height: 40px;\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 36px;\r\n`\r\nconst PubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  max-width: ${({ isMobile }) => isMobile ? \"327px\" : \"538px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300; \r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst FarmBanner = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/farms-banner-bg.png')\" : \"url('/images/farms/farms-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 34px 86px 34px 25px;\r\n`\r\nconst FarmBanner1 = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/pools-banner-bg.png')\" : \"url('/images/farms/pools-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 48px 96px 48px 25px;\r\n`\r\nconst BannerText = styled.text`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n`\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const isMobile = useMedia('(max-width: 768px)')\r\n  const TranslateString = useI18n()\r\n  let farmsLP = useFarms()\r\n  const [filter, setFilter] = useState('')\r\n  const [sort, setSort] = useState(1);\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const rbsPrice = usePriceRbsBusd()\r\n  let bnbPrice = usePriceBnbBusd()\r\n  bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  const ethPrice = usePriceEthBusd()\r\n  const usdcPrice = usePriceUsdcBusd()\r\n  const usdtPrice = usePriceUsdtBusd()\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n  const { tokenMode } = farmsProps\r\n  useGetDocumentTitlePrice(!tokenMode ? 'Farms' : 'Pools')\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n  const [viewMode, setViewMode] = useState(isMobile ? isMobile : Cookies.get('viewMode') ? Cookies.get('viewMode') === 'true' : !isMobile)\r\n\r\n  const sortByMultiplier = (item1, item2) => {\r\n    return item2.multiplier.replace('X', '') - item1.multiplier.replace('X', '');\r\n  }\r\n  const sortByAPR = (item1, item2) => {\r\n    return item2.apy - item1.apy\r\n  }\r\n  const sortByLiquidity = (item1, item2) => {\r\n    return item2.lpTotalInQuoteToken - item1.lpTotalInQuoteToken\r\n  }\r\n  const sortByEarned = (item1, item2) => {\r\n    return item2.userData.earnings - item1.userData.earnings\r\n  }\r\n  // activeFarms.sort(sortByMultiplier);\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  if (filter !== '') {\r\n    activeFarms = activeFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  if (filter !== '') {\r\n    inactiveFarms = inactiveFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  if (filter !== '') {\r\n    stakedOnlyFarms = stakedOnlyFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const rbsRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n          .times(new BigNumber(farm.poolWeight))\r\n          .div(new BigNumber(10).pow(18))\r\n\r\n        const rbsRewardPerYear = rbsRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        let apy = rbsPrice.times(rbsRewardPerYear)\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          totalValue = totalValue.times(ethPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n          totalValue = totalValue.times(usdcPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n          totalValue = totalValue.times(usdtPrice)\r\n        }\r\n\r\n        if (totalValue.comparedTo(0) > 0) {\r\n          apy = apy.div(totalValue)\r\n        }\r\n        else apy = apy.div(100000000)  // exception when staking is 0\r\n        return { ...farm, apy }\r\n      })\r\n\r\n      if (sort === 1) {\r\n        // farmsToDisplayWithAPY.sort()\r\n      } else if (sort === 2) {\r\n        farmsToDisplayWithAPY.sort(sortByMultiplier)\r\n      } else if (sort === 3) {\r\n        farmsToDisplayWithAPY.sort(sortByAPR)\r\n      } else if (sort === 4) {\r\n        farmsToDisplayWithAPY.sort(sortByLiquidity)\r\n      } else if (sort === 5) {\r\n        farmsToDisplayWithAPY.sort(sortByEarned)\r\n      }\r\n      if (viewMode) {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmCard\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            rbsPrice={rbsPrice}\r\n            usdcPrice={usdcPrice}\r\n            usdtPrice={usdtPrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={false}\r\n          />\r\n        ))\r\n      } else {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmList\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            rbsPrice={rbsPrice}\r\n            ethPrice={ethPrice}\r\n            usdcPrice={usdcPrice}\r\n            usdtPrice={usdtPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={isMobile}\r\n            tokenMode={tokenMode}\r\n          />\r\n        ))\r\n      }\r\n    },\r\n    [bnbPrice, account, rbsPrice, ethPrice, usdcPrice, usdtPrice, ethereum, sort, viewMode, isMobile, tokenMode],\r\n  )\r\n  return (\r\n    <>\r\n      <Hero isMobile={isMobile} tokenMode={tokenMode}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbsPrice.toFixed(2)}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '38px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ display: 'block' }}>\r\n            <StyledHeading isMobile={isMobile}>\r\n              {tokenMode\r\n                ? TranslateString(676, 'Pools')\r\n                : TranslateString(674, 'Farms')}\r\n            </StyledHeading>\r\n            <PubTitle isMobile={isMobile}>\r\n              {tokenMode ?\r\n                TranslateString(730, 'Looking for competitive rewards, low-risk, and no impermanent-loss farming alternative? Stake your RBS and other tokens below to earn more RBS.') :\r\n                TranslateString(729, 'ROBUSTSWAP Farms offer multiple farming opportunities and high rewards to you. Get rewarded by staking your LP tokens.')\r\n              }\r\n            </PubTitle>\r\n          </div>\r\n          {!isMobile && <div>\r\n            {tokenMode ?\r\n              <>\r\n                <FarmBanner1 isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(737, 'High APR,')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(738, 'low risk earning.')}</BannerText>\r\n                </FarmBanner1>\r\n              </>\r\n              :\r\n              <>\r\n                <FarmBanner isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(734, 'Enjoy')}</BannerText>&nbsp;\r\n                    <BannerText style={{ color: '#D6EE47' }}>{TranslateString(735, 'FREE')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(736, 'deposit with our featured farms.')}</BannerText>\r\n                </FarmBanner>\r\n              </>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </Hero>\r\n      <Page>\r\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} viewMode={viewMode} setViewMode={setViewMode} filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} isMobile={isMobile} />\r\n        <div>\r\n          <FlexLayout isMobile={isMobile}>\r\n            <Route exact path={`${path}`}>\r\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n            </Route>\r\n            <Route exact path={`${path}/history`}>\r\n              {farmsList(inactiveFarms, true)}\r\n            </Route>\r\n          </FlexLayout>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  console.log(\"amount:\", amount)\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.com'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n"],"sourceRoot":""}