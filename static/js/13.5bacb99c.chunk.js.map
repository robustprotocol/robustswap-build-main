{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","hooks/useWeb3.ts","hooks/useContract.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","config/constants/index.ts","utils/erc20.ts","utils/callHelpers.ts","components/UnlockButton.tsx","hooks/useHarvest.ts","config/index.ts","hooks/useStake.ts","utils/wallet.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/HarvestCountdownModal.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/getLiquidityUrlPathParts.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmList/StakeAction.tsx","views/Farms/components/FarmList/HarvestAction.tsx","views/Farms/components/FarmList/CardActionsContainer.tsx","views/Farms/components/FarmList/MobileHarvestAction.tsx","views/Farms/components/FarmList/MobileCardActionsContainer.tsx","views/Farms/components/FarmList/DetailsSection.tsx","views/Farms/components/FarmList/CardHeading.tsx","views/Farms/components/FarmList/ApyCalculatorModal.tsx","views/Farms/components/FarmList/ApyButton.tsx","views/Farms/components/FarmList/FarmList.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","useCakeRouter","cakeRouter","getCakeRouterAddress","useStyles","makeStyles","theme","createStyles","mainContainer","padding","spacing","background","palette","default","height","breakpoints","down","cardWrapper","width","marginRight","hegiht","paper","border","borderRadius","textAlign","alignItems","cardWrapper1","pageTitle","fontSize","fontWeight","color","fontFamily","subPageTitle","paddingBottom","bgWrapper","marginBottom","bodyWrapper","display","flexDirection","walletButton","statsValue","justifyContent","switchButton","flex","activeSwitcher","account","base","root","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","chart","chartHeader","paddingTop","activeStatus","deactiveStatus","changePercent","paddingRight","chartTitle","currentChartValue","tabList","minWidth","backgroundColor","secondary","light","select","detailChartTabs","paddingLeft","metamaskButton","marginTop","mobileMenuItem","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","getContract","provider","erc20","getTokenBalance","tokenAddress","userAddress","a","methods","balanceOf","call","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","referrer","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","UnlockButton","props","connect","reset","onPresentConnectModal","useWalletModal","self","title","variant","onClick","useHarvest","farmPid","dispatch","useDispatch","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","useStake","useReferrerAddressFromCookie","handleStake","console","log","info","onStake","registerToken","tokenDecimals","tokenImage","window","request","method","params","type","symbol","image","tokenAdded","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","formatTimePeriodCountdown","periods","FlexLayout","styled","div","isMobile","Wrapper","viewMode","colors","primary","ExpandableSectionButton","expanded","TranslateString","role","style","defaultProps","PopoverContainer","show","card","transparentize","textSubtle","ReferenceElement","Arrow","Popover","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","tick","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","mode","rest","DropDownList","QuestionWrapper","invertedContrast","QuestionHelper","wth","hgh","setShow","open","close","onMouseEnter","onMouseLeave","Block","StyledLinkExternal","LinkExternal","DetailsSection","cakePrice","lpLabel","depositFee","harvestInterval","tokenMode","stakedTokenPriceUSD","bscScanAddress","pairinfo","addLiquidityUrl","useFarmUser","allowance","stakedBalance","isGreaterThan","classes","canHarvest","earnings","registerNativeToken","href","toLocaleString","src","alt","Flex","CardHeading","primaryToken","secondToken","auto","indexOf","useApprove","onApprove","useUnstake","handleUnstake","onUnstake","StyledSpacer","size","Spacer","s","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","React","Children","toArray","child","i","StyledInputWrapper","radii","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","max","lineHeight","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","onSelectMax","depositFeeBP","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","disabled","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","rawStakedBalance","stakedBalanceUSD","useModal","onPresentDeposit","onPresentWithdraw","mt","mr","BalanceAndCompound","HarvestAction","cardMode","rawEarningsBalance","earningBalanceUSD","mb","opacity","HarvestCountdownModal","nextHarvestUntil","secondsUntilHarvest","timeUntil","bold","isTokenOnly","lpSymbol","Action","StyledIconButton","IconButton","warning","tada","keyframes","TadaAlarmIcon","AlarmIcon","CardActions","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","tokenAddresses","lpAddress","lpName","toUpperCase","isApproved","handleApprove","error","renderApprovalOrStakeButton","as","onPresentHarvestCountdown","textTransform","pr","gt","Number","fullWidth","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","firstPart","secondPart","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","lpTotalInQuoteToken","apyAsDecimal","daysAsDecimalOfYear","principal","interestEarned","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","StyledLink","Link","ApyCalculatorModal","apy","liquidityUrlPathParts","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","external","textDecoration","ApyButton","onPresentApyModal","ml","RainbowLight","StyledCardAccent","FCard","Divider","ExpandingWrapper","FarmCard","removed","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","earningToken","stakingToken","totalValue","QuoteToken","BNB","CAKE","ETH","totalValueFormated","isNaN","undefined","maximumFractionDigits","exception","farmAPY","minimumFractionDigits","tokenPriceVsQuote","lpTokenPriceVsQuote","quoteTokenBlanceLP","lpTotalSupply","multiplier","CardActionsContainer","compoundRawEarningsBalance","minus","integerValue","MobileHarvestAction","StyledBlock","MobileCardActionsContainer","FList","FarmList","innerWidth","setWth","document","getElementsByClassName","clientWidth","min1","setMin1","min2","setMin2","maxWidth","FarmTabButtons","stakedOnly","setStakedOnly","setViewMode","setFilter","sort","setSort","useRouteMatch","url","isExact","StyledButton","Cookies","set","activeIndex","to","ToggleWrapper","scale","checked","Select","event","target","IconComponent","disableUnderline","StyledMenuItem","Button","MenuItem","Hero","mediaQueries","lg","StyledHeading","Heading","PubTitle","LogTitle","LogPrice","FarmBanner","FarmBanner1","BannerText","Farms","farmsProps","path","useMedia","farmsLP","useFarms","usePriceCakeBusd","usePriceBnbBusd","usePriceEthBusd","rbtPrice","usePriceRbtBusd","fastRefresh","useRefresh","get","sortByMultiplier","item1","item2","sortByAPR","sortByLiquidity","sortByEarned","userData","activeFarms","inactiveFarms","stakedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","cakeRewardPerYear","rbsPerBlock","poolWeight","comparedTo","borderRight","Page","exact"],"mappings":"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","file":"static/js/13.5bacb99c.chunk.js","sourcesContent":["import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the ethereum provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\r\n  const refEth = useRef(ethereum)\r\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\r\n\r\n  useEffect(() => {\r\n    if (ethereum !== refEth.current) {\r\n      setweb3(new Web3(ethereum || httpProvider))\r\n      refEth.current = ethereum\r\n    }\r\n  }, [ethereum])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useEffect, useState } from 'react'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getMasterChefAddress,\r\n  getCakeAddress,\r\n  getReferralAddress,\r\n  getCakeRouterAddress,\r\n} from 'utils/addressHelpers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport ifo from 'config/abi/ifo.json'\r\nimport ens from 'config/abi/ens-registrar.json'\r\nimport ens_resolver from 'config/abi/ens-public-resolver.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport referral from 'config/abi/referral.json'\r\nimport cakeRouter from 'config/abi/cakeRouter.json'\r\nimport pair from 'config/abi/pair.json'\r\n\r\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = useWeb3()\r\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\r\n\r\n  useEffect(() => {\r\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\r\n  }, [abi, address, contractOptions, web3])\r\n\r\n  return contract\r\n}\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const ifoAbi = (ifo as unknown) as AbiItem\r\n  return useContract(ifoAbi, address)\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const erc20Abi = (erc20 as unknown) as AbiItem\r\n  return useContract(erc20Abi, address)\r\n}\r\n\r\nexport const useCake = () => {\r\n  return useERC20(getCakeAddress())\r\n}\r\n\r\nexport const usePancakeRabbits = (address: string) => {\r\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\r\n  return useContract(pancakeRabbitsAbi, address)\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const abi = (masterChef as unknown) as AbiItem\r\n  return useContract(abi, getMasterChefAddress())\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  const abi = (rawAbi as unknown) as AbiItem\r\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\r\n}\r\n\r\nexport const useReferral = () => {\r\n  const abi = (referral as unknown) as AbiItem\r\n  return useContract(abi, getReferralAddress())\r\n}\r\n\r\nexport const useCakeRouter = () => {\r\n  const abi = (cakeRouter as unknown) as AbiItem\r\n  return useContract(abi, getCakeRouterAddress())\r\n}\r\n\r\nexport const usePath = (address: string) => {\r\n  const abi = (pair as unknown) as AbiItem\r\n  return useContract(abi, address)\r\n}\r\n\r\nexport const useENSRegistrarContract = () => {\r\n  const abi = (ens as unknown) as AbiItem\r\n  let address: string | undefined\r\n  return useContract(abi, address)\r\n}\r\n\r\nexport const useENSResolverContract = (address: string | undefined) => {\r\n  const abi = (ens_resolver as unknown) as AbiItem\r\n  return useContract(address, abi)\r\n}\r\n\r\nexport default useContract\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.fi'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\nimport { useReferrerAddressFromCookie } from '../state/hooks'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, referrer)\r\n      console.log(\"txHash:\", txHash)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const referrer = useReferrerAddressFromCookie()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, referrer)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div<{ isMobile: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  max-width: 980px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: ${({ isMobile }) => isMobile ? \"40px\" : \"32px\"};\r\n  & > * {\r\n    min-width: 310px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n  viewMode?: number\r\n  isMobile?: boolean\r\n  marginBottom?: string\r\n}\r\n\r\nconst Wrapper = styled.div<{ viewMode: number }>`\r\n  display: ${({ viewMode }) => viewMode === 1 ? 'flex' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded, viewMode, isMobile, marginBottom }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()} viewMode={viewMode} style={{ marginBottom: marginBottom }}>\r\n      {!isMobile && <Text style={{ color: '#A5A5A5', fontSize: 12, marginLeft: 12 }}>\r\n        {expanded ? TranslateString(725, 'Hide') : TranslateString(658, 'Details')}\r\n      </Text>}\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background: #151745;\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, OpenNewIcon } from '@robustswap-libs/uikit'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 300;\r\n  box-shadow: 5px 4px 8px 3px rgba(14, 14, 14, 0.2);\r\n  border: 1px solid #293D71;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n  mode: number\r\n}\r\n\r\nexport default function Tooltip({ text, mode, ...rest }: TooltipProps) {\r\n  if (mode === 0)\r\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n  else if (mode === 1) {\r\n    return (\r\n      <Popover placement=\"top\" content={\r\n        <TooltipContainer style={{ width: 'auto' }}>\r\n          <DropDownList />\r\n        </TooltipContainer>} {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport function DropDownList() {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>RBS-BNB</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>View Contract</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Text style={{ fontSize: 15, marginRight: 6 }}>Pair Info</Text>\r\n        <OpenNewIcon style={{ width: 16, height: 16, marginTop: 'auto', marginBottom: 'auto' }} />\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MouseoverTooltip({ children, mode, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip mode={mode} {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { InfoIcon } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: transparent;\r\n  //color: ${({ theme }) => theme.colors.text};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text, mode, wth, hgh }: { text: string, mode: number, wth: number, hgh: number }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4, marginTop: 'auto', marginBottom: 'auto' }}>\r\n      <Tooltip text={text} show={show} mode={mode}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <InfoIcon style={{ width: wth, height: hgh }} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { LinkExternal, Text, Flex, OpenNewIcon, Button } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport HarvestAction from './HarvestAction'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface ExpandableSectionProps {\r\n  cakePrice?: BigNumber\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  tokenMode: boolean\r\n  account?: string\r\n  stakedBalance?: BigNumber\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  padding: 16px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  cakePrice,\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  tokenMode,\r\n  account,\r\n  bscScanAddress,\r\n  pairinfo,\r\n  addLiquidityUrl\r\n}) => {\r\n\r\n  const { stakedBalance, allowance } = useFarmUser(pid)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const tokenAddress = bscScanAddress.replace('https://bscscan.com/token/', '')\r\n  const TranslateString = useI18n()\r\n  const { canHarvest, earnings } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(tokenAddress, lpLabel, 18, `https://robustswap.fi/images/farms/${lpLabel === 'WBNB' ? 'BNB' : lpLabel}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [lpLabel, tokenAddress])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tokenMode ? <>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n            <StyledLinkExternal href={addLiquidityUrl}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n            <StyledLinkExternal href={bscScanAddress}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n            <StyledLinkExternal href={pairinfo}>\r\n              <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n            </StyledLinkExternal>\r\n          </Block>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" style={{ marginTop: 16 }}>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n            {/* <Text fontSize=\"16px\">{lpLabel.split('-', 1)}-LP</Text> */}\r\n            <Text fontSize=\"16px\">Cake-LP</Text>\r\n          </Block>\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>\r\n        </Flex> </> :\r\n        <>\r\n          <Flex justifyContent=\"center\">\r\n            <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, marginBottom: 16, width: '100%', height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n              <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n            </Button>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}:</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text> {/* {depositFee / 100} */}\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'top' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text=\"How often you can harvest your earned RBS.\" wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block>\r\n          </Flex>\r\n        </>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\n// import useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image, Text } from '@robustswap-libs/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { auto } from '@popperjs/core'\r\n// import { NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  margin-top:auto;\r\n  margin-bottom:auto;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo }) => {\r\n  // const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" style={{ marginBottom: 24 }}>\r\n      <div style={{ width: 40, height: 40 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? 40 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: '100%' }}>\r\n        <Heading>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ width: 170, marginTop: auto, marginBottom: auto }}>\r\n              {lpLabel.replace('LP', '')}\r\n              {lpLabel.indexOf('-') === -1 && <Text style={{ fontSize: 12 }}>Earn RBS</Text>}{/* {lpLabel.replace('LP', '')} */}\r\n            </div>\r\n            {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} />}\r\n          </div>\r\n        </Heading>\r\n        {/* <Flex justifyContent=\"flex-start\">\r\n          <StyledLinkExternal\r\n            href={bscScanAddress}\r\n          >\r\n            {TranslateString(356, 'View Contract')}\r\n          </StyledLinkExternal>\r\n          <StyledLinkExternal\r\n            href={pairinfo}\r\n          >\r\n            {TranslateString(355, 'Pair Info')}\r\n          </StyledLinkExternal>\r\n        </Flex> */}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [99999]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n  max?: number | string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, max }) => {\r\n  return (\r\n    <>\r\n      <StyledInputWrapper style={{ alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 400, fontSize: 12, lineHeight: '14px', textAlign: 'right' }}>\r\n          Balance: {max.toLocaleString()}\r\n        </Text>\r\n        <div style={{ display: \"flex\", width: '100%' }}>\r\n          {!!startAdornment && startAdornment}\r\n          <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n          {!!endAdornment && endAdornment}\r\n        </div>\r\n      </StyledInputWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #151745;\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  width: auto;\r\n  height: 86px;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width:195px !important;\r\n  background: none;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const image = `/images/farms/${symbol === 'WBNB' ? 'BNB' : symbol}.svg`;\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <div>\r\n              <Button variant=\"text\" size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'MAX')}\r\n              </Button>\r\n            </div>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Flex>\r\n                {!(symbol.includes('LP')) && <img src={image} alt={symbol} width={24} height={24} />}\r\n                <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n              </Flex>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n        max={max}\r\n      />\r\n      {depositFeeBP > 0 ? (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '} {symbol}</Text>\r\n        </StyledMaxText>\r\n      ) : (\r\n        <StyledMaxText>\r\n          <Text style={{ textAlign: 'left', width: '30%', color: '#A0B9FB' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n          <Text style={{ textAlign: 'right', width: '70%' }}>{new BigNumber(0).toString()}{' '}{symbol}</Text>\r\n        </StyledMaxText>\r\n      )}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n  margin-bottom:16px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-left: 4px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@robustswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} style={{ width: '100%' }}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, IconButton, Heading, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ width: '100%' }}>\r\n      <div>\r\n        <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawStakedBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${stakedBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useStake from '../../../../hooks/useStake'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  cardMode?: number\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, cardMode = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      {cardMode === 1 && <div>\r\n        <Heading color={account ? rawEarningsBalance === 0 ? 'textDisabled' : 'text' : 'text'}>{account ? displayBalance : '-'}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>}\r\n      <BalanceAndCompound style={{ width: cardMode ? 'auto' : '100%' }}>\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', opacity: '0.4', color: 'white', width: '100%' }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(999, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport { Modal, Text } from '@robustswap-libs/uikit'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { Farm } from '../../../state/types'\r\n\r\ninterface HarvestCountdownModalProps {\r\n  farm: Farm\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst HarvestCountdownModal: React.FC<HarvestCountdownModalProps> = ({\r\n  onDismiss,\r\n  nextHarvestUntil,\r\n  harvestInterval,\r\n  farm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const secondsUntilHarvest = nextHarvestUntil - currentTime\r\n  const timeUntil = getTimePeriods(secondsUntilHarvest > 0 ? secondsUntilHarvest : 0)\r\n\r\n  return (\r\n    <Modal title={TranslateString(10029, 'Harvest In')} onDismiss={onDismiss}>\r\n      <Text bold color=\"primary\" fontSize=\"36px\" style={{ textAlign: 'center' }}>\r\n        {formatTimePeriodCountdown(timeUntil)}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"10px\" style={{ textAlign: 'center' }}>\r\n        {farm.isTokenOnly ? 'Pool' : 'Farm'}: {farm.lpSymbol}\r\n      </Text>\r\n      <Text color=\"textDisabled\" mt=\"5px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10027, 'Harvest Interval')}: {(harvestInterval / 3600).toLocaleString()}{' '}\r\n        {TranslateString(10028, 'Hours')}\r\n      </Text>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HarvestCountdownModal\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\r\nimport { Button, Flex, Heading, Text, LinkExternal, IconButton, AlarmIcon, useModal } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 4px;\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\n\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  tokenMode: boolean\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n  tokenMode,\r\n  addLiquidityUrl\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (tokenBalance.toNumber() === 0 && tokenMode) ? (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'GET LP')}\r\n        </Button>\r\n      </Flex>\r\n    ) : (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove} style={{ width: '100%' }}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" pr=\"3px\" style={{ color: '#A5A5A5' }}>\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          &nbsp;RBS\r\n        </Text>\r\n        {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n          <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n            <TadaAlarmIcon />\r\n          </StyledIconButton>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} cardMode={1} />\r\n      {tokenMode ? <>\r\n        <Flex>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {tokenBalance.toNumber() <= 0 ? TranslateString(453, 'Available LP') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          {tokenBalance.toNumber() <= 0 ?\r\n            <div style={{ textAlign: 'left' }}>\r\n              <Text fontSize=\"16px\">\r\n                {getFullDisplayBalance(tokenBalance)} LP\r\n              </Text>\r\n              <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n            </div> :\r\n            <Heading style={{ marginTop: 15, opacity: 0 }} />\r\n          }\r\n          {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n        </Flex>\r\n      </> :\r\n        <>\r\n          <Flex>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 8 }}>\r\n              {TranslateString(329, 'Staked')} Tokens\r\n            </Text>\r\n          </Flex>\r\n          {!account ? <UnlockButton fullWidth /> : renderApprovalOrStakeButton()}\r\n        </>\r\n      }\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import BigNumber from \"bignumber.js\"\r\n\r\nconst roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice, lpTotalInQuoteToken = new BigNumber(0) }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  // return roundToTwoDp(interestEarned)\r\n  console.log(lpTotalInQuoteToken)\r\n  return roundToTwoDp(interestEarned * (100)) // exception when staking is 0\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Calculated based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.fi/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Skeleton, Text } from '@robustswap-libs/uikit'\r\n// import { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: #1E215C;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 16px 16px 0px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 320px !important;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n  background: #151745;\r\n  margin: 0px -16px;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n  isMobile?: boolean\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue && !new BigNumber(totalValue).isNaN()\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const chainId = 56\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.fi/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  const earnLabel = 'ROBUST'\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    if (farm.isTokenOnly) {\r\n      return new BigNumber(farm.tokenPriceVsQuote)\r\n    }\r\n\r\n    const lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    ethPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n  ])\r\n\r\n  return (\r\n    <FCard>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        depositFee={farm.depositFeeBP}\r\n        primaryToken={earningToken}\r\n        secondToken={stakingToken}\r\n        tokenSymbol={farm.tokenSymbol}\r\n        bscScanAddress={\r\n          farm.isTokenOnly\r\n            ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n        pairinfo={\r\n          farm.isTokenOnly\r\n            ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n        }\r\n      />\r\n      {!removed && (\r\n        <Block>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n          <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n            {farm.apy ? (\r\n              <>\r\n                {farmAPY ? farmAPY : 0}%\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Block>\r\n      )}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n          {lpLabel.indexOf('-') >= 0 ?\r\n            TranslateString(10035, 'Liquidity') + ':' :\r\n            TranslateString(408, 'Total Staked')\r\n          }\r\n        </Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n      </Block>\r\n      {/* {lpLabel.indexOf('-') >= 0 &&  */}\r\n      <Block>\r\n        <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n        <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n      </Block>\r\n      {/* } */}\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        ethereum={ethereum}\r\n        account={account}\r\n        harvestInterval={farm.harvestInterval}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n        cakePrice={cakePrice}\r\n        tokenMode={lpLabel.indexOf('-') >= 0}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n        viewMode={1}\r\n        isMobile={isMobile}\r\n        marginBottom=\"16px\"\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          cakePrice={cakePrice}\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          tokenMode={lpLabel.indexOf('-') >= 0}\r\n          account={account}\r\n          bscScanAddress={\r\n            farm.isTokenOnly\r\n              ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          pairinfo={\r\n            farm.isTokenOnly\r\n              ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  depositFeeBP,\r\n  stakedTokenPriceUSD,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const stakedBalanceUSD = getBalanceNumber(stakedBalance.times(stakedTokenPriceUSD))\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n  const tokenMode = tokenName.includes('-')\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button variant=\"subtle\" onClick={onPresentDeposit} style={{ minWidth: '122px' }}>\r\n        {TranslateString(999, 'STAKE')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      {renderStakingButtons()}\r\n      <div>\r\n        {/* <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'} style={{ marginRight: 20 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5', marginBottom: 5 }}>Staked {tokenName.includes('-') ? 'LP' : 'Tokens'}</Text>\r\n          {displayBalance}\r\n        </Heading> */}\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {!tokenMode ? TranslateString(333, 'Staked Tokens') : TranslateString(999, 'Staked LP')}\r\n          </Text>\r\n          <Text fontSize=\"16px\">{stakedBalance.toString()} {!tokenMode ? tokenName : 'LP'}</Text>\r\n          <Text fontSize=\"12px\">${(stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString()}</Text>\r\n        </div>\r\n        {rawStakedBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${stakedBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n    </Flex >\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\">\r\n      <BalanceAndCompound>\r\n        {/* {pid === 9 ? (\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            marginBottom=\"15px\"\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(compoundRawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n        ) : null} */}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', color: 'white', opacity: \"0.4\" }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  tokenMode: boolean\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }}>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(999, 'ENABLE')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text, IconButton, AlarmIcon, useModal, Heading } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Farm } from 'state/types'\r\nimport useStake from '../../../../hooks/useStake'\r\nimport HarvestCountdownModal from '../HarvestCountdownModal'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest: boolean\r\n  cakePrice?: BigNumber\r\n  stakedBalance?: BigNumber\r\n  nextHarvestUntil: number\r\n  harvestInterval: number\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst tada = keyframes`\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%,\r\n  20% {\r\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%,\r\n  50%,\r\n  70%,\r\n  90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%,\r\n  60%,\r\n  80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`\r\nconst TadaAlarmIcon = styled(AlarmIcon)`\r\n  animation: ${tada} 5s ease-in-out infinite;\r\n  transform: translate3d(0, 0, 0);\r\n`\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  height: 16px;\r\n  margin-left: auto;\r\n\r\n  svg {\r\n    width: 18px;\r\n    fill: ${({ theme }) => theme.colors.warning};\r\n  }\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest, cakePrice, stakedBalance, nextHarvestUntil, harvestInterval, farm }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const earningBalanceUSD = getBalanceNumber(earnings.times(cakePrice))\r\n  const compoundRawEarningsBalance = getBalanceNumber(earnings.minus(earnings.times(0.05).integerValue()))\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  const [onPresentHarvestCountdown] = useModal(\r\n    <HarvestCountdownModal nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />,\r\n  )\r\n  return (\r\n    <Flex mb=\"8px\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n      <div style={{ paddingLeft: 16 }}>\r\n        <Text textTransform=\"uppercase\" fontSize=\"10px\" style={{ color: '#A5A5A5' }}>\r\n          {TranslateString(331, 'Earned')}\r\n        </Text>\r\n        <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {rawEarningsBalance !== 0 && (\r\n          <Text fontSize=\"13px\" mt=\"4px\" color=\"primary\" style={{ textAlign: 'left' }}>\r\n            ~${earningBalanceUSD.toLocaleString()}\r\n          </Text>\r\n        )}\r\n      </div>\r\n      <BalanceAndCompound>\r\n        {pid === 9 ? (\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            marginBottom=\"15px\"\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(compoundRawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n        ) : null}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || !canHarvest || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          style={{ minWidth: '122px', opacity: '0.4', color: 'white' }}\r\n          variant=\"subtle\"\r\n        >\r\n          {TranslateString(562, 'HARVEST')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n      {(stakedBalance.gt(0) || earnings.gt(0)) && nextHarvestUntil > 0 && !canHarvest ? (\r\n        <StyledIconButton onClick={onPresentHarvestCountdown} variant=\"text\" size=\"sm\">\r\n          <TadaAlarmIcon />\r\n        </StyledIconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport MobileHarvestAction from './MobileHarvestAction'\r\n\r\nconst Action = styled.div`\r\n  align-items: center;\r\n  flex-grow: 0.5;\r\n  text-align: right;\r\n`\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  harvestInterval,\r\n  stakedTokenPriceUSD,\r\n  cakePrice,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, nextHarvestUntil, canHarvest, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if (isTokenOnly) {\r\n      return getContract(ethereum as provider, tokenAddress)\r\n    }\r\n    return getContract(ethereum as provider, lpAddress)\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        depositFeeBP={depositFeeBP}\r\n        stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n      />\r\n    ) : (\r\n      <Flex style={{ alignItems: 'center' }} justifyContent=\"space-between\">\r\n        <div style={{ textAlign: 'left', paddingLeft: 16 }}>\r\n          <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n            {TranslateString(333, 'Staked Tokens')}\r\n          </Text>\r\n          <Text fontSize=\"14px\">{isApproved ? stakedBalance : 0} RBS</Text>\r\n          <Text fontSize=\"12px\">${isApproved ? (stakedTokenPriceUSD.toNumber() * stakedBalance.toNumber()).toLocaleString() : 0}</Text>\r\n        </div>\r\n        <Button variant=\"subtle\" disabled={requestedApproval} onClick={handleApprove}>\r\n          {TranslateString(495, 'Enable Farm')}\r\n        </Button>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      {!account ? <UnlockButton /> : renderApprovalOrStakeButton()}\r\n      <MobileHarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} cakePrice={cakePrice} stakedBalance={stakedBalance} nextHarvestUntil={nextHarvestUntil} harvestInterval={harvestInterval} farm={farm} />\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React, { useCallback } from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { LinkExternal, OpenNewIcon, Text, Flex, Button } from '@robustswap-libs/uikit'\r\nimport useStyles from \"assets/styles\"\r\nimport { registerToken } from 'utils/wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport MobileCardActionsContainer from './MobileCardActionsContainer'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  depositFee?: number\r\n  harvestInterval?: number\r\n  pid: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n  harvestInterval?: number\r\n  stakedTokenPriceUSD?: BigNumber\r\n  cakePrice?: BigNumber\r\n  isMobile: boolean\r\n  removed: boolean\r\n  totalValueFormated?: string\r\n  tokenMode: boolean\r\n}\r\n\r\nconst Wrapper = styled.div<{ tokenMode: boolean }>`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  padding: 24px 0px 0px 0px;\r\n  padding-bottom: ${({ tokenMode }) => tokenMode ? \"24px\" : \"0px\"};\r\n  text-align: left;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: #3D65CA;\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\nconst Block = styled.div`\r\n  text-align: left;\r\n`\r\n\r\nconst StyledBlock = styled.div`\r\n  background-color: #293D71;\r\n  padding-bottom: 8px;\r\n  margin: 12px 0px;\r\n  padding: 8px 24px;\r\n  background-image: url('/images/farm-step.svg');\r\n  background-position: 16px, center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  svg {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps & FarmCardActionsProps> = ({\r\n  lpLabel,\r\n  depositFee,\r\n  harvestInterval,\r\n  pid,\r\n  stakedTokenPriceUSD,\r\n  farm,\r\n  ethereum,\r\n  account,\r\n  cakePrice,\r\n  isMobile,\r\n  removed,\r\n  totalValueFormated,\r\n  tokenMode\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { tokenBalance } = useFarmUser(pid)\r\n  const classes = useStyles.chart();\r\n  const chainId = 56\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(farm.tokenAddresses[chainId], farm.tokenSymbol, 18, `https://robustswap.fi/images/farms/${farm.tokenSymbol === 'WBNB' ? 'BNB' : farm.tokenSymbol}.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [farm])\r\n\r\n  const bscScanAddress = farm.isTokenOnly\r\n    ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const pairinfo = farm.isTokenOnly\r\n    ? `https://pancakeswap.finance/info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n    : `https://pancakeswap.finance/info/pool/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const addLiquidityUrl = farm.isTokenOnly\r\n    ? '' : `https://exchange.robustswap.fi/#/add/${farm.quoteTokenAdresses[chainId]}/${farm.tokenAddresses[chainId]}`\r\n\r\n  return (\r\n    <Wrapper tokenMode={tokenMode}>\r\n      {isMobile ?\r\n        <>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold', color: '#FF6B2A' }}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of PANTHER rewards each farm gets. For example, if a 1x farm was getting 1 PANTHER per block, a 40x farm would be getting 40 PANTHER per block.')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10035, 'Total Liquidity')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{ fontWeight: 'bold' }}>{!removed ? totalValueFormated : 0}</Text>\r\n                <QuestionHelper text={TranslateString(301, 'Total value of fund in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n              </Flex>\r\n            </Block>\r\n          </Flex>\r\n          <StyledBlock>\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              <div style={{ marginLeft: 16 }}>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                <Text fontSize=\"14px\">{getFullDisplayBalance(tokenBalance)} LP</Text>\r\n                <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n              </div>\r\n              <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl}>\r\n                {TranslateString(507, 'GET LP')}\r\n              </Button>\r\n            </Flex>\r\n            <MobileCardActionsContainer\r\n              farm={farm}\r\n              ethereum={ethereum}\r\n              account={account}\r\n              harvestInterval={harvestInterval}\r\n              stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n              cakePrice={cakePrice}\r\n            />\r\n          </StyledBlock>\r\n        </> :\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Flex alignItems=\"center\">\r\n            {!tokenMode && <Button variant=\"subtle\" as=\"a\" href={addLiquidityUrl} style={{ marginRight: 16 }}>\r\n              {TranslateString(507, 'GET LP')}\r\n            </Button>}\r\n            <div>\r\n              {tokenMode ?\r\n                <>\r\n                  <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ width: 89, height: 32, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px', background: 'transparent' }}>\r\n                    <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n                  </Button>\r\n                </> :\r\n                <>\r\n                  <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(453, 'Available LP')}</Text>\r\n                  <Text fontSize=\"16px\">{getFullDisplayBalance(tokenBalance)} LP</Text>\r\n                  <Text fontSize=\"12px\">${Number(getFullDisplayBalance(tokenBalance)) * stakedTokenPriceUSD.toNumber()}</Text>\r\n                </>\r\n              }\r\n            </div>\r\n          </Flex>\r\n          {tokenMode && <>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Token')}:</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\">Info</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n          </>}\r\n          {tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n            <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n              {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n              <>\r\n                <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n              </>\r\n            </Text>\r\n          </Block>}\r\n          {!tokenMode && <ArrowForwardIosIcon style={{ color: '#3D65CA' }} />}\r\n          <CardActionsContainer\r\n            farm={farm}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            harvestInterval={harvestInterval}\r\n            stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n            cakePrice={cakePrice}\r\n            tokenMode={tokenMode}\r\n          />\r\n        </Flex>\r\n      }\r\n      {!isMobile && !tokenMode && <Divider style={{ marginTop: 16, marginBottom: 16 }} />}\r\n      {isMobile ?\r\n        <Flex justifyContent=\"space-between\" style={{ padding: '0px 24px' }}>\r\n          {!tokenMode && <><Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n            <Text fontSize=\"12px\">{depositFee / 100}%</Text>\r\n          </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"12px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"12px\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex> :\r\n        <Flex>\r\n          {!tokenMode && <>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'RBS-BNB LP')}</Text>\r\n              <StyledLinkExternal href={addLiquidityUrl}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">Get LP</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Contract')}</Text>\r\n              <StyledLinkExternal href={bscScanAddress}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(999, 'Pair Info')}</Text>\r\n              <StyledLinkExternal href={pairinfo}>\r\n                <Text fontSize=\"16px\" color=\"#A0B9FB\">View</Text>\r\n              </StyledLinkExternal>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginBottom: 24 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10001, 'Deposit Fee')}</Text>\r\n              <Text fontSize=\"16px\">{depositFee / 100}%</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10032, 'LP Type')}</Text>\r\n              {/* <Text fontSize=\"16px\">{lpLabel}</Text> */}\r\n              <Text fontSize=\"16px\">Cake-LP</Text>\r\n            </Block>\r\n            <Block style={{ paddingRight: 56, marginTop: -1 }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(10027, 'Harvest Interval')}:</Text>\r\n              <Text fontSize=\"16px\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                {(harvestInterval / 3600).toLocaleString()} {TranslateString(10028, 'Hours')}\r\n                <>\r\n                  <QuestionHelper text={TranslateString(295, \"How often you can harvest your earned RBS.\")} wth={16} hgh={16} mode={0} />\r\n                </>\r\n              </Text>\r\n            </Block></>}\r\n        </Flex>\r\n      }\r\n    </Wrapper >\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Image } from '@robustswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  depositFee?: number\r\n  primaryToken?: string\r\n  secondToken?: string\r\n  tokenSymbol?: string\r\n  bscScanAddress?: string\r\n  pairinfo?: string\r\n  isMobile: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex) <{ isMobile: boolean }>`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n  align-items: center;\r\n  flex-grow: 0.2;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 24px' : '0px 0px'}\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, depositFee, primaryToken, secondToken, tokenSymbol, bscScanAddress, pairinfo, isMobile }) => {\r\n  const TranslateString = useI18n()\r\n  const statusImage = `/images/farms/no-fees.svg`\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"flex-start\" isMobile={isMobile}>\r\n      {depositFee === 0 && <Image src={statusImage} alt={tokenSymbol} width={64} height={30} marginRight={16} />}\r\n      <div style={{ width: 40, height: isMobile ? 40 : 44 }}>\r\n        {secondToken !== '' && <Image\r\n          src={`/images/farms/${secondToken === 'WBNB' ? 'BNB' : secondToken}.svg`}\r\n          alt={secondToken}\r\n          width={24}\r\n          height={24} />}\r\n        <Image\r\n          src={`/images/farms/${primaryToken === 'WBNB' ? 'BNB' : primaryToken}.svg`}\r\n          alt={primaryToken}\r\n          width={secondToken === '' ? 40 : 32}\r\n          height={secondToken === '' ? isMobile ? 40 : 44 : 32}\r\n          marginLeft={secondToken ? \"8px\" : \"0px\"}\r\n          marginTop={secondToken ? \"-12px\" : \"0px\"} />\r\n      </div>\r\n      <div style={{ textAlign: 'left', paddingLeft: 8, width: 165, marginTop: 10 }}>\r\n        <Heading mb=\"8px\" style={{ fontWeight: 800 }}>{lpLabel.replace('LP', '')}</Heading>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal, Text, Link, Flex } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  margin-bottom: 28px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  color: #F0EFEF;\r\n`\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice, lpTotalInQuoteToken })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice, lpTotalInQuoteToken })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Description fontSize=\"16px\">\r\n        {TranslateString(\r\n          319,\r\n          'Calculated based on current rates. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Grid>\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(323, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(324, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"14px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(325, 'RBS per')} $1000\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>1d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>7d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>30d</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ textAlign: 'left' }}>\r\n          <Text fontSize=\"20px\" bold>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem style={{ paddingRight: 32 }}>\r\n          <Text fontSize=\"20px\" bold>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"20px\" bold>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Button variant=\"subtle\" style={{ width: '100%' }}>\r\n          <StyledLink external href={`https://exchange.robustswap.fi/#/add/${liquidityUrlPathParts}`} style={{ textDecoration: 'none' }}>\r\n            {TranslateString(505, 'Get')} {lpLabel}\r\n          </StyledLink>\r\n        </Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@robustswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  lpTotalInQuoteToken?: BigNumber\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  lpTotalInQuoteToken,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      lpTotalInQuoteToken={lpTotalInQuoteToken}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Text, Skeleton, Flex } from '@robustswap-libs/uikit'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport ApyButton from './ApyButton'\r\nimport QuestionHelper from '../../../../components/QuestionHelper'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 8px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FList = styled.div<{ isMobile: boolean }>`\r\n  align-self: baseline;\r\n  background: #151745;\r\n  border-radius: 8px;\r\n  border: 1px solid #3D65CA;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: ${({ isMobile }) => isMobile ? '0px' : '0px 24px'};\r\n  position: relative;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  background-color: #151745;\r\n  margin: 0px -24px 0px -24px;\r\n  border-radius: 0px 0px 8px 8px;\r\n  padding: 0px 24px 0px 24px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Block = styled.div`\r\n    text-align: left;\r\n    padding-bottom: 4px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string,\r\n  isMobile: boolean,\r\n  tokenMode: boolean\r\n}\r\n\r\nconst FarmList: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account, isMobile, tokenMode }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n  const { earnings } = useFarmUser(farm.pid)\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  let earningToken = farm.tokenSymbol\r\n  let stakingToken = \"\"\r\n\r\n  if (!farm.isTokenOnly) stakingToken = farm.quoteTokenSymbol\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated =\r\n    totalValue && !new BigNumber(totalValue).isNaN()\r\n      ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : '-'\r\n\r\n  const exception = (farm.lpTotalInQuoteToken?.toString() === '0')\r\n\r\n  const lpLabel = farm.isTokenOnly ? farm.lpSymbol : `${farm.lpSymbol}`\r\n  // const earnLabel = 'ROBUST'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(exception ? 10000 : 100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n\r\n  // stakedTokenPrice\r\n  const stakedTokenPriceUSD: BigNumber = useMemo(() => {\r\n    if (farm.isTokenOnly) {\r\n      return new BigNumber(farm.tokenPriceVsQuote)\r\n    }\r\n\r\n    const lpTokenPriceVsQuote = new BigNumber(farm.quoteTokenBlanceLP).times(2).div(farm.lpTotalSupply)\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(lpTokenPriceVsQuote)\r\n    }\r\n    return lpTokenPriceVsQuote\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    ethPrice,\r\n    farm.tokenPriceVsQuote,\r\n    farm.quoteTokenSymbol,\r\n    farm.quoteTokenBlanceLP,\r\n    farm.lpTotalSupply,\r\n    farm.isTokenOnly,\r\n  ])\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n  return (\r\n    <FList isMobile={isMobile} style={{ backgroundColor: '#1E215C', width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      {(farm.tokenSymbol === 'RBS' || farm.tokenSymbol === 'RBT') && <StyledCardAccent />}\r\n      {isMobile ?\r\n        <>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ padding: '0px 24px' }}>\r\n            {!removed && (\r\n              <Block>\r\n                <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n                <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#FF6B2A' }}>\r\n                  {farm.apy ? (\r\n                    <>\r\n                      {farmAPY}%\r\n                      <ApyButton\r\n                        lpLabel={lpLabel}\r\n                        quoteTokenAdresses={quoteTokenAdresses}\r\n                        quoteTokenSymbol={quoteTokenSymbol}\r\n                        tokenAddresses={tokenAddresses}\r\n                        cakePrice={cakePrice}\r\n                        apy={farm.apy}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <Skeleton height={24} width={80} />\r\n                  )}\r\n                </Text>\r\n              </Block>\r\n            )}\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'ROBUST Earned')}:</Text>\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n            </Block>\r\n            <ExpandableSectionButton\r\n              onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n              expanded={showExpandableSection}\r\n              viewMode={0}\r\n              isMobile={isMobile}\r\n            />\r\n          </Flex>\r\n          {/* <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{color: '#A5A5A5'}}>{TranslateString(457, 'Multiplier')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{fontWeight: 'bold', color: '#FF6B2A'}}>{farm.multiplier}</Text>\r\n                <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of ROBUST rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} />\r\n              </Flex>\r\n            </Block>\r\n            <Block>\r\n              <Text fontSize=\"12px\" style={{color: '#A5A5A5'}}>{TranslateString(10035, 'Total Liquidity')}:</Text>\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"20px\" style={{fontWeight: 'bold'}}>{!removed ? totalValueFormated : 0}</Text>\r\n                <QuestionHelper text={TranslateString(301, 'Total value of fund in this farm’s liquidity pool')} />\r\n              </Flex>\r\n            </Block>\r\n          </Flex> */}\r\n        </> :\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ height: 88 }}>\r\n          <CardHeading\r\n            lpLabel={lpLabel}\r\n            depositFee={farm.depositFeeBP}\r\n            primaryToken={earningToken}\r\n            secondToken={stakingToken}\r\n            tokenSymbol={farm.tokenSymbol}\r\n            bscScanAddress={\r\n              farm.isTokenOnly\r\n                ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            pairinfo={\r\n              farm.isTokenOnly\r\n                ? `https://robustswap.info/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n                : `https://robustswap.info/pair/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n            }\r\n            isMobile={isMobile}\r\n          />\r\n          {!removed && (\r\n            <Block style={{ marginBottom: 'auto', marginTop: 'auto' }}>\r\n              <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(352, 'APR')}:</Text>\r\n              <Text fontSize=\"20px\" bold style={{ display: 'flex', alignItems: 'center', color: '#E354FA', fontWeight: 800 }}>\r\n                {farm.apy ? (\r\n                  <>\r\n                    {farmAPY}%\r\n                    <ApyButton\r\n                      lpLabel={lpLabel}\r\n                      quoteTokenAdresses={quoteTokenAdresses}\r\n                      lpTotalInQuoteToken={farm.lpTotalInQuoteToken}\r\n                      quoteTokenSymbol={quoteTokenSymbol}\r\n                      tokenAddresses={tokenAddresses}\r\n                      cakePrice={cakePrice}\r\n                      apy={farm.apy}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Skeleton height={24} width={80} />\r\n                )}\r\n              </Text>\r\n            </Block>\r\n          )}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>\r\n              {tokenMode ? TranslateString(408, 'Total Staked') :\r\n                TranslateString(10035, 'Total Liquidity')}:\r\n            </Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800 }}>{!removed ? totalValueFormated : 0}</Text>\r\n              <QuestionHelper text={TranslateString(301, 'Total value of fund in this farm’s liquidity pool')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>\r\n          {!tokenMode && <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(457, 'Multiplier')}:</Text>\r\n            <Flex alignItems=\"center\">\r\n              <Text fontSize=\"20px\" style={{ fontWeight: 800, color: '#E354FA' }}>{farm.multiplier}</Text>\r\n              <QuestionHelper text={TranslateString(299, 'The multiplier represents the amount of RBS rewards each farm gets. For example, if a 1x farm was getting 1 RBS per block, a 40x farm would be getting 40 RBS per block.')} wth={16} hgh={16} mode={0} />\r\n            </Flex>\r\n          </Block>}\r\n          <Block>\r\n            <Text fontSize=\"12px\" style={{ color: '#A5A5A5' }}>{TranslateString(303, 'Earned')}:</Text>\r\n            <Text fontSize=\"20px\" style={{ fontWeight: 'bold', textAlign: 'center' }}>{displayBalance !== '0' ? displayBalance : '-'}</Text>\r\n          </Block>\r\n          <ExpandableSectionButton\r\n            onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n            expanded={showExpandableSection}\r\n            viewMode={0}\r\n            isMobile={isMobile}\r\n          />\r\n        </Flex>\r\n      }\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          lpLabel={lpLabel}\r\n          depositFee={farm.depositFeeBP}\r\n          harvestInterval={farm.harvestInterval}\r\n          pid={farm.pid}\r\n          stakedTokenPriceUSD={stakedTokenPriceUSD}\r\n          farm={farm}\r\n          ethereum={ethereum}\r\n          account={account}\r\n          cakePrice={cakePrice}\r\n          isMobile={isMobile}\r\n          removed={removed}\r\n          totalValueFormated={totalValueFormated}\r\n          tokenMode={tokenMode}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FList>\r\n  )\r\n}\r\n\r\nexport default FarmList\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle, Button, Input } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { setWith } from 'lodash';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly, viewMode, setViewMode, filter, setFilter, sort, setSort, isMobile }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const [wth, setWth] = useState(window.innerWidth)\r\n  const [min1, setMin1] = useState(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n  const [min2, setMin2] = useState(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n  useEffect(() => {\r\n    if (min1 !== document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n      setMin1(document.getElementsByClassName(\"sc-lcujXC keHIjv\")[0]?.clientWidth)\r\n    else if (min2 !== document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n      setMin2(document.getElementsByClassName(\"sc-lcujXC dGGJWA\")[0]?.clientWidth)\r\n    else\r\n      setWth(window.innerWidth - (min1 ? min1 : 0) - (min2 ? min2 : 0) - 100)\r\n  }, [min1, min2, wth, isMobile])\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSort(event.target.value as number);\r\n  };\r\n  return (\r\n    <Wrapper isMobile={isMobile} style={{ width: Math.floor(wth / 330) * 330, maxWidth: 980, minWidth: 320 }}>\r\n      <Flex style={{ paddingBottom: isMobile ? '16px' : 0 }}>\r\n        {!isMobile &&\r\n          <>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(false)\r\n              Cookies.set('viewMode', false)\r\n            }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-list.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-list-active.svg\" alt=\"icon list\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n            <StyledButton onClick={() => {\r\n              setViewMode(true)\r\n              Cookies.set('viewMode', true)\r\n            }} style={{ marginRight: 28 }}>\r\n              {viewMode ?\r\n                <img src=\"/images/icon-card-active.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" /> :\r\n                <img src=\"/images/icon-card.svg\" alt=\"icon card\" width=\"32px\" height=\"32px\" />\r\n              }\r\n            </StyledButton>\r\n          </>}\r\n        <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n          <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: 0, width: 67 }}>\r\n            {TranslateString(601, 'Live')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: 0, width: 108 }}>\r\n            {TranslateString(599, 'Finished')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n        <ToggleWrapper>\r\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n          <Text style={{ color: '#7381FC', fontSize: isMobile ? '14px' : '16px' }}> {TranslateString(699, 'Staked only')}</Text>\r\n        </ToggleWrapper>\r\n      </Flex>\r\n      <Flex>\r\n        <Input\r\n          id=\"search\"\r\n          name=\"search-card\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(10011, 'Search')}\r\n          style={{ maxWidth: 170, marginRight: 8 }}\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.currentTarget.value)}\r\n        // isWarning={error}\r\n        // disabled={isloading}\r\n        />\r\n        <Select\r\n          value={sort}\r\n          onChange={handleChangeSelect}\r\n          style={{\r\n            borderRadius: 8,\r\n            background: \"rgba(30, 33, 92, 1)\",\r\n            paddingLeft: \"16px\",\r\n            width: '100%',\r\n            // border: '1px solid rgba(107, 161, 255, 0.2)',\r\n            height: 40,\r\n            color: '#7381FC',\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            backgroundColor: '#1E215C'\r\n          }}\r\n          IconComponent={\r\n            () => (<ArrowDropDownIcon style={{ color: \"#7381FC\" }} />)\r\n          }\r\n          disableUnderline\r\n        >\r\n          <StyledMenuItem value={1}>{TranslateString(395, 'HOT')}</StyledMenuItem>\r\n          <StyledMenuItem value={2}>{TranslateString(457, 'Multiplier')}</StyledMenuItem>\r\n          <StyledMenuItem value={3}>{TranslateString(352, 'APR')}</StyledMenuItem>\r\n          <StyledMenuItem value={4}>{TranslateString(686, 'Liquidity')}</StyledMenuItem>\r\n          <StyledMenuItem value={5}>{TranslateString(331, 'Earned')}</StyledMenuItem>\r\n        </Select>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div<{ isMobile: boolean }>`\r\n  display: ${({ isMobile }) => isMobile ? 'block' : 'flex'};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${({ isMobile }) => isMobile ? '0px 0px' : '0px 8px'};\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 16px;\r\n  ${Text} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 0px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 16px;\r\n  background: transparent;\r\n`\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMenuItem = styled(MenuItem)`\r\n  color: #7381FC;\r\n`","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useMedia } from 'react-use'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport Cookies from 'js-cookie'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmList from './components/FarmList/FarmList'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Hero = styled.div<{ isMobile: boolean, tokenMode: boolean }>`\r\n  background-image: ${({ tokenMode, isMobile }) => !tokenMode ?\r\n    (isMobile ? \"url('/images/farms/farms-header-bg-mobile.png')\" : \"url('/images/farms/farms-header-bg.png')\") :\r\n    (isMobile ? \"url('/images/farms/pools-header-bg-mobile.png')\" : \"url('/images/farms/pools-header-bg.png')\")};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 44px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n  height: ${({ isMobile }) => isMobile ? \"240px\" : \"320px\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 34px;\r\n  line-height: 40px;\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 36px;\r\n`\r\nconst PubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  max-width: ${({ isMobile }) => isMobile ? \"327px\" : \"538px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300; \r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst FarmBanner = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/farms-banner-bg.png')\" : \"url('/images/farms/farms-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 34px 86px 34px 25px;\r\n`\r\nconst FarmBanner1 = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/farms/pools-banner-bg.png')\" : \"url('/images/farms/pools-banner-bg.png')\"};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 320px !important;\r\n  height: 152px;\r\n  margin-top: 30px;\r\n  margin-right: 80px;\r\n  padding: 48px 96px 48px 25px;\r\n`\r\nconst BannerText = styled.text`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n`\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const isMobile = useMedia('(max-width: 768px)')\r\n  const TranslateString = useI18n()\r\n  let farmsLP = useFarms()\r\n  const [filter, setFilter] = useState('')\r\n  const [sort, setSort] = useState(1);\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const ethPrice = usePriceEthBusd()\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n  const { tokenMode } = farmsProps\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n  const [viewMode, setViewMode] = useState(Cookies.get('viewMode') ? Cookies.get('viewMode') === 'true' : !isMobile)\r\n\r\n  const sortByMultiplier = (item1, item2) => {\r\n    return item2.multiplier.replace('X', '') - item1.multiplier.replace('X', '');\r\n  }\r\n  const sortByAPR = (item1, item2) => {\r\n    return item2.apy - item1.apy\r\n  }\r\n  const sortByLiquidity = (item1, item2) => {\r\n    return item2.lpTotalInQuoteToken - item1.lpTotalInQuoteToken\r\n  }\r\n  const sortByEarned = (item1, item2) => {\r\n    return item2.userData.earnings - item1.userData.earnings\r\n  }\r\n  // activeFarms.sort(sortByMultiplier);\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  if (filter !== '') {\r\n    activeFarms = activeFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  if (filter !== '') {\r\n    inactiveFarms = inactiveFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n  let stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  if (filter !== '') {\r\n    stakedOnlyFarms = stakedOnlyFarms.filter((farm) => farm.lpSymbol.indexOf(filter.toUpperCase()) !== -1)\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n          .times(new BigNumber(farm.poolWeight))\r\n          .div(new BigNumber(10).pow(18))\r\n\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        let apy = cakePrice.times(cakeRewardPerYear)\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          totalValue = totalValue.times(ethPrice)\r\n        }\r\n\r\n        if (totalValue.comparedTo(0) > 0) {\r\n          apy = apy.div(totalValue)\r\n        }\r\n        else apy = apy.div(100000)  // exception when staking is 0\r\n        return { ...farm, apy }\r\n      })\r\n\r\n      if (sort === 1) {\r\n        // farmsToDisplayWithAPY.sort()\r\n      } else if (sort === 2) {\r\n        farmsToDisplayWithAPY.sort(sortByMultiplier)\r\n      } else if (sort === 3) {\r\n        farmsToDisplayWithAPY.sort(sortByAPR)\r\n      } else if (sort === 4) {\r\n        farmsToDisplayWithAPY.sort(sortByLiquidity)\r\n      } else if (sort === 5) {\r\n        farmsToDisplayWithAPY.sort(sortByEarned)\r\n      }\r\n      if (viewMode) {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmCard\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={false}\r\n          />\r\n        ))\r\n      } else {\r\n        return farmsToDisplayWithAPY.map((farm) => (\r\n          <FarmList\r\n            key={farm.pid}\r\n            farm={farm}\r\n            removed={removed}\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            ethPrice={ethPrice}\r\n            ethereum={ethereum}\r\n            account={account}\r\n            isMobile={isMobile}\r\n            tokenMode={tokenMode}\r\n          />\r\n        ))\r\n      }\r\n    },\r\n    [bnbPrice, account, cakePrice, ethPrice, ethereum, sort, viewMode, isMobile, tokenMode],\r\n  )\r\n  return (\r\n    <>\r\n      <Hero isMobile={isMobile} tokenMode={tokenMode}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${cakePrice.toFixed(2)}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '15px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ display: 'block' }}>\r\n            <StyledHeading isMobile={isMobile}>\r\n              {tokenMode\r\n                ? TranslateString(676, 'Pools')\r\n                : TranslateString(674, 'Farms')}\r\n            </StyledHeading>\r\n            <PubTitle isMobile={isMobile}>\r\n              {tokenMode ?\r\n                TranslateString(730, 'Looking for competitive rewards, low-risk, and no impermanent-loss farming alternative? Stake your RBS and other tokens below to earn more RBS.') :\r\n                TranslateString(729, 'ROBUSTSWAP Farms offer multiple farming opportunities and high rewards to you. Get rewarded by staking your LP tokens.')\r\n              }\r\n            </PubTitle>\r\n          </div>\r\n          {!isMobile && <div>\r\n            {tokenMode ?\r\n              <>\r\n                <FarmBanner1 isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(737, 'High APR,')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(738, 'low risk earning.')}</BannerText>\r\n                </FarmBanner1>\r\n              </>\r\n              :\r\n              <>\r\n                <FarmBanner isMobile={isMobile}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <BannerText>{TranslateString(734, 'Enjoy')}</BannerText>&nbsp;\r\n                    <BannerText style={{ color: '#D6EE47' }}>{TranslateString(735, 'FREE')}</BannerText>\r\n                  </div>\r\n                  <BannerText>{TranslateString(736, 'deposit with our featured farms.')}</BannerText>\r\n                </FarmBanner>\r\n              </>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </Hero>\r\n      <Page>\r\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} viewMode={viewMode} setViewMode={setViewMode} filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} isMobile={isMobile} />\r\n        <div>\r\n          <FlexLayout isMobile={isMobile}>\r\n            <Route exact path={`${path}`}>\r\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n            </Route>\r\n            <Route exact path={`${path}/history`}>\r\n              {farmsList(inactiveFarms, true)}\r\n            </Route>\r\n          </FlexLayout>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}