{"version":3,"sources":["utils/wallet.ts","hooks/useAllEarnings.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","utils/formatTimePeriod.ts","views/Home/components/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/FarmJoinCard.tsx","views/Home/components/ChartComp.tsx","views/Home/components/CakeStats.tsx","views/Home/components/DexStatsCard.tsx","hooks/api.ts","views/Home/components/SupplyStatsCard.tsx","views/Home/components/LimitStatsCard.tsx","views/Home/components/ActivitiesCard.tsx","views/Home/components/TwitterCard.tsx","views/Home/components/FollowStatsCard.tsx","views/Home/Home.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","hooks/useWeb3.ts","hooks/useContract.ts","components/UnlockButton.tsx","hooks/useTokenBalance.ts","utils/erc20.ts","assets/styles/_account.ts","assets/styles/index.ts","assets/styles/_base.ts","assets/styles/_chart.ts","config/constants/index.ts","utils/callHelpers.ts","hooks/useHarvest.ts","config/index.ts","hooks/useFarmsWithBalance.ts"],"names":["registerToken","tokenAddress","tokenSymbol","tokenDecimals","tokenImage","a","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","tokenAdded","useAllEarnings","useState","balances","setBalance","account","useWallet","fastRefresh","useRefresh","useEffect","fetchAllBalances","calls","farmsConfig","map","farm","getMasterChefAddress","name","pid","multicall","masterChefABI","res","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","zeroPad","number","numberStr","toString","formatTimePeriodCountdown","periods","CardValue","value","fontSize","prefix","weight","suffix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","fontWeight","toLocaleString","minimumFractionDigits","maximumFractionDigits","CakeHarvestBalance","earningsSum","TranslateString","useI18n","lineHeight","CakeWalletBalance","rbsBalance","CardBusdValue","props","StyledFarmStakingCard","styled","Card","Block","div","Label","Actions","FarmedStakingCard","pendingTx","setPendingTx","farmsWithBalance","useFarmsWithBalance","getBalanceNumber","useTokenBalance","getRbsAddress","rbsPrice","usePriceRbsBusd","toNumber","allEarnings","isMobile","useMedia","reduce","accum","earning","BigNumber","pow","balancesWithValue","filter","balanceType","balance","currentTime","farmsCanHarvest","nextHarvestUntil","closetHarvestTime","time","harvestButtonText","length","secondsUntilHarvest","timeUntil","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","width","padding","display","marginTop","flexDirection","variant","id","disabled","onClick","fullWidth","background","opacity","UnlockButton","StyledLotteryCard","maxWidth","as","href","FarmJoinCard","Grid","container","spacing","marginBottom","item","sm","xs","FarmStakingCard","LotteryCard","Chart","Row","am4core","am4themes_kelly","am4themes_animated","ChartComp","useTotalSupply","rbtPrice","usePriceRbtBusd","classes","useStyles","chart","priceChangePercent","setPriceChangePercent","low24","setLow24","high24","setHigh24","marketCap","setMarketCap","activeStatus","setActiveStatus","volume","price","chartdata","setChartData","useMediaQuery","isPad","React","selection","setSelectValue","axios","get","then","response","console","log","data","price_change_percentage_24h","low_24h","high_24h","market_cap","e","getChartData","prevState","total_volumes","prices","changeStatus","newStatus","status","cb","url","am4charts","chart1","count","chartData","i","newDate","date","Number","toFixed","push","generateChartData","gradient","addColor","rotation","dateAxis","xAxes","baseInterval","tooltipDateFormat","renderer","grid","template","labels","tooltip","dateAxis1","valueAxis","yAxes","baseGrid","valueAxis1","series","dataFields","dateX","valueY","getFillFromObject","strokeWidth","label","fill","tooltipText","fillOpacity","stroke","series1","cursor","lineY","keepSelection","Box","className","chartHeader","paddingLeft","alignItems","src","alt","height","justifyContent","fontFamily","marginLeft","paddingRight","paddingBottom","Button","deactiveStatus","paddingTop","margin","Select","onChange","event","target","borderRadius","border","IconComponent","disableUnderline","MenuItem","mobileMenuItem","borderTop","borderRight","borderBottom","primaryStep","ceil","StyledCakeStats","CakeStats","StyledDexStatsCard","Header","ValueTitle","Text","DexStatsCard","totalLiquidityUSD","setTotalLiquidityUsd","farm1","useFarmFromPid","bnbReserve","useGetReserves","lpAddresses","bnbPrice","usePriceBnbBusd","isNaN","rbs1","times","farm2","rbs2","plus","totalValue","useTotalValue","setData","fetchData","fetch","json","responseData","error","useExchangeStats","ZERO","volumeUSD","volume_USD","registerNativeToken","metamaskButton","marginRight","StyledSupplyStatsCard","SupplyStatsCard","maximumSupply","useMaximumSupply","mintedSupply","useMintedSupply","mintedBurned","useMintedBurned","totalSupply","burnedBalance","useBurnedBalance","totalLockedIncludeMasterChef","useMasterChefBalance","useTotalLockedUpRewards","taxTotal","useTaxTotal","taxValue","rbsPerBlock","useRbsPerBlock","circSupply","minus","cakeSupply","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","sellTax","useSellTax","buyTax","useBuyTax","transferTax","useTransferTaxRate","limitAmount","useMaxTransferLimitAmount","StyledActivitiesCard","CalculateApr","ethPrice","usdcPrice","usdtPrice","cakeRewardPerBlock","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","apy","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","ETH","USDC","USDT","exception","comparedTo","ActivitiesCard","farms","useFarms","usePriceEthBusd","usePriceUsdcBusd","usePriceUsdtBusd","rbsBusd","setRbsBusd","rbtBnb","setRbtBnb","rbs","setRbs","rbt","setRbt","val","to","StyledTwitterCard","TwitterCard","maxHeight","dataSource","sourceType","screenName","chrome","theme","borderColor","StyledLimitStatsCard","LabelTitle","LabelSubTitle","LimitStatsCard","Hero","StyledHeading","Heading","SubTitle","LogTitle","LogPrice","Home","useGetDocumentTitlePrice","setHeight","useReferralCode","leftTab","document","getElementsByClassName","stakingCard","joinCard","clientHeight","Page","flexGrow","FollowStatsCard","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useContext","TranslationsContext","displayBalance","dividedBy","getFullDisplayBalance","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","refEth","web3","setweb3","useContract","abi","contractOptions","eth","Contract","contract","setContract","useMasterchef","masterChef","useSousChef","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","useReferral","referral","getReferralAddress","connect","reset","onPresentConnectModal","useWalletModal","self","title","slowRefresh","setTotalSupply","cakeContract","getContract","cakeABI","methods","call","supply","fetchTotalSupply","fetchBalance","balanceOf","bal","maxTransferLimitAmount","setMaxTransferLimitAmount","amount","fetchMaxTransferLimitAmount","setMaximumSupply","MAXIMUM_SUPPLY","maxSupply","fetchMaximumSupply","setMintedSupply","mintSupply","fetchMintedSupply","setMintedBurned","mintBurned","fetchMintedBurned","setSellTax","transferTaxRateSell","stax","fetchSellTax","setBuyTax","transferTaxRateBuy","btax","fetchbuyTax","setTaxTotal","mintedTaxed","tax","fetchTaxTotal","transferTaxRate","setTransferTaxRate","fetchTransferTaxRate","rbsPBlock","setrbsPBlock","fetchRbsPBlock","lpAddress","reserves","setReserves","pairABI","getReserves","_reserve1","fetchGetReserves","getTokenBalance","provider","erc20","userAddress","makeStyles","createStyles","mainContainer","palette","default","breakpoints","down","cardWrapper","hegiht","paper","textAlign","cardWrapper1","pageTitle","subPageTitle","bgWrapper","bodyWrapper","walletButton","statsValue","switchButton","flex","activeSwitcher","base","root","content","transition","transitions","create","easing","sharp","leavingScreen","contentShift","easeOut","enteringScreen","changePercent","chartTitle","currentChartValue","tabList","minWidth","backgroundColor","secondary","light","select","detailChartTabs","isCommunity","approve","lpContract","masterChefContract","ethers","constants","MaxUint256","send","from","stake","referrer","deposit","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useHarvest","farmPid","dispatch","useDispatch","txHash","fetchFarmUserDataAsync","farmPids","harvestPromises","Promise","all","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL","totalLockedUpRewards","setTotalLockedUpRewards","locked","fetchTotalLockedUpRewards","farmsWithBalances","setFarmsWithBalances","fetchBalances","callsBalance","callsHarvest","rawResultsBalance","rawResultsHarvest","results","index"],"mappings":"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","file":"static/js/11.1aa7ae64.chunk.js","sourcesContent":["// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([])\r\n  // const { account }: { account: string } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const res = await multicall(masterChefABI, calls)\r\n\r\n      setBalance(res)\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllEarnings\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from './getTimePeriods'\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '14h 3m 4s'\r\n */\r\nconst formatTimePeriod = (periods: ReturnType<typeof getTimePeriods>, excludePeriods = []) => {\r\n  const textArr = []\r\n\r\n  Object.keys(periods).forEach((period) => {\r\n    if (periods[period] > 0 && !excludePeriods.includes(period)) {\r\n      textArr.push(`${periods[period]}${period.substr(0, 1)}`)\r\n    }\r\n  })\r\n\r\n  if (textArr.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return textArr.join(' ')\r\n}\r\n\r\nexport const zeroPad = (number: number) => {\r\n  let numberStr = number.toString()\r\n\r\n  if (number === 0) {\r\n    numberStr = '00'\r\n  } else if (number < 10) {\r\n    numberStr = `0${number}`\r\n  }\r\n\r\n  return numberStr\r\n}\r\n\r\n/**\r\n * @param {Object} periods Return value from getTimePeriods\r\n * @return {string} '00:00:00'\r\n */\r\nexport const formatTimePeriodCountdown = (periods: ReturnType<typeof getTimePeriods>) => {\r\n  const hours = periods.hours + periods.days * 24;\r\n  return `${zeroPad(hours)}:${zeroPad(periods.minutes)}:${zeroPad(periods.seconds)}`\r\n}\r\n\r\nexport default formatTimePeriod\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@robustswap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  suffix?: string\r\n  weight?: number\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '20px',\r\n  prefix = '',\r\n  weight = 400,\r\n  suffix = '',\r\n  bold = false,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ fontWeight: weight }} color={color}>\r\n      {prefix}\r\n      {countUp.toLocaleString(undefined, {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      })}\r\n      {suffix}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport { Text } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n// import BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\n// import useAllEarnings from 'hooks/useAllEarnings'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeHarvestBalance = ({ earningsSum }) => {\r\n  const TranslateString = useI18n()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" fontSize=\"18px\" style={{ color: '#767676', lineHeight: '22px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={earningsSum} fontSize=\"34px\" />\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","import React from 'react'\r\nimport { Text } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n// import useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\n// import { getRbsAddress } from 'utils/addressHelpers'\r\n// import { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWalletBalance = ({ rbsBalance }) => {\r\n  const TranslateString = useI18n()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" fontSize=\"18px\" style={{ color: '#767676', lineHeight: '22px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={rbsBalance} fontSize=\"34px\" />\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"12px\" lineHeight=\"14px\" color=\"text\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardBusdValue\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\nimport { usePriceRbsBusd } from '../../../state/hooks'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport { getRbsAddress } from '../../../utils/addressHelpers'\r\nimport useAllEarnings from '../../../hooks/useAllEarnings'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n// import { registerToken } from '../../../utils/wallet'\r\nimport CardBusdValue from './CardBusdValue'\r\nimport { useCurrentTime } from '../../../hooks/useTimer'\r\nimport getTimePeriods from '../../../utils/getTimePeriods'\r\nimport { formatTimePeriodCountdown } from '../../../utils/formatTimePeriod'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-color: #293D71;\r\n  background-image: url('/images/farm-staking-bg.svg'), linear-gradient(90.04deg, #0C0720 0.04%, #291A83 99.97%);;\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\n// const TokenImageWrapper = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   margin-bottom: 16px;\r\n// `\r\n\r\n// const CardImage = styled.img`\r\n//   margin-right: 12px;\r\n// `\r\n\r\nconst Label = styled.div`\r\n  background:linear-gradient(to bottom, #89FFE3, #BEFF74, #BEFF74);\r\n  -webkit-background-clip: text;\r\n\t-webkit-text-fill-color: transparent;\r\n  font-size: 34px;\r\n  font-weight: 600;\r\n  line-height: 40px;\r\n  letter-spacing: 0.5px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const rbsBalance = getBalanceNumber(useTokenBalance(getRbsAddress()))\r\n  const rbsPrice = usePriceRbsBusd().toNumber()\r\n  const allEarnings = useAllEarnings()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  // Get farms can harvest and closet harvest time\r\n  const currentTime = Math.floor(useCurrentTime() / 1000)\r\n  const farmsCanHarvest = balancesWithValue.filter(\r\n    (farm) => farm.nextHarvestUntil <= currentTime && farm.nextHarvestUntil > 0,\r\n  )\r\n\r\n  const closetHarvestTime = balancesWithValue.reduce((time, farm) => {\r\n    return time <= 0 || time >= farm.nextHarvestUntil ? farm.nextHarvestUntil : time\r\n  }, 0)\r\n\r\n  // Harvest button text display logic\r\n  let harvestButtonText = 'HARVEST ALL'\r\n  if (balancesWithValue.length > 0) {\r\n    if (farmsCanHarvest.length === balancesWithValue.length) {\r\n      harvestButtonText = `HARVEST ALL (${balancesWithValue.length})`\r\n    } else if (farmsCanHarvest.length > 0 && farmsCanHarvest.length < balancesWithValue.length) {\r\n      harvestButtonText = `HARVEST ALL (${farmsCanHarvest.length} of ${balancesWithValue.length})`\r\n    } else if (farmsCanHarvest.length <= 0 && balancesWithValue.length > 0) {\r\n      const secondsUntilHarvest = closetHarvestTime - currentTime\r\n      const timeUntil = getTimePeriods(secondsUntilHarvest)\r\n      harvestButtonText = `HARVEST IN ${formatTimePeriodCountdown(timeUntil)}`\r\n    }\r\n  }\r\n\r\n  const { onReward } = useAllHarvest(farmsCanHarvest.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard style={{ width: isMobile ? '100%' : '320px' }}>\r\n      <CardBody style={{ padding: 32 }}>\r\n        <Label>{TranslateString(544, 'Farms & Staking')}</Label>\r\n        <Block style={{ display: 'flex', marginTop: 24 }}>\r\n          <div style={{ width: '50%' }}>\r\n            <h5 style={{ fontSize: 12, lineHeight: '14px', color: '#E354FA' }}>RBS to Harvest</h5>\r\n            <CakeHarvestBalance earningsSum={earningsSum} />\r\n            <CardBusdValue value={rbsPrice * earningsSum} decimals={3} />\r\n          </div>\r\n          <div style={{ width: '50%' }}>\r\n            <h5 style={{ fontSize: 12, lineHeight: '14px', color: '#E354FA' }}>RBS in Wallet</h5>\r\n            <CakeWalletBalance rbsBalance={rbsBalance} />\r\n            <CardBusdValue value={rbsPrice * rbsBalance} decimals={3} />\r\n          </div>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <Button\r\n                variant=\"subtle\"\r\n                id=\"harvest-all\"\r\n                disabled={balancesWithValue.length <= 0 || farmsCanHarvest.length <= 0 || pendingTx}\r\n                onClick={harvestAllFarms}\r\n                fullWidth\r\n                style={{\r\n                  background: 'linear-gradient(89.57deg, #89FFE3 0.25%, #BEFF74 53.04%, #FFF174 96.52%)',\r\n                  color: '#5F47EE',\r\n                  opacity: (balancesWithValue.length <= 0 || farmsCanHarvest.length <= 0 || pendingTx) ? 0.4 : 1\r\n                }}\r\n              >\r\n                {pendingTx ? TranslateString(548, 'HARVESTING RBS') : TranslateString(999, harvestButtonText)}\r\n              </Button>\r\n              {/* <StyledLink to='/account'>\r\n                VIEW DETAIL\r\n              </StyledLink> */}\r\n            </div>\r\n          ) : (\r\n            <UnlockButton fullWidth variant=\"primary\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody >\r\n    </StyledFarmStakingCard >\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n// import CakeWinnings from './CakeWinnings'\r\n\r\nconst StyledLotteryCard = styled(Card)`\r\n  background: linear-gradient(90.04deg, #0C0720 0.04%, #291A83 99.97%);\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  border-radius: 16px;\r\n  width: 100%;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: #FCFCFC;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  font-weight: 800;\r\n  letter-spacing: 0.5px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n\r\n  return (\r\n    <StyledLotteryCard style={{ maxWidth: isMobile ? '100%' : '320px' }}>\r\n      <CardBody>\r\n        <Block>\r\n          <Label>{TranslateString(554, 'Join the revolution with the Robust Protocol community.')}</Label>\r\n        </Block>\r\n        <Button style={{ width: '100%', marginTop: isMobile ? 48 : 16 }} as=\"a\" href=\"https://exchange.robustswap.com/#/swap?outputCurrency=0x95336aC5f7E840e7716781313e1607F7C9D6BE25\">BUY RBS</Button>\r\n        <Button style={{ width: '100%', marginTop: 16 }} as=\"a\" href=\"https://exchange.robustswap.com/#/swap?outputCurrency=0x891e4554227385c5c740f9b483e935e3cbc29f01\">BUY RBT</Button>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FarmStakingCard from './FarmStakingCard'\r\nimport LotteryCard from './LotteryCard'\r\n// import CakeWinnings from './CakeWinnings'\r\n\r\nconst FarmJoinCard = () => {\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ marginBottom: 24 }}>\r\n      <Grid item sm={6} xs={12}>\r\n        <FarmStakingCard />\r\n      </Grid>\r\n      <Grid item sm={6} xs={12}>\r\n        <LotteryCard />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FarmJoinCard\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text, Progress } from '@robustswap-libs/uikit'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_kelly from \"@amcharts/amcharts4/themes/kelly\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from 'axios'\r\nimport { useTotalSupply } from 'hooks/useTokenBalance'\r\nimport useStyles from \"../../../assets/styles\";\r\nimport { usePriceRbsBusd, usePriceRbtBusd } from '../../../state/hooks'\r\n\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\n\r\n/* Chart code */\r\n// Themes begin\r\n\r\nconst Chart = styled.div`\r\n    margin: -14.5px -15px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n`\r\n\r\nam4core.useTheme(am4themes_kelly);\r\nam4core.useTheme(am4themes_animated);\r\n\r\ninterface ChartProps {\r\n    volume: [],\r\n    price: []\r\n}\r\n\r\nconst ChartComp = () => {\r\n    const totalSupply = useTotalSupply()\r\n    const rbtPrice = usePriceRbtBusd()\r\n    const classes = useStyles.chart();\r\n    // const TranslateString = useI18n()\r\n    const [priceChangePercent, setPriceChangePercent] = useState(0);\r\n    const [low24, setLow24] = useState(0)\r\n    const [high24, setHigh24] = useState(0)\r\n    const [marketCap, setMarketCap] = useState(0)\r\n    const [activeStatus, setActiveStatus] = useState<number>(1);\r\n    const [chartdata, setChartData] = useState<ChartProps>({\r\n        volume: [],\r\n        price: []\r\n    });\r\n    const isMobile = useMediaQuery('(max-width: 970px)')\r\n    const isPad = useMediaQuery('(max-width: 720px)')\r\n    const [selection, setSelectValue] = React.useState<number>(1);\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setSelectValue(event.target.value as number)\r\n        changeStatus(event.target.value as number)\r\n    };\r\n    const { countUp, update } = useCountUp({\r\n        start: 0,\r\n        end: marketCap,\r\n        duration: 1,\r\n        separator: ','\r\n    })\r\n\r\n    const updateValue = useRef(update)\r\n\r\n    useEffect(() => {\r\n        updateValue.current(marketCap)\r\n    }, [marketCap, updateValue])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=robust-token&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n                .then(response => {\r\n                    console.log(\"coingecko:\", response)\r\n                    setPriceChangePercent(response.data[0].price_change_percentage_24h)\r\n                    setLow24(response.data[0].low_24h)\r\n                    setHigh24(response.data[0].high_24h)\r\n                    setMarketCap(response.data[0].market_cap)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`)\r\n        }\r\n        getChartData(activeStatus, (data: any) => {\r\n            setChartData(prevState => ({\r\n                ...prevState,\r\n                'volume': data.total_volumes,\r\n                'price': data.prices\r\n            }));\r\n        });\r\n    }, [activeStatus])\r\n\r\n    const changeStatus = async (newStatus: number) => {\r\n        setActiveStatus(newStatus);\r\n\r\n        getChartData(newStatus, (data: any) => {\r\n            setChartData(prevState => ({\r\n                ...prevState,\r\n                'price': data.prices,\r\n                'volume': data.total_volumes\r\n            }));\r\n        });\r\n    }\r\n\r\n    function getChartData(status: any, cb: any) {\r\n        let duration = '1';\r\n\r\n        if (status === 1) {\r\n            duration = '7'\r\n        } else if (status === 2) {\r\n            duration = '30'\r\n        } else {\r\n            duration = 'max'\r\n        }\r\n        const url = `https://api.coingecko.com/api/v3/coins/robust-token/market_chart?vs_currency=usd&days=${duration}`\r\n\r\n        try {\r\n            axios.get(url)\r\n                .then(response => {\r\n                    cb(response.data)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`)\r\n        }\r\n    }\r\n\r\n    function generateChartData(data: any) {\r\n        let count = data['price'].length;\r\n        let chartData = [];\r\n        // current date\r\n        var item = {\r\n\r\n        }\r\n        for (var i = 0; i < count; i++) {\r\n            if (data['price'][i]) {\r\n                let newDate = new Date(data['price'][i][0]);\r\n                let volume = 0;\r\n                let price = 0;\r\n\r\n                volume = data['volume'][i][1]\r\n                price = data['price'][i][1]\r\n\r\n                item = {\r\n                    date: newDate,\r\n                    price: Number(price.toFixed(2)),\r\n                    volume: Number(volume.toFixed(2))\r\n                }\r\n                chartData.push({\r\n                    date: newDate,\r\n                    price: Number(price.toFixed(2)),\r\n                    volume: Number(volume.toFixed(2))\r\n                });\r\n            } else {\r\n                chartData.push(item);\r\n            }\r\n        }\r\n        return chartData;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chartdata && chartdata['price'].length) {\r\n            let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n            let chart1 = am4core.create(\"chartdiv1\", am4charts.XYChart);\r\n\r\n            chart.data = generateChartData(chartdata);\r\n            chart1.data = chart.data;\r\n            let gradient = new am4core.LinearGradient();\r\n            gradient.addColor(am4core.color(\"rgba(179,71,238,1)\"));\r\n            gradient.addColor(am4core.color(\"rgba(179,71,238,0)\"));\r\n            gradient.rotation = 90;\r\n\r\n            let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n            dateAxis.baseInterval = {\r\n                \"timeUnit\": \"minute\",\r\n                \"count\": 1\r\n            };\r\n            dateAxis.tooltipDateFormat = \"HH:mm, d MMMM\";\r\n            dateAxis.renderer.grid.template.disabled = true;\r\n            dateAxis.renderer.labels.template.disabled = true;\r\n            dateAxis.tooltip.disabled = true;\r\n\r\n            let dateAxis1 = chart1.xAxes.push(new am4charts.DateAxis());\r\n            dateAxis1.baseInterval = {\r\n                \"timeUnit\": \"minute\",\r\n                \"count\": 1\r\n            };\r\n            dateAxis1.tooltipDateFormat = \"HH:mm, d MMMM\";\r\n            dateAxis1.renderer.grid.template.disabled = true;\r\n            dateAxis1.renderer.labels.template.disabled = true;\r\n            dateAxis1.tooltip.disabled = true;\r\n\r\n            let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n            valueAxis.tooltip.disabled = true;\r\n            valueAxis.renderer.baseGrid.disabled = true;\r\n            valueAxis.renderer.grid.template.disabled = true;\r\n            valueAxis.renderer.labels.template.disabled = true;\r\n            // valueAxis.title.text = \"Unique visitors\";\r\n\r\n            let valueAxis1 = chart1.yAxes.push(new am4charts.ValueAxis());\r\n            valueAxis1.tooltip.disabled = true;\r\n            valueAxis1.renderer.baseGrid.disabled = true;\r\n            valueAxis1.renderer.grid.template.disabled = true;\r\n            valueAxis1.renderer.labels.template.disabled = true;\r\n\r\n            let series = chart.series.push(new am4charts.LineSeries());\r\n            series.dataFields.dateX = \"date\";\r\n            series.dataFields.valueY = \"price\";\r\n            series.tooltip.getFillFromObject = false;\r\n            series.tooltip.background.strokeWidth = 0;\r\n            series.tooltip.label.fontSize = 14;\r\n            series.tooltip.background.fill = am4core.color(\"#0C1630\");\r\n            series.tooltip.label.fill = am4core.color(\"#FFFFFF\");\r\n            series.tooltipText = \"{date}\\nPrice: $ {price}\\nVolume: $ {volume}\";\r\n            series.fillOpacity = 0.3;\r\n            series.fill = gradient;\r\n            series.stroke = am4core.color(\"#B347EE\")\r\n            series.strokeWidth = 3;\r\n\r\n            let series1 = chart1.series.push(new am4charts.ColumnSeries());\r\n            series1.dataFields.dateX = \"date\";\r\n            series1.dataFields.valueY = \"volume\";\r\n            series1.stroke = am4core.color(\"#3924B5\")\r\n            series1.strokeWidth = 3;\r\n            series1.marginBottom = 0;\r\n\r\n            chart.cursor = new am4charts.XYCursor();\r\n            chart.cursor.lineY.opacity = 0;\r\n            chart1.cursor = new am4charts.XYCursor();\r\n            chart1.cursor.lineY.opacity = 0;\r\n            // chart.scrollbarX = new am4charts.XYChartScrollbar();\r\n            // chart.scrollbarX.series.push(series);\r\n\r\n            dateAxis.start = 0.8;\r\n            dateAxis.keepSelection = false;\r\n\r\n            dateAxis1.start = 0.8;\r\n            dateAxis1.keepSelection = false;\r\n\r\n        }\r\n    }, [chartdata]);\r\n    return (\r\n        <div>\r\n            <Box className={classes.chartHeader}>\r\n                <Box>\r\n                    <Box style={{ display: 'flex' }}>\r\n                        <Box style={{ display: 'flex', paddingLeft: 24, alignItems: 'center', flexDirection: 'column' }}>\r\n                            <img src=\"/images/farms/RBT.svg\" alt=\"rbs logo\" width={51} height={51} />\r\n                        </Box>\r\n                        <Box style={{ display: 'flex', paddingLeft: 8, flexDirection: 'column', justifyContent: 'center' }}>\r\n                            <Text style={{ fontSize: 12, color: '#FCFCFC' }}>RBT</Text>\r\n                            <Box style={{ display: 'flex', flexDirection: 'initial' }}>\r\n                                <Text style={{\r\n                                    fontSize: 34, color: '#FCFCFC', fontWeight: 600\r\n                                }}>{rbtPrice ? '$' : ''}{rbtPrice ? rbtPrice.toFixed(2) : '-'}</Text>\r\n                                <Text style={{ fontFamily: 'Poppins', fontSize: 14, color: priceChangePercent < 0 ? 'red' : '#38D047', marginTop: 15, marginLeft: 4 }}>{priceChangePercent > 0 ? '+' : ''}{priceChangePercent ? priceChangePercent.toFixed(2) : 2.1}%</Text>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                {!isMobile && <Box style={{ paddingRight: 20, paddingBottom: 22 }}>\r\n                    <Button\r\n                        onClick={() => changeStatus(1)}\r\n                        className={activeStatus === 1 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        1W\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => changeStatus(2)}\r\n                        className={activeStatus === 2 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        1M\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => changeStatus(3)}\r\n                        className={activeStatus === 3 ? classes.activeStatus : classes.deactiveStatus}\r\n                    >\r\n                        All\r\n                    </Button>\r\n                </Box>}\r\n            </Box>\r\n            {isMobile &&\r\n                <Box style={{ paddingTop: 16, margin: '0px 24px' }}>\r\n                    <Select\r\n                        value={selection}\r\n                        onChange={handleChangeSelect}\r\n                        style={{\r\n                            borderRadius: 8,\r\n                            background: \"rgba(107, 161, 255, 0.2)\",\r\n                            padding: \"0px 16px\",\r\n                            width: '100%',\r\n                            border: '1px solid rgba(107, 161, 255, 0.2)',\r\n                            height: 40\r\n                        }}\r\n                        IconComponent={\r\n                            () => (<ArrowDropDownIcon style={{ color: \"#FFFFFF\" }} />)\r\n                        }\r\n                        disableUnderline\r\n                    >\r\n                        <MenuItem className={classes.mobileMenuItem} value={1} style={{ background: '#1E215C' }}>1W</MenuItem>\r\n                        <MenuItem className={classes.mobileMenuItem} value={2}>1M</MenuItem>\r\n                        <MenuItem className={classes.mobileMenuItem} value={3}>ALL</MenuItem>\r\n                    </Select>\r\n                </Box>\r\n            }\r\n            <Chart style={{ height: 458 }}>\r\n                <div id=\"chartdiv\" style={{\r\n                    width: \"calc(100%+30px)\",\r\n                    height: 300,\r\n                    display: \"block\",\r\n                }}></div>\r\n                <div id=\"chartdiv1\" style={{\r\n                    width: \"100%\",\r\n                    height: 158,\r\n                    display: \"block\"\r\n                }}></div>\r\n            </Chart>\r\n            <Box style={{ borderTop: '1px solid #0C0720' }}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item sm={6} xs={12} style={{ borderRight: isPad ? '' : '1px solid #0C0720', borderBottom: isPad ? '1px solid #0C0720' : '', padding: 16 }}>\r\n                        <Text style={{ color: '#A0B9FB', fontSize: 14, marginBottom: 8 }}>24h Low/ 24h High</Text>\r\n                        <Row>\r\n                            ${low24}\r\n                            <div style={{ width: '55%', height: 8 }}><Progress primaryStep={Math.ceil(100 * low24 / high24)} /></div>\r\n                            ${high24}\r\n                        </Row>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12} style={{ padding: 16 }}>\r\n                        <Text style={{ color: '#A0B9FB', fontSize: 14, marginBottom: 8 }}>Market Cap</Text>\r\n                        <Row>${countUp}</Row>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default ChartComp;\r\n","import React from 'react'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport ChartComp from './ChartComp'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background: #1E215C;\r\n  margin-bottom: 24px;\r\n  min-height: 595px !important;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <ChartComp />\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card, Text } from '@robustswap-libs/uikit'\r\nimport Button from '@material-ui/core/Button';\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useExchangeStats } from 'hooks/api'\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { useFarmFromPid, usePriceBnbBusd, useTotalValue } from \"state/hooks\";\r\nimport { useGetReserves, useCirculatinSupply } from \"hooks/useTokenBalance\";\r\nimport CardValue from './CardValue'\r\nimport useStyles from \"../../../assets/styles\";\r\nimport { registerToken } from '../../../utils/wallet'\r\nimport { getRbsAddress } from '../../../utils/addressHelpers'\r\n\r\nconst StyledDexStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  padding: 16px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\nconst ValueTitle = styled(Text)`\r\n  color: #FCFCFC;\r\n  font-size: 12px;\r\n  line-height: 14px;  \r\n`\r\n\r\nconst DexStatsCard = () => {\r\n  const [totalLiquidityUSD, setTotalLiquidityUsd] = useState(new BigNumber(0))\r\n  const chainId = 56\r\n  const farm1 = useFarmFromPid(1)\r\n  const bnbReserve = useGetReserves(farm1.lpAddresses[chainId])\r\n  let bnbPrice = usePriceBnbBusd()\r\n  if (!bnbPrice.isNaN() && bnbPrice.toString() !== '0') {\r\n    bnbPrice = new BigNumber(1).div(bnbPrice)\r\n  }\r\n  const rbs1 = bnbReserve.times(bnbPrice).times(new BigNumber(2))\r\n  const farm2 = useFarmFromPid(0)\r\n  const busdReserve = useGetReserves(farm2.lpAddresses[chainId])\r\n  const rbs2 = busdReserve.times(new BigNumber(2))\r\n\r\n  useEffect(() => {\r\n    if (!rbs1.isNaN() && !rbs2.isNaN() && rbs1 !== new BigNumber(0) && rbs2 !== new BigNumber(0)) {\r\n      setTotalLiquidityUsd(rbs1.plus(rbs2))\r\n    }\r\n  }, [rbs1, rbs2])\r\n\r\n  const TranslateString = useI18n()\r\n  const classes = useStyles.chart();\r\n  const totalValue = useTotalValue()\r\n  const data = useExchangeStats()\r\n  const ZERO = new BigNumber(0)\r\n  const volumeUSD = data ? new BigNumber(data?.data?.volume_USD) : ZERO\r\n\r\n  const registerNativeToken = useCallback(async () => {\r\n    try {\r\n      await registerToken(getRbsAddress(), 'RBS', 18, `https://robustswap.com/images/farms/RBS.png`)\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(688, 'Overview')}</Text>\r\n        <Button onClick={registerNativeToken} className={classes.metamaskButton} style={{ marginTop: 0, width: 89, borderRadius: 28, border: '1px solid #5F47EE', color: '#5F47EE', fontWeight: 600, fontSize: 18, padding: '4px 24px' }}>\r\n          <img style={{ marginRight: 8 }} width={16} src=\"/images/wallet/metamask.png\" alt=\"metamask logo\" /> +\r\n        </Button>\r\n      </Header>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(10035, 'Total Liquidity')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={totalLiquidityUSD?.toNumber()} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(10036, '24H Volume')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={getBalanceNumber(volumeUSD, 0)} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <StyledDexStatsCard style={{ marginRight: 0 }}>\r\n            <Row>\r\n              <ValueTitle>{TranslateString(297, 'TVL')}</ValueTitle>\r\n            </Row>\r\n            <Row>\r\n              <CardValue weight={800} fontSize=\"20px\" value={totalValue.toNumber()} decimals={0} prefix=\"$\" />\r\n            </Row>\r\n          </StyledDexStatsCard>\r\n        </Grid>\r\n      </Grid></>\r\n  )\r\n}\r\n\r\nexport default DexStatsCard\r\n","import { useEffect, useState } from 'react'\r\n\r\n/*\r\n * Due to Cors the api was forked and a proxy was created\r\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\r\n */\r\nexport const baseUrl = 'https://api.robustswap.com/api'\r\nexport const exchangeBaseUrl = 'https://api.robustswap.info/api'\r\n\r\n/* eslint-disable camelcase */\r\n\r\nexport interface TradePair {\r\n  swap_pair_contract: string\r\n  base_symbol: string\r\n  quote_symbol: string\r\n  last_price: number\r\n  base_volume_24_h: number\r\n  quote_volume_24_h: number\r\n}\r\n\r\nexport interface ApiStatResponse {\r\n  update_at: string\r\n  '24h_total_volume': number\r\n  total_value_locked: number\r\n  total_value_locked_all: number\r\n  trade_pairs: {\r\n    [key: string]: TradePair\r\n  }\r\n}\r\n\r\nexport interface ApiExchangeStatResponse {\r\n  updated_at: string\r\n  data: {\r\n    total_liquidity_BNB: string\r\n    total_liquidity_USD: string\r\n    total_volume_BNB: string\r\n    total_volume_USD: string\r\n    volume_BNB: string\r\n    volume_USD: string\r\n    tx_count: number\r\n  }\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<ApiStatResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${baseUrl}/stat`)\r\n        const responsedata: ApiStatResponse = await response.json()\r\n\r\n        setData(responsedata)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n\r\nexport const useExchangeStats = () => {\r\n  const [data, setData] = useState<ApiExchangeStatResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${exchangeBaseUrl}/stats`)\r\n        const responseData: ApiExchangeStatResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  useBurnedBalance,\r\n  useMasterChefBalance,\r\n  useMaximumSupply,\r\n  useMintedSupply,\r\n  useMintedBurned,\r\n  useTaxTotal,\r\n  useRbsPerBlock,\r\n  useTotalSupply\r\n} from 'hooks/useTokenBalance'\r\nimport { usePriceRbsBusd } from 'state/hooks'\r\nimport { getRbsAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\nimport { useTotalLockedUpRewards } from '../../../hooks/useFarmsWithBalance'\r\n\r\nconst StyledSupplyStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  border-radius: 0px;\r\n  border-right: 1px solid #151745;\r\n  border-bottom:1px solid #151745;\r\n  padding: 16px 0px 16px 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  color: #A0B9FB;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n  padding-right:16px;\r\n`\r\nconst SupplyStatsCard = () => {\r\n  const maximumSupply = useMaximumSupply()\r\n  const mintedSupply = useMintedSupply()\r\n  const mintedBurned = useMintedBurned()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getRbsAddress())\r\n  const masterChefBalance = useMasterChefBalance(getRbsAddress())\r\n  const totalLocked = useTotalLockedUpRewards()\r\n  const totalLockedIncludeMasterChef = totalLocked\r\n  const taxTotal = useTaxTotal()\r\n  const taxValue = usePriceRbsBusd().times(taxTotal)\r\n  const rbsPerBlock = useRbsPerBlock()\r\n  const circSupply = totalSupply\r\n    ? totalSupply.minus(burnedBalance.plus(totalLockedIncludeMasterChef))\r\n    : new BigNumber(0)\r\n  const cakeSupply = getBalanceNumber(circSupply)\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n  // const volumeUSD = data ? new BigNumber(data?.data?.volume_USD) : ZERO\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ paddingLeft: 0 }}>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopLeftRadius: 16, borderTopRightRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Maximum\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(maximumSupply, 18)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopRightRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Minted\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(mintedSupply)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Pending Harvest\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(totalLockedIncludeMasterChef)} decimals={2} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Circulation\r\n            <CardValue fontSize=\"16px\" value={cakeSupply} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Taxed Total\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(taxTotal)} decimals={2} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard>\r\n          <Row>\r\n            Tax Value\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(taxValue)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Emission per block\r\n            <CardValue fontSize=\"16px\" value={rbsPerBlock.div(new BigNumber(10 ** 18)).toNumber()} decimals={2} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 16 : 0, borderBottomRightRadius: 16 }}>\r\n          {/* <Row>\r\n            <ValueTitle>{TranslateString(10036, '24H Volume')}</ValueTitle>\r\n          </Row> */}\r\n          <Row>\r\n            Burned\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(mintedBurned, 0)} decimals={0} />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default SupplyStatsCard","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport {\r\n  useSellTax,\r\n  useBuyTax,\r\n  useTransferTaxRate,\r\n  useMaxTransferLimitAmount\r\n} from 'hooks/useTokenBalance'\r\nimport CardValue from './CardValue'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n\r\nconst StyledSupplyStatsCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  border-radius: 0px;\r\n  border-right: 1px solid #151745;\r\n  border-bottom:1px solid #151745;\r\n  padding: 16px 0px 16px 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  color: #A0B9FB;\r\n  padding-right: 16px;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n`\r\nconst SupplyStatsCard = () => {\r\n  // const TranslateString = useI18n()\r\n  const sellTax = useSellTax()\r\n  const buyTax = useBuyTax()\r\n  const transferTax = useTransferTaxRate()\r\n  const limitAmount = useMaxTransferLimitAmount()\r\n  const isMobile = useMedia('(max-width: 760px)')\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopLeftRadius: 16, borderTopRightRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Sell Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(sellTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderTopRightRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Buy Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(buyTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomLeftRadius: isMobile ? 0 : 16 }}>\r\n          <Row>\r\n            Transfer Tax\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(transferTax, 2)} decimals={0} suffix=\"%\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} style={{ padding: 0 }}>\r\n        <StyledSupplyStatsCard style={{ borderBottomRightRadius: 16, borderBottomLeftRadius: isMobile ? 16 : 0 }}>\r\n          <Row>\r\n            Amount Limit\r\n            <CardValue fontSize=\"16px\" value={getBalanceNumber(limitAmount, 18)} decimals={2} suffix=\" RBS\" />\r\n          </Row>\r\n        </StyledSupplyStatsCard>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default SupplyStatsCard","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from \"react-router-dom\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Card, Text } from '@robustswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useFarms, usePriceBnbBusd, usePriceEthBusd, usePriceRbsBusd, usePriceUsdcBusd, usePriceUsdtBusd } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledActivitiesCard = styled(Card)`\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  background: #1E215C;\r\n  padding: 16px 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: space-between;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CalculateApr = (farm: Farm, rbsPrice: BigNumber, bnbPrice: BigNumber, ethPrice: BigNumber, usdcPrice: BigNumber, usdtPrice: BigNumber) => {\r\n\r\n  console.log(\"block:\", farm.rbsPerBlock)\r\n  const cakeRewardPerBlock = new BigNumber(farm.rbsPerBlock || 1)\r\n    .times(new BigNumber(farm.poolWeight))\r\n    .div(new BigNumber(10).pow(18))\r\n\r\n  console.log(\"poolWeight:\", farm.poolWeight)\r\n  console.log(\"cakeRewardPerBlock:\", cakeRewardPerBlock.toString())\r\n  // cakeRewardPerBlock: 0.001\r\n\r\n  const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n  // cakeRewardPerYear: 10512\r\n  console.log(\"cakeRewardPerYear:\", cakeRewardPerYear.toString())\r\n  let apy = rbsPrice.times(cakeRewardPerYear)\r\n  console.log(\"apy:\", apy.toString())\r\n  let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\r\n  console.log(\"totalValue:\", totalValue.toString())\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n    totalValue = totalValue.times(bnbPrice)\r\n  }\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n    totalValue = totalValue.times(ethPrice)\r\n  }\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.USDC) {\r\n    totalValue = totalValue.times(usdcPrice)\r\n  }\r\n\r\n  if (farm.quoteTokenSymbol === QuoteToken.USDT) {\r\n    totalValue = totalValue.times(usdtPrice)\r\n  }\r\n  const exception = farm.lpTotalInQuoteToken?.toString() === '0' ? 100000000 : 1\r\n\r\n  if (totalValue.comparedTo(0) > 0) {\r\n    apy = apy.div(totalValue).times(100)\r\n  }\r\n  else apy = apy.div(exception)\r\n  console.log(\"apy:\", apy.toString())\r\n  return apy.toNumber()\r\n}\r\n\r\nconst ActivitiesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const farms = useFarms()\r\n  const rbsPrice = usePriceRbsBusd()\r\n  let bnbPrice = usePriceBnbBusd()\r\n  bnbPrice = new BigNumber(1).div(usePriceBnbBusd())\r\n  const ethPrice = usePriceEthBusd()\r\n  const usdcPrice = usePriceUsdcBusd()\r\n  const usdtPrice = usePriceUsdtBusd()\r\n  const [rbsBusd, setRbsBusd] = useState(0)\r\n  const [rbtBnb, setRbtBnb] = useState(0)\r\n  const [rbs, setRbs] = useState(0)\r\n  const [rbt, setRbt] = useState(0)\r\n  useEffect(() => {\r\n    let val = CalculateApr(farms[0], rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice)\r\n    setRbsBusd(val)\r\n    val = CalculateApr(farms[1], rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice)\r\n    setRbtBnb(val)\r\n    val = CalculateApr(farms[24], rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice)\r\n    setRbs(val)\r\n    val = CalculateApr(farms[25], rbsPrice, bnbPrice, ethPrice, usdcPrice, usdtPrice)\r\n    setRbt(val)\r\n  }, [bnbPrice, rbsPrice, ethPrice, usdcPrice, usdtPrice, farms])\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item sm={6} xs={12} >\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>Top Farms</Text>\r\n        <StyledActivitiesCard>\r\n          <Link to='/farms'>\r\n            <Row>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBS.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" />\r\n                <img src=\"/images/farms/BUSD.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginLeft: -8, marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBS-BUSD')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbsBusd} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n            <Row style={{ marginBottom: 0 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBT.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" />\r\n                <img src=\"/images/farms/BNB.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginLeft: -8, marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBT-BNB')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbtBnb} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n          </Link>\r\n        </StyledActivitiesCard>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12} >\r\n        <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>Top Pools</Text>\r\n        <StyledActivitiesCard>\r\n          <Link to='/pools'>\r\n            <Row>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBS.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBS')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbs} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n            <Row style={{ marginBottom: 0 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src=\"/images/farms/RBT.png\" alt=\"rbs\" width=\"32px\" height=\"32px\" style={{ marginRight: 8 }} />\r\n                <Text fontSize=\"16px\">{TranslateString(99999, 'RBT')}</Text>\r\n              </div>\r\n              <CardValue fontSize=\"16px\" value={rbt} decimals={0} suffix=\"% APR\" />\r\n            </Row>\r\n          </Link>\r\n        </StyledActivitiesCard>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ActivitiesCard\r\n","import React from 'react'\r\nimport { Card, CardBody } from '@robustswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { Timeline } from 'react-twitter-widgets'\r\n// import useI18n from 'hooks/useI18n'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background-color: #151745;\r\n  border: 8px;\r\n  border-bottom-left-radius: 0px;\r\n  border-bottom-right-radius: 0px;\r\n  overflow-y: scroll;\r\n`\r\n\r\ninterface TwitterProps {\r\n  height: number\r\n  isMobile: boolean\r\n}\r\n\r\nconst TwitterCard: React.FC<TwitterProps> = ({ height = 0, isMobile }) => {\r\n\r\n  return (\r\n    <StyledTwitterCard style={{ maxHeight: height <= 0 ? 'auto' : height }}>\r\n      <CardBody>\r\n        <Timeline\r\n          dataSource={{\r\n            sourceType: 'profile',\r\n            screenName: 'RobustProtocol',\r\n          }}\r\n          options={{\r\n            chrome: 'transparent, noheader, nofooter, noscrollbar',\r\n            theme: 'dark',\r\n            borderColor: '#1f2432',\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  )\r\n}\r\n\r\nexport default TwitterCard\r\n","import React from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport TwitterCard from './TwitterCard'\r\n\r\nconst StyledLimitStatsCard = styled(Card) <{ height: string, isMobile: boolean }>`\r\n  width: 100%;\r\n  max-width: ${({ isMobile }) => isMobile ? '' : '320px !important'};\r\n  border-radius: 16px;\r\n  background: #1E215C;\r\n  padding: 16px;\r\n  height: ${({ height }) => height};\r\n`\r\n\r\nconst LabelTitle = styled.div`\r\n  margin-bottom:8px;\r\n  color: #A0B9FB;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n`\r\n\r\nconst LabelSubTitle = styled.div`\r\n  margin-bottom:8px;\r\n  color: #FCFCFC;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n`\r\n\r\ninterface LimitProps {\r\n  height: number\r\n}\r\n\r\nconst LimitStatsCard: React.FC<LimitProps> = ({ height = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  const isMobile = useMedia('(max-width: 970px)')\r\n\r\n  return (\r\n    <StyledLimitStatsCard height={height <= 0 ? 'auto' : `${height}px`} isMobile={isMobile}>\r\n      <LabelTitle>{TranslateString(10039, 'Follow us on twitter')}</LabelTitle>\r\n      <LabelSubTitle>@robustprotocol</LabelSubTitle>\r\n      <TwitterCard height={height <= 0 ? 0 : height - 90} isMobile={isMobile} />\r\n    </StyledLimitStatsCard>\r\n  )\r\n}\r\n\r\nexport default LimitStatsCard","import React, { useEffect, useState } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@robustswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport { usePriceRbsBusd, usePriceRbtBusd } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from 'hooks/useGetDocumentTitlePrice'\r\nimport FarmStakingCard from './components/FarmStakingCard'\r\nimport LotteryCard from './components/LotteryCard'\r\nimport FarmJoinCard from './components/FarmJoinCard'\r\nimport CakeStats from './components/CakeStats'\r\nimport { useReferralCode } from '../../state/hooks'\r\nimport DexStatsCard from './components/DexStatsCard'\r\nimport SupplyStatsCard from './components/SupplyStatsCard'\r\nimport LimitStatsCard from './components/LimitStatsCard'\r\nimport ActivitiesCard from './components/ActivitiesCard'\r\nimport FollowStatsCard from './components/FollowStatsCard'\r\nimport 'assets/css/chart.css'\r\n\r\nconst Hero = styled.div<{ isMobile: boolean }>`\r\n  background-image: ${({ isMobile }) => isMobile ? \"url('/images/header-welcome-bg-mobile.svg')\" : \"url('/images/header-welcome-bg.png')\"};\r\n  background-position: center, center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  margin-bottom: 25px;\r\n  margin-top: ${({ isMobile }) => isMobile ? \"-15px\" : \"0px\"};\r\n\r\n  height: ${({ isMobile }) => isMobile ? \"320px\" : \"360px\"};\r\n  padding-top: ${({ isMobile }) => isMobile ? \"40px\" : \"0px\"};\r\n`\r\nconst StyledHeading = styled(Heading) <{ isMobile: boolean }>`\r\n  font-weight: 800;\r\n  font-size: ${({ isMobile }) => isMobile ? \"48px\" : \"72px\"};\r\n  line-height: ${({ isMobile }) => isMobile ? \"48px\" : \"80px\"};\r\n  letter-spacing: -0.5px;\r\n  color: #FCFCFC;\r\n  width: ${({ isMobile }) => isMobile ? \"343px\" : \"543px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 24px;\r\n`\r\nconst SubTitle = styled(Text) <{ isMobile: boolean }>`\r\n  font-family: Poppins;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #FCFCFC;\r\n  width: ${({ isMobile }) => isMobile ? \"343px\" : \"543px\"};\r\n  margin-left: ${({ isMobile }) => isMobile ? \"24px\" : \"80px\"};\r\n  margin-top: 16px;\r\n`\r\nconst LogTitle = styled(Text)`\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #FCFCFC;\r\n`\r\nconst LogPrice = styled(Text)`\r\n  fontWeight: 300;\r\n  fontSize: 16px;\r\n  line-height: 24px;\r\n  color: #FCFCFC;\r\n  margin-right: 16px;\r\n`\r\nconst Home: React.FC = () => {\r\n\r\n  useGetDocumentTitlePrice('Home')\r\n  const TranslateString = useI18n()\r\n  const [height, setHeight] = useState(0)\r\n  useReferralCode()\r\n  const isMobile = useMedia('(max-width: 970px)')\r\n  const rbsPrice = usePriceRbsBusd().toFixed(2)\r\n  const rbtPrice = usePriceRbtBusd().toFixed(2)\r\n\r\n  useEffect(() => {\r\n    const leftTab = document.getElementsByClassName(\"leftTab\")[0]\r\n    const stakingCard = document.getElementsByClassName(\"staking\")[0]\r\n    const joinCard = document.getElementsByClassName(\"join\")[0]\r\n    setHeight(leftTab?.clientHeight - stakingCard?.clientHeight - joinCard?.clientHeight - 96)\r\n  }, [isMobile])\r\n\r\n  return (\r\n    <div style={{ paddingBottom: isMobile ? 64 : 0 }}>\r\n      <Hero isMobile={isMobile}>\r\n        {!isMobile && <div style={{ display: 'flex', alignItems: 'center', padding: '18px 48px 16px 40px' }}>\r\n          <div>\r\n            <LogTitle>\r\n              RBS\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbsPrice}\r\n            </LogPrice>\r\n          </div>\r\n          <div style={{ height: '38px', borderRight: '1px solid #E2E9EF', display: 'block' }}>\r\n          </div>\r\n          <div style={{ marginLeft: 16 }}>\r\n            <LogTitle>\r\n              RBT\r\n            </LogTitle>\r\n            <LogPrice>\r\n              ${rbtPrice}\r\n            </LogPrice>\r\n          </div>\r\n        </div>}\r\n        <StyledHeading isMobile={isMobile}>\r\n          {TranslateString(576, 'Welcome to ROBUSTSWAP')}\r\n        </StyledHeading>\r\n        <SubTitle isMobile={isMobile}>\r\n          {TranslateString(578, 'A hyper-deflationary decentralized exchange with yield farming designed to optimize profitability.')}\r\n        </SubTitle>\r\n      </Hero>\r\n      <Page style={{ marginLeft: isMobile ? '24px' : '80px', marginRight: isMobile ? '24px' : '80px' }}>\r\n        <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n          <div className=\"leftTab\" style={{ flexGrow: 1 }}>\r\n            <div>\r\n              <DexStatsCard />\r\n              <CakeStats />\r\n            </div>\r\n            <div style={{ marginBottom: 32 }}>\r\n              <ActivitiesCard />\r\n            </div>\r\n            {isMobile && <FarmJoinCard />}\r\n            <div style={{ marginBottom: 48 }}>\r\n              <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(733, 'RBS Supply Stats')}</Text>\r\n              <SupplyStatsCard />\r\n            </div>\r\n            <div style={{ marginBottom: isMobile ? 48 : 0 }}>\r\n              <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#A0B9FB', paddingBottom: 16 }}>{TranslateString(731, 'RBS Transaction Limit')}</Text>\r\n              <LimitStatsCard />\r\n            </div>\r\n            {isMobile && <div>\r\n              <FollowStatsCard height={460} />\r\n            </div>}\r\n          </div>\r\n          {!isMobile && <div style={{\r\n            flexGrow: 0,\r\n            marginLeft: \"16px\"\r\n          }}>\r\n            <div className=\"staking\" style={{ opacity: 1, marginBottom: 48 }}>\r\n              <FarmStakingCard />\r\n            </div>\r\n            <div className=\"join\" style={{ opacity: 1, marginBottom: 48 }}>\r\n              <LotteryCard />\r\n            </div>\r\n            <div className=\"twitter\">\r\n              <FollowStatsCard height={height} />\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      </Page >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the ethereum provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\r\n  const refEth = useRef(ethereum)\r\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\r\n\r\n  useEffect(() => {\r\n    if (ethereum !== refEth.current) {\r\n      setweb3(new Web3(ethereum || httpProvider))\r\n      refEth.current = ethereum\r\n    }\r\n  }, [ethereum])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useEffect, useState } from 'react'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getMasterChefAddress,\r\n  getRbsAddress,\r\n  getReferralAddress,\r\n  getCakeRouterAddress,\r\n} from 'utils/addressHelpers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport ifo from 'config/abi/ifo.json'\r\nimport ens from 'config/abi/ens-registrar.json'\r\nimport ens_resolver from 'config/abi/ens-public-resolver.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport referral from 'config/abi/referral.json'\r\nimport cakeRouter from 'config/abi/cakeRouter.json'\r\nimport pair from 'config/abi/pair.json'\r\n\r\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = useWeb3()\r\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\r\n\r\n  useEffect(() => {\r\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\r\n  }, [abi, address, contractOptions, web3])\r\n\r\n  return contract\r\n}\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const ifoAbi = (ifo as unknown) as AbiItem\r\n  return useContract(ifoAbi, address)\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const erc20Abi = (erc20 as unknown) as AbiItem\r\n  return useContract(erc20Abi, address)\r\n}\r\n\r\nexport const useCake = () => {\r\n  return useERC20(getRbsAddress())\r\n}\r\n\r\nexport const usePancakeRabbits = (address: string) => {\r\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\r\n  return useContract(pancakeRabbitsAbi, address)\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const abi = (masterChef as unknown) as AbiItem\r\n  return useContract(abi, getMasterChefAddress())\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  const abi = (rawAbi as unknown) as AbiItem\r\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\r\n}\r\n\r\nexport const useReferral = () => {\r\n  const abi = (referral as unknown) as AbiItem\r\n  return useContract(abi, getReferralAddress())\r\n}\r\n\r\nexport const useCakeRouter = () => {\r\n  const abi = (cakeRouter as unknown) as AbiItem\r\n  return useContract(abi, getCakeRouterAddress())\r\n}\r\n\r\nexport const usePath = (address: string) => {\r\n  const abi = (pair as unknown) as AbiItem\r\n  return useContract(abi, address)\r\n}\r\n\r\nexport default useContract\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@robustswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\n\r\nconst UnlockButton = (props) => {\r\n\r\n  // const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, \"0px\", reset)\r\n  const self = props\r\n  const text = self.title ? self.title : 'UNLOCK WALLET'\r\n\r\n  return (\r\n    <Button variant=\"subtle\" onClick={onPresentConnectModal} {...props}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport pairABI from 'config/abi/pair.json'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getRbsAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMasterChefBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const bal = await cakeContract.methods.balanceOf(getMasterChefAddress()).call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useMaxTransferLimitAmount = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maxTransferLimitAmount, setMaxTransferLimitAmount] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaxTransferLimitAmount() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const amount = await cakeContract.methods.maxTransferLimitAmount().call()\r\n      setMaxTransferLimitAmount(new BigNumber(amount))\r\n    }\r\n\r\n    fetchMaxTransferLimitAmount()\r\n  }, [slowRefresh])\r\n\r\n  return maxTransferLimitAmount\r\n}\r\n\r\nexport const useMaximumSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [maximumSupply, setMaximumSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMaximumSupply() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const maxSupply = await cakeContract.methods.MAXIMUM_SUPPLY().call()\r\n      setMaximumSupply(new BigNumber(maxSupply))\r\n    }\r\n\r\n    fetchMaximumSupply()\r\n  }, [slowRefresh])\r\n\r\n  return maximumSupply\r\n}\r\n\r\nexport const useMintedSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedSupply, setMintedSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedSupply() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const mintSupply = await cakeContract.methods.mintedSupply().call()\r\n      setMintedSupply(new BigNumber(mintSupply))\r\n    }\r\n\r\n    fetchMintedSupply()\r\n  }, [slowRefresh])\r\n\r\n  return mintedSupply\r\n}\r\n\r\nexport const useMintedBurned = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [mintedBurned, setMintedBurned] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedBurned() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const mintBurned = await cakeContract.methods.mintedBurned().call()\r\n      setMintedBurned(new BigNumber(mintBurned))\r\n    }\r\n\r\n    fetchMintedBurned()\r\n  }, [slowRefresh])\r\n\r\n  return mintedBurned\r\n}\r\n\r\nexport const useSellTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [sellTax, setSellTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSellTax() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const stax = await cakeContract.methods.transferTaxRateSell().call()\r\n      setSellTax(new BigNumber(stax))\r\n    }\r\n\r\n    fetchSellTax()\r\n  }, [slowRefresh])\r\n\r\n  return sellTax\r\n}\r\n\r\nexport const useBuyTax = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [buyTax, setBuyTax] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchbuyTax() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const btax = await cakeContract.methods.transferTaxRateBuy().call()\r\n      setBuyTax(new BigNumber(btax))\r\n    }\r\n\r\n    fetchbuyTax()\r\n  }, [slowRefresh])\r\n\r\n  return buyTax\r\n}\r\n\r\nexport const useTaxTotal = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [taxTotal, setTaxTotal] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchTaxTotal() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const tax = await cakeContract.methods.mintedTaxed().call()\r\n      setTaxTotal(new BigNumber(tax))\r\n    }\r\n\r\n    fetchTaxTotal()\r\n  }, [slowRefresh])\r\n\r\n  return taxTotal\r\n}\r\n\r\nexport const useTransferTaxRate = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [transferTaxRate, setTransferTaxRate] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchTransferTaxRate() {\r\n      const cakeContract = getContract(cakeABI, getRbsAddress())\r\n      const rate = 0  // await cakeContract.methods.transferTaxRate().call()\r\n      setTransferTaxRate(new BigNumber(rate))\r\n    }\r\n\r\n    fetchTransferTaxRate()\r\n  }, [slowRefresh])\r\n\r\n  return transferTaxRate\r\n}\r\n\r\nexport const useRbsPerBlock = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [rbsPBlock, setrbsPBlock] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchRbsPBlock() {\r\n      const cakeContract = getContract(masterChefABI, getMasterChefAddress())\r\n      const rbs = await cakeContract.methods.rbsPerBlock().call()\r\n      setrbsPBlock(new BigNumber(rbs))\r\n    }\r\n\r\n    fetchRbsPBlock()\r\n  }, [slowRefresh])\r\n\r\n  return rbsPBlock\r\n}\r\n\r\nexport const useGetReserves = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [reserves, setReserves] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchGetReserves() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.getReserves().call()\r\n      setReserves(new BigNumber(rbs?._reserve1).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchGetReserves()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return reserves\r\n}\r\n\r\nexport const useCirculatinSupply = (lpAddress: string) => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [supply, setSupply] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    async function fetchSupply() {\r\n      const cakeContract = getContract(pairABI, lpAddress)\r\n      const rbs = await cakeContract.methods.totalSupply().call()\r\n      setSupply(new BigNumber(rbs).div(new BigNumber(10 ** 18)))\r\n    }\r\n\r\n    fetchSupply()\r\n  }, [slowRefresh, lpAddress])\r\n\r\n  return supply\r\n}\r\n\r\nexport default useTokenBalance\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        mainContainer: {\r\n            padding: theme.spacing(1, 6),\r\n            background: theme.palette.background.default,\r\n            height: \"calc(100vh - 64px)\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: theme.spacing(1, 4)\r\n            }\r\n        },\r\n        cardWrapper: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(16, 14),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(8, 4)\r\n            }\r\n        },\r\n        cardWrapper1: {\r\n            width: \"calc(100% - 423px - 24px)\",\r\n            marginRight: 24,\r\n            hegiht: \"368px\",\r\n            padding: theme.spacing(5, 4),\r\n            background: theme.palette.background.paper,\r\n            border: \"1px solid #464544\",\r\n            borderRadius: 16,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                marginRight: 0,\r\n                padding: theme.spacing(3, 2),\r\n                textAlign: \"left\"\r\n            }\r\n        },\r\n        pageTitle: {\r\n            fontSize: 34,\r\n            fontWeight: 500,\r\n            color: '#FF6B2A',\r\n            fontFamily: \"Poppin\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 32\r\n            }\r\n        },\r\n        subPageTitle: {\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            color: \"#F0EFEF\",\r\n            paddingBottom: theme.spacing(5.3)\r\n        },\r\n        bgWrapper: {\r\n            width: \"431px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"unset\",\r\n                marginBottom: theme.spacing(5)\r\n            }\r\n        },\r\n        bodyWrapper: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        walletButton: {\r\n            background: '#FF6B2A',\r\n            color: '#FCFCFC',\r\n            padding: \"16px 48px\",\r\n            borderRadius: 8,\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\"\r\n        },\r\n        statsValue: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: theme.spacing(3.6),\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: \"column\",\r\n            }\r\n        },\r\n        switchButton: {\r\n            background: 'transparent',\r\n            border: \"1px solid rgba(107, 161, 255, 0.2)\",\r\n            borderRadius: 8,\r\n            padding: theme.spacing(1, 5),\r\n            fontSize: 14,\r\n            fontFamily: \"Poppin\",\r\n            flex: 1,\r\n            marginRight: 8\r\n        },\r\n        activeSwitcher: {\r\n            background: \"rgba(107, 161, 255, 0.2)\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import accountStyles from \"./_account\";\r\nimport baseStyles from \"./_base\";\r\nimport chartStyles from \"./_chart\";\r\n\r\nconst useStyles = {\r\n    account: accountStyles,\r\n    base: baseStyles,\r\n    chart: chartStyles,\r\n}\r\n\r\nexport default useStyles;","\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: \"column\"\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 64,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n    })\r\n);\r\n\r\nexport default useStyles;","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartHeader: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"end\",\r\n            width: \"100%\",\r\n            paddingTop: 24\r\n        },\r\n        activeStatus: {\r\n            background: \"#6C60F7 !important\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        deactiveStatus: {\r\n            border: \"1px solid #6C60F7\",\r\n            background: \"transparent\",\r\n            marginRight: 8,\r\n            borderRadius: 8\r\n        },\r\n        changePercent: {\r\n            display: \"flex\",\r\n            \"& p\": {\r\n                fontSize: \"16px !important\",\r\n                paddingRight: theme.spacing(2)\r\n            }\r\n        },\r\n        chartTitle: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: \"#9DD1B2\"\r\n        },\r\n        currentChartValue: {\r\n            fontSize: 48,\r\n            fontWeight: 500,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 36\r\n            }\r\n        },\r\n        tabList: {\r\n            \"& span\": {\r\n                fontSize: 14,\r\n                fontWeight: 500,\r\n            },\r\n            \"& button\": {\r\n                minWidth: \"unset\"\r\n            },\r\n            \"& .MuiTabs-indicator\": {\r\n                height: 4,\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n\r\n        },\r\n        select: {\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n        },\r\n        detailChartTabs: {\r\n            padding: theme.spacing(4),\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(0),\r\n                \"& button\": {\r\n                    padding: \"6px 8px\"\r\n                }\r\n\r\n            }\r\n        },\r\n        metamaskButton: {\r\n            border: '1px solid #293D71',\r\n            borderRadius: 20,\r\n            marginTop: 8\r\n        },\r\n        mobileMenuItem: {\r\n            fontFamily: 'Poppin',\r\n            fontSize: 14\r\n        }\r\n    })\r\n);\r\nexport default useStyles;","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, referrer) => {\r\n  console.log(\"amount:\", amount)\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), referrer)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 1\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.robustswap.com'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 5\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\nimport { useMasterchef } from './useContract'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n  nextHarvestUntil: number\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  // const { account } = useWallet()\r\n  const { account } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const callsBalance = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRBS',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const callsHarvest = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'userInfo',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResultsBalance = await multicall(masterChefABI, callsBalance)\r\n      const rawResultsHarvest = await multicall(masterChefABI, callsHarvest)\r\n      const results = farmsConfig.map((farm, index) => ({\r\n        ...farm,\r\n        balance: new BigNumber(rawResultsBalance[index]),\r\n        nextHarvestUntil: rawResultsHarvest[index].nextHarvestUntil.toNumber(),\r\n      }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport const useTotalLockedUpRewards = () => {\r\n  const [totalLockedUpRewards, setTotalLockedUpRewards] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalLockedUpRewards() {\r\n      const locked = await masterChefContract.methods.totalLockedUpRewards().call()\r\n      console.log(\"locked:\", locked)\r\n      setTotalLockedUpRewards(new BigNumber(locked))\r\n    }\r\n\r\n    fetchTotalLockedUpRewards()\r\n  }, [slowRefresh, masterChefContract])\r\n\r\n  return totalLockedUpRewards\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n"],"sourceRoot":""}